// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_motion__Actuate_TweenTimer
#include <motion/_Actuate/TweenTimer.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ddff7c747423f6c3_641_new,"motion._Actuate.TweenTimer","new",0x977c8172,"motion._Actuate.TweenTimer.new","motion/Actuate.hx",641,0xcac92ba8)
namespace motion{
namespace _Actuate{

void TweenTimer_obj::__construct(Float progress){
            	HX_STACKFRAME(&_hx_pos_ddff7c747423f6c3_641_new)
HXDLIN( 641)		this->progress = progress;
            	}

Dynamic TweenTimer_obj::__CreateEmpty() { return new TweenTimer_obj; }

void *TweenTimer_obj::_hx_vtable = 0;

Dynamic TweenTimer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TweenTimer_obj > _hx_result = new TweenTimer_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool TweenTimer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1c09dc20;
}


TweenTimer_obj::TweenTimer_obj()
{
}

hx::Val TweenTimer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { return hx::Val( progress ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TweenTimer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { progress=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TweenTimer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TweenTimer_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(TweenTimer_obj,progress),HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TweenTimer_obj_sStaticStorageInfo = 0;
#endif

static ::String TweenTimer_obj_sMemberFields[] = {
	HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86"),
	::String(null()) };

static void TweenTimer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TweenTimer_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TweenTimer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TweenTimer_obj::__mClass,"__mClass");
};

#endif

hx::Class TweenTimer_obj::__mClass;

void TweenTimer_obj::__register()
{
	hx::Object *dummy = new TweenTimer_obj;
	TweenTimer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("motion._Actuate.TweenTimer","\x80","\xa0","\xa6","\xdd");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TweenTimer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TweenTimer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TweenTimer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TweenTimer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TweenTimer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TweenTimer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace motion
} // end namespace _Actuate
