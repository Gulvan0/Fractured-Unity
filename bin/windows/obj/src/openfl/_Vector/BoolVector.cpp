// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_openfl__Vector_BoolVector
#include <openfl/_Vector/BoolVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_311_new,"openfl._Vector.BoolVector","new",0x3a8665a9,"openfl._Vector.BoolVector.new","openfl/Vector.hx",311,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_329_concat,"openfl._Vector.BoolVector","concat",0x25e9276b,"openfl._Vector.BoolVector.concat","openfl/Vector.hx",329,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_354_copy,"openfl._Vector.BoolVector","copy",0xf3d4c64c,"openfl._Vector.BoolVector.copy","openfl/Vector.hx",354,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_361_get,"openfl._Vector.BoolVector","get",0x3a8115df,"openfl._Vector.BoolVector.get","openfl/Vector.hx",361,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_374_indexOf,"openfl._Vector.BoolVector","indexOf",0xd8a0b692,"openfl._Vector.BoolVector.indexOf","openfl/Vector.hx",374,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_393_insertAt,"openfl._Vector.BoolVector","insertAt",0xaf7e1ea3,"openfl._Vector.BoolVector.insertAt","openfl/Vector.hx",393,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_404_iterator,"openfl._Vector.BoolVector","iterator",0x80f8ec05,"openfl._Vector.BoolVector.iterator","openfl/Vector.hx",404,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_411_join,"openfl._Vector.BoolVector","join",0xf8753e81,"openfl._Vector.BoolVector.join","openfl/Vector.hx",411,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_416_lastIndexOf,"openfl._Vector.BoolVector","lastIndexOf",0xfa91835c,"openfl._Vector.BoolVector.lastIndexOf","openfl/Vector.hx",416,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_434_pop,"openfl._Vector.BoolVector","pop",0x3a87f2da,"openfl._Vector.BoolVector.pop","openfl/Vector.hx",434,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_449_push,"openfl._Vector.BoolVector","push",0xfc711c71,"openfl._Vector.BoolVector.push","openfl/Vector.hx",449,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_462_removeAt,"openfl._Vector.BoolVector","removeAt",0x9a7a106e,"openfl._Vector.BoolVector.removeAt","openfl/Vector.hx",462,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_475_reverse,"openfl._Vector.BoolVector","reverse",0x12dda6eb,"openfl._Vector.BoolVector.reverse","openfl/Vector.hx",475,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_485_set,"openfl._Vector.BoolVector","set",0x3a8a30eb,"openfl._Vector.BoolVector.set","openfl/Vector.hx",485,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_500_shift,"openfl._Vector.BoolVector","shift",0x981c260b,"openfl._Vector.BoolVector.shift","openfl/Vector.hx",500,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_515_slice,"openfl._Vector.BoolVector","slice",0x9ac0fddb,"openfl._Vector.BoolVector.slice","openfl/Vector.hx",515,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_522_sort,"openfl._Vector.BoolVector","sort",0xfe6831f5,"openfl._Vector.BoolVector.sort","openfl/Vector.hx",522,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_529_splice,"openfl._Vector.BoolVector","splice",0x1db7a3d3,"openfl._Vector.BoolVector.splice","openfl/Vector.hx",529,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_536_toJSON,"openfl._Vector.BoolVector","toJSON",0xda22677a,"openfl._Vector.BoolVector.toJSON","openfl/Vector.hx",536,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_543_toString,"openfl._Vector.BoolVector","toString",0x25cd72c3,"openfl._Vector.BoolVector.toString","openfl/Vector.hx",543,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_550_unshift,"openfl._Vector.BoolVector","unshift",0x70955152,"openfl._Vector.BoolVector.unshift","openfl/Vector.hx",550,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_568_get_length,"openfl._Vector.BoolVector","get_length",0x8b6b9a86,"openfl._Vector.BoolVector.get_length","openfl/Vector.hx",568,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_dd7a5ba250c0e821_573_set_length,"openfl._Vector.BoolVector","set_length",0x8ee938fa,"openfl._Vector.BoolVector.set_length","openfl/Vector.hx",573,0x4a01873c)
namespace openfl{
namespace _Vector{

void BoolVector_obj::__construct( ::Dynamic length, ::Dynamic fixed,::Array< bool > array){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_311_new)
HXLINE( 313)		if (hx::IsNull( array )) {
HXLINE( 313)			array = ::Array_obj< bool >::__new();
            		}
HXLINE( 314)		this->_hx___array = array;
HXLINE( 316)		bool _hx_tmp;
HXDLIN( 316)		if (hx::IsNotNull( length )) {
HXLINE( 316)			_hx_tmp = hx::IsGreater( length,(int)0 );
            		}
            		else {
HXLINE( 316)			_hx_tmp = false;
            		}
HXDLIN( 316)		if (_hx_tmp) {
HXLINE( 318)			this->set_length(length);
            		}
HXLINE( 322)		this->fixed = hx::IsEq( fixed,true );
            	}

Dynamic BoolVector_obj::__CreateEmpty() { return new BoolVector_obj; }

void *BoolVector_obj::_hx_vtable = 0;

Dynamic BoolVector_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BoolVector_obj > _hx_result = new BoolVector_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool BoolVector_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x63ff549f;
}

static ::openfl::_Vector::IVector_obj _hx_openfl__Vector_BoolVector__hx_openfl__Vector_IVector= {
	( int (hx::Object::*)(int))&::openfl::_Vector::BoolVector_obj::set_length,
	( int (hx::Object::*)())&::openfl::_Vector::BoolVector_obj::get_length,
	( ::Dynamic (hx::Object::*)(::Dynamic))&::openfl::_Vector::BoolVector_obj::concat,
	( ::Dynamic (hx::Object::*)())&::openfl::_Vector::BoolVector_obj::copy,
	(  ::Dynamic (hx::Object::*)(int))&::openfl::_Vector::BoolVector_obj::get_c4bfee54,
	( int (hx::Object::*)( ::Dynamic, ::Dynamic))&::openfl::_Vector::BoolVector_obj::indexOf_02dfccf1,
	( void (hx::Object::*)(int, ::Dynamic))&::openfl::_Vector::BoolVector_obj::insertAt_5d1f93e2,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::BoolVector_obj::iterator,
	( ::String (hx::Object::*)(::String))&::openfl::_Vector::BoolVector_obj::join,
	( int (hx::Object::*)( ::Dynamic, ::Dynamic))&::openfl::_Vector::BoolVector_obj::lastIndexOf_02dfccf1,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::BoolVector_obj::pop,
	( int (hx::Object::*)( ::Dynamic))&::openfl::_Vector::BoolVector_obj::push_9c73657a,
	(  ::Dynamic (hx::Object::*)(int))&::openfl::_Vector::BoolVector_obj::removeAt_c4bfee54,
	( ::Dynamic (hx::Object::*)())&::openfl::_Vector::BoolVector_obj::reverse,
	(  ::Dynamic (hx::Object::*)(int, ::Dynamic))&::openfl::_Vector::BoolVector_obj::set_15539e57,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::BoolVector_obj::shift,
	( ::Dynamic (hx::Object::*)( ::Dynamic, ::Dynamic))&::openfl::_Vector::BoolVector_obj::slice,
	( void (hx::Object::*)( ::Dynamic))&::openfl::_Vector::BoolVector_obj::sort,
	( ::Dynamic (hx::Object::*)(int,int))&::openfl::_Vector::BoolVector_obj::splice,
	( ::String (hx::Object::*)())&::openfl::_Vector::BoolVector_obj::toString,
	( void (hx::Object::*)( ::Dynamic))&::openfl::_Vector::BoolVector_obj::unshift_489e4d05,
};

void BoolVector_obj::unshift_489e4d05( ::Dynamic x) {
			unshift(x);
}

 ::Dynamic BoolVector_obj::set_15539e57(int index, ::Dynamic value) {
			return set(index,value);
}

 ::Dynamic BoolVector_obj::removeAt_c4bfee54(int index) {
			return removeAt(index);
}

int BoolVector_obj::push_9c73657a( ::Dynamic x) {
			return push(x);
}

int BoolVector_obj::lastIndexOf_02dfccf1( ::Dynamic x, ::Dynamic from) {
			return lastIndexOf(x,from);
}

void BoolVector_obj::insertAt_5d1f93e2(int index, ::Dynamic element) {
			insertAt(index,element);
}

int BoolVector_obj::indexOf_02dfccf1( ::Dynamic x, ::Dynamic from) {
			return indexOf(x,from);
}

 ::Dynamic BoolVector_obj::get_c4bfee54(int index) {
			return get(index);
}
void *BoolVector_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x45e7caba: return &_hx_openfl__Vector_BoolVector__hx_openfl__Vector_IVector;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::Dynamic BoolVector_obj::concat(::Dynamic a){
            	HX_GC_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_329_concat)
HXDLIN( 329)		if (hx::IsNull( a )) {
HXLINE( 331)			return  ::openfl::_Vector::BoolVector_obj::__alloc( HX_CTX ,null(),null(),this->_hx___array->copy());
            		}
            		else {
HXLINE( 335)			 ::openfl::_Vector::BoolVector other = ( ( ::openfl::_Vector::BoolVector)(a) );
HXLINE( 337)			if ((other->_hx___array->length > (int)0)) {
HXLINE( 339)				return  ::openfl::_Vector::BoolVector_obj::__alloc( HX_CTX ,null(),null(),this->_hx___array->concat(other->_hx___array));
            			}
            			else {
HXLINE( 343)				return  ::openfl::_Vector::BoolVector_obj::__alloc( HX_CTX ,null(),null(),this->_hx___array->copy());
            			}
            		}
HXLINE( 329)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,concat,return )

::Dynamic BoolVector_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_354_copy)
HXDLIN( 354)		bool _hx_tmp = this->fixed;
HXDLIN( 354)		return  ::openfl::_Vector::BoolVector_obj::__alloc( HX_CTX ,null(),_hx_tmp,this->_hx___array->copy());
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,copy,return )

bool BoolVector_obj::get(int index){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_361_get)
HXDLIN( 361)		if ((index >= this->_hx___array->length)) {
HXLINE( 363)			return false;
            		}
            		else {
HXLINE( 367)			return this->_hx___array->__get(index);
            		}
HXLINE( 361)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,get,return )

int BoolVector_obj::indexOf(bool x, ::Dynamic __o_from){
 ::Dynamic from = __o_from.Default(0);
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_374_indexOf)
HXLINE( 376)		{
HXLINE( 376)			int _g1 = from;
HXDLIN( 376)			int _g = this->_hx___array->length;
HXDLIN( 376)			while((_g1 < _g)){
HXLINE( 376)				_g1 = (_g1 + (int)1);
HXDLIN( 376)				int i = (_g1 - (int)1);
HXLINE( 378)				if ((this->_hx___array->__get(i) == x)) {
HXLINE( 380)					return i;
            				}
            			}
            		}
HXLINE( 386)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(BoolVector_obj,indexOf,return )

void BoolVector_obj::insertAt(int index,bool element){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_393_insertAt)
HXDLIN( 393)		bool _hx_tmp;
HXDLIN( 393)		if (!(!(this->fixed))) {
HXDLIN( 393)			_hx_tmp = (index < this->_hx___array->length);
            		}
            		else {
HXDLIN( 393)			_hx_tmp = true;
            		}
HXDLIN( 393)		if (_hx_tmp) {
HXLINE( 395)			this->_hx___array->insert(index,element);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(BoolVector_obj,insertAt,(void))

 ::Dynamic BoolVector_obj::iterator(){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_404_iterator)
HXDLIN( 404)		return this->_hx___array->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,iterator,return )

::String BoolVector_obj::join(::String __o_sep){
::String sep = __o_sep.Default(HX_HCSTRING(",","\x2c","\x00","\x00","\x00"));
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_411_join)
HXDLIN( 411)		return this->_hx___array->join(sep);
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,join,return )

int BoolVector_obj::lastIndexOf(bool x, ::Dynamic from){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_416_lastIndexOf)
HXLINE( 418)		 ::Dynamic i;
HXDLIN( 418)		bool i1;
HXDLIN( 418)		if (hx::IsNotNull( from )) {
HXLINE( 418)			i1 = hx::IsGreaterEq( from,this->_hx___array->length );
            		}
            		else {
HXLINE( 418)			i1 = true;
            		}
HXDLIN( 418)		if (i1) {
HXLINE( 418)			i = (this->_hx___array->length - (int)1);
            		}
            		else {
HXLINE( 418)			i = from;
            		}
HXLINE( 420)		while(hx::IsGreaterEq( i,(int)0 )){
HXLINE( 422)			if ((this->_hx___array->__get(i) == x)) {
HXLINE( 422)				return i;
            			}
HXLINE( 423)			i = (i - (int)1);
            		}
HXLINE( 427)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(BoolVector_obj,lastIndexOf,return )

 ::Dynamic BoolVector_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_434_pop)
HXDLIN( 434)		if (!(this->fixed)) {
HXLINE( 436)			return this->_hx___array->pop();
            		}
            		else {
HXLINE( 440)			return null();
            		}
HXLINE( 434)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,pop,return )

int BoolVector_obj::push(bool x){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_449_push)
HXDLIN( 449)		if (!(this->fixed)) {
HXLINE( 451)			return this->_hx___array->push(x);
            		}
            		else {
HXLINE( 455)			return this->_hx___array->length;
            		}
HXLINE( 449)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,push,return )

bool BoolVector_obj::removeAt(int index){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_462_removeAt)
HXLINE( 464)		bool _hx_tmp;
HXDLIN( 464)		if (!(!(this->fixed))) {
HXLINE( 464)			_hx_tmp = (index < this->_hx___array->length);
            		}
            		else {
HXLINE( 464)			_hx_tmp = true;
            		}
HXDLIN( 464)		if (_hx_tmp) {
HXLINE( 466)			return this->_hx___array->splice(index,(int)1)->__get((int)0);
            		}
HXLINE( 470)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,removeAt,return )

::Dynamic BoolVector_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_475_reverse)
HXLINE( 477)		this->_hx___array->reverse();
HXLINE( 478)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,reverse,return )

bool BoolVector_obj::set(int index,bool value){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_485_set)
HXDLIN( 485)		bool _hx_tmp;
HXDLIN( 485)		if (!(!(this->fixed))) {
HXDLIN( 485)			_hx_tmp = (index < this->_hx___array->length);
            		}
            		else {
HXDLIN( 485)			_hx_tmp = true;
            		}
HXDLIN( 485)		if (_hx_tmp) {
HXLINE( 487)			return (this->_hx___array[index] = value);
            		}
            		else {
HXLINE( 491)			return value;
            		}
HXLINE( 485)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(BoolVector_obj,set,return )

 ::Dynamic BoolVector_obj::shift(){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_500_shift)
HXDLIN( 500)		if (!(this->fixed)) {
HXLINE( 502)			return this->_hx___array->shift();
            		}
            		else {
HXLINE( 506)			return null();
            		}
HXLINE( 500)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,shift,return )

::Dynamic BoolVector_obj::slice( ::Dynamic __o_startIndex, ::Dynamic __o_endIndex){
 ::Dynamic startIndex = __o_startIndex.Default(0);
 ::Dynamic endIndex = __o_endIndex.Default(16777215);
            	HX_GC_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_515_slice)
HXDLIN( 515)		return  ::openfl::_Vector::BoolVector_obj::__alloc( HX_CTX ,null(),null(),this->_hx___array->slice(startIndex,endIndex));
            	}


HX_DEFINE_DYNAMIC_FUNC2(BoolVector_obj,slice,return )

void BoolVector_obj::sort( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_522_sort)
HXDLIN( 522)		this->_hx___array->sort(f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,sort,(void))

::Dynamic BoolVector_obj::splice(int pos,int len){
            	HX_GC_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_529_splice)
HXDLIN( 529)		return  ::openfl::_Vector::BoolVector_obj::__alloc( HX_CTX ,null(),null(),this->_hx___array->splice(pos,len));
            	}


HX_DEFINE_DYNAMIC_FUNC2(BoolVector_obj,splice,return )

::Array< bool > BoolVector_obj::toJSON(){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_536_toJSON)
HXDLIN( 536)		return this->_hx___array;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,toJSON,return )

::String BoolVector_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_543_toString)
HXDLIN( 543)		if (hx::IsNotNull( this->_hx___array )) {
HXDLIN( 543)			return this->_hx___array->toString();
            		}
            		else {
HXDLIN( 543)			return null();
            		}
HXDLIN( 543)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,toString,return )

void BoolVector_obj::unshift(bool x){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_550_unshift)
HXDLIN( 550)		if (!(this->fixed)) {
HXLINE( 552)			this->_hx___array->unshift(x);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,unshift,(void))

int BoolVector_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_568_get_length)
HXDLIN( 568)		return this->_hx___array->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BoolVector_obj,get_length,return )

int BoolVector_obj::set_length(int value){
            	HX_STACKFRAME(&_hx_pos_dd7a5ba250c0e821_573_set_length)
HXLINE( 575)		if (!(this->fixed)) {
HXLINE( 579)			_hx_array_set_size_exact(this->_hx___array,value);
            		}
HXLINE( 608)		return this->_hx___array->length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BoolVector_obj,set_length,return )


hx::ObjectPtr< BoolVector_obj > BoolVector_obj::__new( ::Dynamic length, ::Dynamic fixed,::Array< bool > array) {
	hx::ObjectPtr< BoolVector_obj > __this = new BoolVector_obj();
	__this->__construct(length,fixed,array);
	return __this;
}

hx::ObjectPtr< BoolVector_obj > BoolVector_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic length, ::Dynamic fixed,::Array< bool > array) {
	BoolVector_obj *__this = (BoolVector_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BoolVector_obj), true, "openfl._Vector.BoolVector"));
	*(void **)__this = BoolVector_obj::_hx_vtable;
	__this->__construct(length,fixed,array);
	return __this;
}

BoolVector_obj::BoolVector_obj()
{
}

void BoolVector_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BoolVector);
	HX_MARK_MEMBER_NAME(fixed,"fixed");
	HX_MARK_MEMBER_NAME(_hx___array,"__array");
	HX_MARK_END_CLASS();
}

void BoolVector_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(fixed,"fixed");
	HX_VISIT_MEMBER_NAME(_hx___array,"__array");
}

hx::Val BoolVector_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		if (HX_FIELD_EQ(inName,"join") ) { return hx::Val( join_dyn() ); }
		if (HX_FIELD_EQ(inName,"push") ) { return hx::Val( push_dyn() ); }
		if (HX_FIELD_EQ(inName,"sort") ) { return hx::Val( sort_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"fixed") ) { return hx::Val( fixed ); }
		if (HX_FIELD_EQ(inName,"shift") ) { return hx::Val( shift_dyn() ); }
		if (HX_FIELD_EQ(inName,"slice") ) { return hx::Val( slice_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_length() ); }
		if (HX_FIELD_EQ(inName,"concat") ) { return hx::Val( concat_dyn() ); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn() ); }
		if (HX_FIELD_EQ(inName,"toJSON") ) { return hx::Val( toJSON_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__array") ) { return hx::Val( _hx___array ); }
		if (HX_FIELD_EQ(inName,"indexOf") ) { return hx::Val( indexOf_dyn() ); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn() ); }
		if (HX_FIELD_EQ(inName,"unshift") ) { return hx::Val( unshift_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"insertAt") ) { return hx::Val( insertAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeAt") ) { return hx::Val( removeAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_length") ) { return hx::Val( set_length_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"lastIndexOf") ) { return hx::Val( lastIndexOf_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BoolVector_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fixed") ) { fixed=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_length(inValue.Cast< int >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__array") ) { _hx___array=inValue.Cast< ::Array< bool > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BoolVector_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("fixed","\x74","\xf9","\xa1","\x00"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	outFields->push(HX_HCSTRING("__array","\x79","\xc6","\xed","\x8f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo BoolVector_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(BoolVector_obj,fixed),HX_HCSTRING("fixed","\x74","\xf9","\xa1","\x00")},
	{hx::fsObject /*Array< bool >*/ ,(int)offsetof(BoolVector_obj,_hx___array),HX_HCSTRING("__array","\x79","\xc6","\xed","\x8f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BoolVector_obj_sStaticStorageInfo = 0;
#endif

static ::String BoolVector_obj_sMemberFields[] = {
	HX_HCSTRING("fixed","\x74","\xf9","\xa1","\x00"),
	HX_HCSTRING("__array","\x79","\xc6","\xed","\x8f"),
	HX_HCSTRING("concat","\x14","\x09","\xd0","\xc7"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("indexOf","\xc9","\x48","\xbf","\xe0"),
	HX_HCSTRING("insertAt","\x8c","\x7c","\x1f","\xc2"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("join","\xea","\x33","\x65","\x46"),
	HX_HCSTRING("lastIndexOf","\x13","\xfd","\x6a","\x95"),
	HX_HCSTRING("pop","\x91","\x5d","\x55","\x00"),
	HX_HCSTRING("push","\xda","\x11","\x61","\x4a"),
	HX_HCSTRING("removeAt","\x57","\x6e","\x1b","\xad"),
	HX_HCSTRING("reverse","\x22","\x39","\xfc","\x1a"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("shift","\x82","\xec","\x22","\x7c"),
	HX_HCSTRING("slice","\x52","\xc4","\xc7","\x7e"),
	HX_HCSTRING("sort","\x5e","\x27","\x58","\x4c"),
	HX_HCSTRING("splice","\x7c","\x85","\x9e","\xbf"),
	HX_HCSTRING("toJSON","\x23","\x49","\x09","\x7c"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("unshift","\x89","\xe3","\xb3","\x78"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("set_length","\x23","\xa3","\x0c","\x93"),
	::String(null()) };

static void BoolVector_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BoolVector_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BoolVector_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BoolVector_obj::__mClass,"__mClass");
};

#endif

hx::Class BoolVector_obj::__mClass;

void BoolVector_obj::__register()
{
	hx::Object *dummy = new BoolVector_obj;
	BoolVector_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._Vector.BoolVector","\x37","\x5d","\xce","\x2d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BoolVector_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BoolVector_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BoolVector_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BoolVector_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BoolVector_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BoolVector_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _Vector
