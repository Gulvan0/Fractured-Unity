// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo_Cairo
#include <lime/graphics/cairo/Cairo.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoImageSurface_CairoImageSurface_Impl_
#include <lime/graphics/cairo/_CairoImageSurface/CairoImageSurface_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoPattern_CairoPattern_Impl_
#include <lime/graphics/cairo/_CairoPattern/CairoPattern_Impl_.h>
#endif
#ifndef INCLUDED_lime_math_Matrix3
#include <lime/math/Matrix3.h>
#endif
#ifndef INCLUDED_lime_math_Vector2
#include <lime/math/Vector2.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl_geom_Matrix
#include <lime/utils/ObjectPool_openfl_geom_Matrix.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl_geom_Point
#include <lime/utils/ObjectPool_openfl_geom_Point.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl_geom_Rectangle
#include <lime/utils/ObjectPool_openfl_geom_Rectangle.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandType
#include <openfl/_internal/renderer/DrawCommandType.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_ShaderBuffer
#include <openfl/_internal/renderer/ShaderBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoGraphics
#include <openfl/_internal/renderer/cairo/CairoGraphics.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_CairoRenderer
#include <openfl/display/CairoRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectRenderer
#include <openfl/display/DisplayObjectRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_69_closePath,"openfl._internal.renderer.cairo.CairoGraphics","closePath",0x6dffa481,"openfl._internal.renderer.cairo.CairoGraphics.closePath","openfl/_internal/renderer/cairo/CairoGraphics.hx",69,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_97_createGradientPattern,"openfl._internal.renderer.cairo.CairoGraphics","createGradientPattern",0x9888a3a8,"openfl._internal.renderer.cairo.CairoGraphics.createGradientPattern","openfl/_internal/renderer/cairo/CairoGraphics.hx",97,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_174_createImagePattern,"openfl._internal.renderer.cairo.CairoGraphics","createImagePattern",0x42487dcd,"openfl._internal.renderer.cairo.CairoGraphics.createImagePattern","openfl/_internal/renderer/cairo/CairoGraphics.hx",174,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_192_drawRoundRect,"openfl._internal.renderer.cairo.CairoGraphics","drawRoundRect",0xa42fd4f2,"openfl._internal.renderer.cairo.CairoGraphics.drawRoundRect","openfl/_internal/renderer/cairo/CairoGraphics.hx",192,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_226_endFill,"openfl._internal.renderer.cairo.CairoGraphics","endFill",0x21233e02,"openfl._internal.renderer.cairo.CairoGraphics.endFill","openfl/_internal/renderer/cairo/CairoGraphics.hx",226,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_235_endStroke,"openfl._internal.renderer.cairo.CairoGraphics","endStroke",0xaaf640f7,"openfl._internal.renderer.cairo.CairoGraphics.endStroke","openfl/_internal/renderer/cairo/CairoGraphics.hx",235,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_247_hitTest,"openfl._internal.renderer.cairo.CairoGraphics","hitTest",0xddc21649,"openfl._internal.renderer.cairo.CairoGraphics.hitTest","openfl/_internal/renderer/cairo/CairoGraphics.hx",247,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_486_isCCW,"openfl._internal.renderer.cairo.CairoGraphics","isCCW",0x5353f111,"openfl._internal.renderer.cairo.CairoGraphics.isCCW","openfl/_internal/renderer/cairo/CairoGraphics.hx",486,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_491_normalizeUVT,"openfl._internal.renderer.cairo.CairoGraphics","normalizeUVT",0xc9c604e2,"openfl._internal.renderer.cairo.CairoGraphics.normalizeUVT","openfl/_internal/renderer/cairo/CairoGraphics.hx",491,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_540_playCommands,"openfl._internal.renderer.cairo.CairoGraphics","playCommands",0xcc85aa58,"openfl._internal.renderer.cairo.CairoGraphics.playCommands","openfl/_internal/renderer/cairo/CairoGraphics.hx",540,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1221_quadraticCurveTo,"openfl._internal.renderer.cairo.CairoGraphics","quadraticCurveTo",0x01a3b18e,"openfl._internal.renderer.cairo.CairoGraphics.quadraticCurveTo","openfl/_internal/renderer/cairo/CairoGraphics.hx",1221,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1248_render,"openfl._internal.renderer.cairo.CairoGraphics","render",0x3c3e61d2,"openfl._internal.renderer.cairo.CairoGraphics.render","openfl/_internal/renderer/cairo/CairoGraphics.hx",1248,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1583_renderMask,"openfl._internal.renderer.cairo.CairoGraphics","renderMask",0x2ed81fde,"openfl._internal.renderer.cairo.CairoGraphics.renderMask","openfl/_internal/renderer/cairo/CairoGraphics.hx",1583,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_46_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",46,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_47_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",47,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_54_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",54,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_63_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",63,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_65_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",65,0x744ae94c)
namespace openfl{
namespace _internal{
namespace renderer{
namespace cairo{

void CairoGraphics_obj::__construct() { }

Dynamic CairoGraphics_obj::__CreateEmpty() { return new CairoGraphics_obj; }

void *CairoGraphics_obj::_hx_vtable = 0;

Dynamic CairoGraphics_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CairoGraphics_obj > _hx_result = new CairoGraphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CairoGraphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5163c976;
}

Float CairoGraphics_obj::SIN45;

Float CairoGraphics_obj::TAN22;

bool CairoGraphics_obj::allowSmoothing;

 ::openfl::display::BitmapData CairoGraphics_obj::bitmapFill;

bool CairoGraphics_obj::bitmapRepeat;

 ::openfl::geom::Rectangle CairoGraphics_obj::bounds;

 ::lime::graphics::cairo::Cairo CairoGraphics_obj::cairo;

 ::openfl::_internal::renderer::DrawCommandBuffer CairoGraphics_obj::fillCommands;

 ::Dynamic CairoGraphics_obj::fillPattern;

 ::openfl::geom::Matrix CairoGraphics_obj::fillPatternMatrix;

 ::openfl::display::Graphics CairoGraphics_obj::graphics;

bool CairoGraphics_obj::hasFill;

bool CairoGraphics_obj::hasStroke;

bool CairoGraphics_obj::hitTesting;

 ::openfl::geom::Matrix CairoGraphics_obj::inversePendingMatrix;

 ::openfl::geom::Matrix CairoGraphics_obj::pendingMatrix;

 ::openfl::_internal::renderer::DrawCommandBuffer CairoGraphics_obj::strokeCommands;

 ::Dynamic CairoGraphics_obj::strokePattern;

 ::lime::math::Matrix3 CairoGraphics_obj::tempMatrix3;

Float CairoGraphics_obj::worldAlpha;

void CairoGraphics_obj::closePath(hx::Null< bool >  __o_strokeBefore){
bool strokeBefore = __o_strokeBefore.Default(false);
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_69_closePath)
HXLINE(  71)		if (hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern )) {
HXLINE(  73)			return;
            		}
HXLINE(  77)		if (!(strokeBefore)) {
HXLINE(  79)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  83)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern);
HXLINE(  84)		if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(  84)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->strokePreserve();
            		}
HXLINE(  86)		if (strokeBefore) {
HXLINE(  88)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  92)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CairoGraphics_obj,closePath,(void))

 ::Dynamic CairoGraphics_obj::createGradientPattern( ::Dynamic type,::cpp::VirtualArray colors,::cpp::VirtualArray alphas,::cpp::VirtualArray ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_97_createGradientPattern)
HXLINE(  99)		 ::Dynamic pattern = null();
HXDLIN(  99)		 ::openfl::geom::Point point = null();
HXDLIN(  99)		 ::openfl::geom::Point point2 = null();
HXDLIN(  99)		bool releaseMatrix = false;
HXLINE( 101)		if (hx::IsNull( matrix )) {
HXLINE( 103)			matrix = ::openfl::geom::Matrix_obj::_hx___pool->get();
HXLINE( 104)			releaseMatrix = true;
            		}
HXLINE( 108)		 ::Dynamic _hx_switch_0 = type;
            		if (  (_hx_switch_0==(int)0) ){
HXLINE( 123)			point = ::openfl::geom::Point_obj::_hx___pool->get();
HXLINE( 124)			point->setTo(((Float)-819.2),(int)0);
HXLINE( 125)			{
HXLINE( 125)				Float px = point->x;
HXDLIN( 125)				Float py = point->y;
HXDLIN( 125)				Float _hx_tmp = (px * matrix->a);
HXDLIN( 125)				point->x = ((_hx_tmp + (py * matrix->c)) + matrix->tx);
HXDLIN( 125)				Float _hx_tmp1 = (px * matrix->b);
HXDLIN( 125)				point->y = ((_hx_tmp1 + (py * matrix->d)) + matrix->ty);
            			}
HXLINE( 127)			point2 = ::openfl::geom::Point_obj::_hx___pool->get();
HXLINE( 128)			point2->setTo(((Float)819.2),(int)0);
HXLINE( 129)			{
HXLINE( 129)				Float px1 = point2->x;
HXDLIN( 129)				Float py1 = point2->y;
HXDLIN( 129)				Float _hx_tmp2 = (px1 * matrix->a);
HXDLIN( 129)				point2->x = ((_hx_tmp2 + (py1 * matrix->c)) + matrix->tx);
HXDLIN( 129)				Float _hx_tmp3 = (px1 * matrix->b);
HXDLIN( 129)				point2->y = ((_hx_tmp3 + (py1 * matrix->d)) + matrix->ty);
            			}
HXLINE( 131)			 ::openfl::geom::Point point1 = point;
HXDLIN( 131)			point1->x = (point1->x + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 132)			 ::openfl::geom::Point point21 = point2;
HXDLIN( 132)			point21->x = (point21->x + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 133)			 ::openfl::geom::Point point3 = point;
HXDLIN( 133)			point3->y = (point3->y + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 134)			 ::openfl::geom::Point point22 = point2;
HXDLIN( 134)			point22->y = (point22->y + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 136)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createLinear(point->x,point->y,point2->x,point2->y);
HXLINE( 121)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==(int)1) ){
HXLINE( 112)			point = ::openfl::geom::Point_obj::_hx___pool->get();
HXLINE( 113)			point->setTo(((Float)1638.4),(int)0);
HXLINE( 114)			{
HXLINE( 114)				Float px2 = point->x;
HXDLIN( 114)				Float py2 = point->y;
HXDLIN( 114)				Float _hx_tmp4 = (px2 * matrix->a);
HXDLIN( 114)				point->x = ((_hx_tmp4 + (py2 * matrix->c)) + matrix->tx);
HXDLIN( 114)				Float _hx_tmp5 = (px2 * matrix->b);
HXDLIN( 114)				point->y = ((_hx_tmp5 + (py2 * matrix->d)) + matrix->ty);
            			}
HXLINE( 116)			Float x = (matrix->tx + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 117)			Float y = (matrix->ty + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 119)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRadial(x,y,(int)0,x,y,::Math_obj::abs(((Float)(point->x - matrix->tx) / (Float)(int)2)));
HXLINE( 110)			goto _hx_goto_1;
            		}
            		_hx_goto_1:;
HXLINE( 140)		int rgb;
HXDLIN( 140)		Float alpha;
HXDLIN( 140)		Float r;
HXDLIN( 140)		Float g;
HXDLIN( 140)		Float b;
HXDLIN( 140)		Float ratio;
HXLINE( 142)		{
HXLINE( 142)			int _g1 = (int)0;
HXDLIN( 142)			int _g = colors->get_length();
HXDLIN( 142)			while((_g1 < _g)){
HXLINE( 142)				_g1 = (_g1 + (int)1);
HXDLIN( 142)				int i = (_g1 - (int)1);
HXLINE( 144)				rgb = ( (int)(colors->__get(i)) );
HXLINE( 145)				alpha = ( (Float)(alphas->__get(i)) );
HXLINE( 146)				r = ((Float)hx::UShr(((int)rgb & (int)(int)16711680),(int)16) / (Float)(int)255);
HXLINE( 147)				g = ((Float)hx::UShr(((int)rgb & (int)(int)65280),(int)8) / (Float)(int)255);
HXLINE( 148)				b = ((Float)((int)rgb & (int)(int)255) / (Float)(int)255);
HXLINE( 150)				ratio = ((Float)ratios->__get(i) / (Float)(int)255);
HXLINE( 151)				if ((ratio < (int)0)) {
HXLINE( 151)					ratio = (int)0;
            				}
HXLINE( 152)				if ((ratio > (int)1)) {
HXLINE( 152)					ratio = (int)1;
            				}
HXLINE( 154)				::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::addColorStopRGBA(pattern,ratio,r,g,b,alpha);
            			}
            		}
HXLINE( 158)		if (hx::IsNotNull( point )) {
HXLINE( 158)			::openfl::geom::Point_obj::_hx___pool->release(point);
            		}
HXLINE( 159)		if (hx::IsNotNull( point2 )) {
HXLINE( 159)			::openfl::geom::Point_obj::_hx___pool->release(point2);
            		}
HXLINE( 160)		if (releaseMatrix) {
HXLINE( 160)			::openfl::geom::Matrix_obj::_hx___pool->release(matrix);
            		}
HXLINE( 162)		 ::lime::math::Matrix3 mat = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::get_matrix(pattern);
HXLINE( 164)		mat->tx = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x;
HXLINE( 165)		mat->ty = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y;
HXLINE( 167)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(pattern,mat);
HXLINE( 169)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(CairoGraphics_obj,createGradientPattern,return )

 ::Dynamic CairoGraphics_obj::createImagePattern( ::openfl::display::BitmapData bitmapFill, ::openfl::geom::Matrix matrix,bool bitmapRepeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_174_createImagePattern)
HXLINE( 176)		 ::Dynamic pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createForSurface(bitmapFill->getSurface());
HXLINE( 177)		int _hx_tmp;
HXDLIN( 177)		bool _hx_tmp1;
HXDLIN( 177)		if (smooth) {
HXLINE( 177)			_hx_tmp1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::allowSmoothing;
            		}
            		else {
HXLINE( 177)			_hx_tmp1 = false;
            		}
HXDLIN( 177)		if (_hx_tmp1) {
HXLINE( 177)			_hx_tmp = (int)1;
            		}
            		else {
HXLINE( 177)			_hx_tmp = (int)3;
            		}
HXDLIN( 177)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_filter(pattern,_hx_tmp);
HXLINE( 179)		if (bitmapRepeat) {
HXLINE( 181)			::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(pattern,(int)1);
            		}
HXLINE( 185)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = matrix;
HXLINE( 187)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,createImagePattern,return )

void CairoGraphics_obj::drawRoundRect(Float x,Float y,Float width,Float height,Float ellipseWidth, ::Dynamic ellipseHeight){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_192_drawRoundRect)
HXLINE( 194)		if (hx::IsNull( ellipseHeight )) {
HXLINE( 194)			ellipseHeight = ellipseWidth;
            		}
HXLINE( 196)		ellipseWidth = (ellipseWidth * ((Float)0.5));
HXLINE( 197)		ellipseHeight = (ellipseHeight * ((Float)0.5));
HXLINE( 199)		if ((ellipseWidth > ((Float)width / (Float)(int)2))) {
HXLINE( 199)			ellipseWidth = ((Float)width / (Float)(int)2);
            		}
HXLINE( 200)		if (hx::IsGreater( ellipseHeight,((Float)height / (Float)(int)2) )) {
HXLINE( 200)			ellipseHeight = ((Float)height / (Float)(int)2);
            		}
HXLINE( 202)		Float xe = (x + width);
HXDLIN( 202)		Float ye = (y + height);
HXDLIN( 202)		Float cx1 = (-(ellipseWidth) + (ellipseWidth * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::SIN45));
HXDLIN( 202)		Float cx2 = (-(ellipseWidth) + (ellipseWidth * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::TAN22));
HXDLIN( 202)		Float cy1 = (-(ellipseHeight) + (ellipseHeight * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::SIN45));
HXDLIN( 202)		Float cy2 = (-(ellipseHeight) + (ellipseHeight * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::TAN22));
HXLINE( 209)		 ::lime::graphics::cairo::Cairo _hx_tmp = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 209)		_hx_tmp->moveTo(xe,(ye - ellipseHeight));
HXLINE( 210)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(xe,(ye + cy2),(xe + cx1),(ye + cy1));
HXLINE( 211)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((xe + cx2),ye,(xe - ellipseWidth),ye);
HXLINE( 212)		 ::lime::graphics::cairo::Cairo _hx_tmp1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 212)		_hx_tmp1->lineTo((x + ellipseWidth),ye);
HXLINE( 213)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((x - cx2),ye,(x - cx1),(ye + cy1));
HXLINE( 214)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(x,(ye + cy2),x,(ye - ellipseHeight));
HXLINE( 215)		 ::lime::graphics::cairo::Cairo _hx_tmp2 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 215)		_hx_tmp2->lineTo(x,(y + ellipseHeight));
HXLINE( 216)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(x,(y - cy2),(x - cx1),(y - cy1));
HXLINE( 217)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((x - cx2),y,(x + ellipseWidth),y);
HXLINE( 218)		 ::lime::graphics::cairo::Cairo _hx_tmp3 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 218)		_hx_tmp3->lineTo((xe - ellipseWidth),y);
HXLINE( 219)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((xe + cx2),y,(xe + cx1),(y - cy1));
HXLINE( 220)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(xe,(y - cy2),xe,(y + ellipseHeight));
HXLINE( 221)		 ::lime::graphics::cairo::Cairo _hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 221)		_hx_tmp4->lineTo(xe,(ye - ellipseHeight));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,drawRoundRect,(void))

void CairoGraphics_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_226_endFill)
HXLINE( 228)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 229)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::playCommands(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands,false);
HXLINE( 230)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endFill,(void))

void CairoGraphics_obj::endStroke(){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_235_endStroke)
HXLINE( 237)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 238)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::playCommands(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands,true);
HXLINE( 239)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE( 240)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endStroke,(void))

bool CairoGraphics_obj::hitTest( ::openfl::display::Graphics graphics,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_247_hitTest)
HXLINE( 250)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics = graphics;
HXLINE( 251)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE( 253)		bool _hx_tmp;
HXDLIN( 253)		bool _hx_tmp1;
HXDLIN( 253)		bool _hx_tmp2;
HXDLIN( 253)		bool _hx_tmp3;
HXDLIN( 253)		if ((graphics->_hx___commands->get_length() != (int)0)) {
HXLINE( 253)			_hx_tmp3 = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE( 253)			_hx_tmp3 = true;
            		}
HXDLIN( 253)		if (!(_hx_tmp3)) {
HXLINE( 253)			_hx_tmp2 = (::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width == (int)0);
            		}
            		else {
HXLINE( 253)			_hx_tmp2 = true;
            		}
HXDLIN( 253)		if (!(_hx_tmp2)) {
HXLINE( 253)			_hx_tmp1 = (::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height == (int)0);
            		}
            		else {
HXLINE( 253)			_hx_tmp1 = true;
            		}
HXDLIN( 253)		if (!(_hx_tmp1)) {
HXLINE( 253)			_hx_tmp = !(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->contains(x,y));
            		}
            		else {
HXLINE( 253)			_hx_tmp = true;
            		}
HXDLIN( 253)		if (_hx_tmp) {
HXLINE( 255)			return false;
            		}
            		else {
HXLINE( 259)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting = true;
HXLINE( 261)			x = (x - ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x);
HXLINE( 262)			y = (y - ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y);
HXLINE( 264)			if (hx::IsNull( graphics->_hx___cairo )) {
HXLINE( 266)				int bitmap = ::Math_obj::floor(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width);
HXDLIN( 266)				 ::openfl::display::BitmapData bitmap1 =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,bitmap,::Math_obj::floor(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height),true,(int)0);
HXLINE( 267)				 ::Dynamic surface = bitmap1->getSurface();
HXLINE( 268)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface);
            			}
HXLINE( 273)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE( 275)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
HXLINE( 276)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
HXLINE( 278)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE( 279)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
HXLINE( 281)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = null();
HXLINE( 282)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = null();
HXLINE( 284)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 285)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
HXLINE( 287)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE( 289)			{
HXLINE( 289)				int _g = (int)0;
HXDLIN( 289)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN( 289)				while((_g < _g1->length)){
HXLINE( 289)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN( 289)					_g = (_g + (int)1);
HXLINE( 291)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)0: case (int)1: case (int)2: case (int)3: {
HXLINE( 358)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE( 360)							bool _hx_tmp4;
HXDLIN( 360)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 360)								_hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 360)								_hx_tmp4 = false;
            							}
HXDLIN( 360)							if (_hx_tmp4) {
HXLINE( 362)								data->destroy();
HXLINE( 363)								return true;
            							}
HXLINE( 367)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE( 369)							bool _hx_tmp5;
HXDLIN( 369)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 369)								_hx_tmp5 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 369)								_hx_tmp5 = false;
            							}
HXDLIN( 369)							if (_hx_tmp5) {
HXLINE( 371)								data->destroy();
HXLINE( 372)								return true;
            							}
HXLINE( 376)							if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE( 378)								{
HXLINE( 378)									 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN( 378)									switch((int)(_hx_getEnumValueIndex(_g2))){
            										case (int)0: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN( 378)											data1->oPos = (data1->oPos + (int)2);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN( 378)											data2->bPos = (data2->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN( 378)											data3->iPos = (data3->iPos + (int)1);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN( 378)											data4->fPos = (data4->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN( 378)											data5->oPos = (data5->oPos + (int)4);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN( 378)											data6->iiPos = (data6->iiPos + (int)2);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN( 378)											data7->ffPos = (data7->ffPos + (int)1);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN( 378)											data8->fPos = (data8->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN( 378)											data9->oPos = (data9->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN( 378)											data10->fPos = (data10->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN( 378)											data11->fPos = (data11->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN( 378)											data12->fPos = (data12->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN( 378)											data13->fPos = (data13->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN( 378)											data14->oPos = (data14->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN( 378)											data15->fPos = (data15->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN( 378)											data16->fPos = (data16->fPos + (int)5);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN( 378)											data17->oPos = (data17->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN( 378)											data18->oPos = (data18->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN( 378)											data19->oPos = (data19->oPos + (int)2);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN( 378)											data20->bPos = (data20->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN( 378)											data21->oPos = (data21->oPos + (int)4);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN( 378)											data22->iiPos = (data22->iiPos + (int)2);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN( 378)											data23->ffPos = (data23->ffPos + (int)1);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN( 378)											data24->fPos = (data24->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN( 378)											data25->oPos = (data25->oPos + (int)4);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN( 378)											data26->iPos = (data26->iPos + (int)1);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN( 378)											data27->fPos = (data27->fPos + (int)2);
HXDLIN( 378)											 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN( 378)											data28->bPos = (data28->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN( 378)											data29->fPos = (data29->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN( 378)											data30->fPos = (data30->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 378)											 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN( 378)											data31->oPos = (data31->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 378)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 378)								 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN( 378)								 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE( 379)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp6 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 379)								 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 379)								::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN( 379)								 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN( 379)								bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN( 379)								::Array< bool > c5 = c->buffer->b;
HXDLIN( 379)								_hx_tmp6->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE( 380)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp7 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 380)								 ::openfl::display::BitmapData c6 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 380)								::cpp::VirtualArray c7 = c->buffer->o;
HXDLIN( 380)								 ::openfl::geom::Matrix c8 = ( ( ::openfl::geom::Matrix)(c7->__get((c->oPos + (int)1))) );
HXDLIN( 380)								bool c9 = c->buffer->b->__get(c->bPos);
HXDLIN( 380)								::Array< bool > c10 = c->buffer->b;
HXDLIN( 380)								_hx_tmp7->beginBitmapFill(c6,c8,c9,c10->__get((c->bPos + (int)1)));
            							}
            							else {
HXLINE( 382)								if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE( 384)									{
HXLINE( 384)										 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN( 384)										switch((int)(_hx_getEnumValueIndex(_g3))){
            											case (int)0: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN( 384)												data32->oPos = (data32->oPos + (int)2);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN( 384)												data33->bPos = (data33->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN( 384)												data34->iPos = (data34->iPos + (int)1);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN( 384)												data35->fPos = (data35->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN( 384)												data36->oPos = (data36->oPos + (int)4);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN( 384)												data37->iiPos = (data37->iiPos + (int)2);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN( 384)												data38->ffPos = (data38->ffPos + (int)1);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN( 384)												data39->fPos = (data39->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN( 384)												data40->oPos = (data40->oPos + (int)1);
            											}
            											break;
            											case (int)4: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN( 384)												data41->fPos = (data41->fPos + (int)6);
            											}
            											break;
            											case (int)5: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN( 384)												data42->fPos = (data42->fPos + (int)4);
            											}
            											break;
            											case (int)6: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN( 384)												data43->fPos = (data43->fPos + (int)3);
            											}
            											break;
            											case (int)7: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN( 384)												data44->fPos = (data44->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN( 384)												data45->oPos = (data45->oPos + (int)3);
            											}
            											break;
            											case (int)9: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN( 384)												data46->fPos = (data46->fPos + (int)4);
            											}
            											break;
            											case (int)10: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN( 384)												data47->fPos = (data47->fPos + (int)5);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN( 384)												data48->oPos = (data48->oPos + (int)1);
            											}
            											break;
            											case (int)12: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN( 384)												data49->oPos = (data49->oPos + (int)4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN( 384)												data50->oPos = (data50->oPos + (int)2);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN( 384)												data51->bPos = (data51->bPos + (int)2);
            											}
            											break;
            											case (int)15: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN( 384)												data52->oPos = (data52->oPos + (int)4);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN( 384)												data53->iiPos = (data53->iiPos + (int)2);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN( 384)												data54->ffPos = (data54->ffPos + (int)1);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN( 384)												data55->fPos = (data55->fPos + (int)1);
            											}
            											break;
            											case (int)16: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN( 384)												data56->oPos = (data56->oPos + (int)4);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN( 384)												data57->iPos = (data57->iPos + (int)1);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN( 384)												data58->fPos = (data58->fPos + (int)2);
HXDLIN( 384)												 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN( 384)												data59->bPos = (data59->bPos + (int)1);
            											}
            											break;
            											case (int)17: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN( 384)												data60->fPos = (data60->fPos + (int)2);
            											}
            											break;
            											case (int)18: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN( 384)												data61->fPos = (data61->fPos + (int)2);
            											}
            											break;
            											case (int)19: {
HXLINE( 384)												 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN( 384)												data62->oPos = (data62->oPos + (int)1);
            											}
            											break;
            											case (int)20: case (int)21: {
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE( 384)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 384)									 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN( 384)									 ::openfl::_internal::renderer::DrawCommandReader c11 = this2;
HXLINE( 385)									::Array< ::Dynamic> c12 = c11->buffer->ii;
HXDLIN( 385)									::cpp::VirtualArray c13 = c11->buffer->o;
HXDLIN( 385)									::cpp::VirtualArray c14 = c11->buffer->o;
HXDLIN( 385)									::cpp::VirtualArray c15 = c11->buffer->o;
HXDLIN( 385)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c12->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->__get((c11->oPos + (int)1))) ),c14->__get((c11->oPos + (int)2)),c15->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
HXLINE( 386)									::Array< ::Dynamic> c16 = c11->buffer->ii;
HXDLIN( 386)									::cpp::VirtualArray c17 = c11->buffer->o;
HXDLIN( 386)									::cpp::VirtualArray c18 = c11->buffer->o;
HXDLIN( 386)									::cpp::VirtualArray c19 = c11->buffer->o;
HXDLIN( 386)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c16->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c17->__get((c11->oPos + (int)1))) ),c18->__get((c11->oPos + (int)2)),c19->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
            								}
            								else {
HXLINE( 388)									if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn() )) {
HXLINE( 390)										{
HXLINE( 390)											 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN( 390)											switch((int)(_hx_getEnumValueIndex(_g4))){
            												case (int)0: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN( 390)													data63->oPos = (data63->oPos + (int)2);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN( 390)													data64->bPos = (data64->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN( 390)													data65->iPos = (data65->iPos + (int)1);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN( 390)													data66->fPos = (data66->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN( 390)													data67->oPos = (data67->oPos + (int)4);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN( 390)													data68->iiPos = (data68->iiPos + (int)2);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN( 390)													data69->ffPos = (data69->ffPos + (int)1);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN( 390)													data70->fPos = (data70->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN( 390)													data71->oPos = (data71->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN( 390)													data72->fPos = (data72->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN( 390)													data73->fPos = (data73->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN( 390)													data74->fPos = (data74->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN( 390)													data75->fPos = (data75->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN( 390)													data76->oPos = (data76->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN( 390)													data77->fPos = (data77->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN( 390)													data78->fPos = (data78->fPos + (int)5);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN( 390)													data79->oPos = (data79->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN( 390)													data80->oPos = (data80->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN( 390)													data81->oPos = (data81->oPos + (int)2);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN( 390)													data82->bPos = (data82->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN( 390)													data83->oPos = (data83->oPos + (int)4);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN( 390)													data84->iiPos = (data84->iiPos + (int)2);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN( 390)													data85->ffPos = (data85->ffPos + (int)1);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN( 390)													data86->fPos = (data86->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN( 390)													data87->oPos = (data87->oPos + (int)4);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN( 390)													data88->iPos = (data88->iPos + (int)1);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN( 390)													data89->fPos = (data89->fPos + (int)2);
HXDLIN( 390)													 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN( 390)													data90->bPos = (data90->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN( 390)													data91->fPos = (data91->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN( 390)													data92->fPos = (data92->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE( 390)													 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN( 390)													data93->oPos = (data93->oPos + (int)1);
            												}
            												break;
            												case (int)20: case (int)21: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE( 390)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN( 390)										 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN( 390)										 ::openfl::_internal::renderer::DrawCommandReader c20 = this3;
HXLINE( 391)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
HXLINE( 392)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
            									}
            									else {
HXLINE( 396)										{
HXLINE( 396)											 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN( 396)											switch((int)(_hx_getEnumValueIndex(_g5))){
            												case (int)0: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN( 396)													data94->oPos = (data94->oPos + (int)2);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN( 396)													data95->bPos = (data95->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN( 396)													data96->iPos = (data96->iPos + (int)1);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN( 396)													data97->fPos = (data97->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN( 396)													data98->oPos = (data98->oPos + (int)4);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN( 396)													data99->iiPos = (data99->iiPos + (int)2);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN( 396)													data100->ffPos = (data100->ffPos + (int)1);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN( 396)													data101->fPos = (data101->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN( 396)													data102->oPos = (data102->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN( 396)													data103->fPos = (data103->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN( 396)													data104->fPos = (data104->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN( 396)													data105->fPos = (data105->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN( 396)													data106->fPos = (data106->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN( 396)													data107->oPos = (data107->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN( 396)													data108->fPos = (data108->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN( 396)													data109->fPos = (data109->fPos + (int)5);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN( 396)													data110->oPos = (data110->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN( 396)													data111->oPos = (data111->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN( 396)													data112->oPos = (data112->oPos + (int)2);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN( 396)													data113->bPos = (data113->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN( 396)													data114->oPos = (data114->oPos + (int)4);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN( 396)													data115->iiPos = (data115->iiPos + (int)2);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN( 396)													data116->ffPos = (data116->ffPos + (int)1);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN( 396)													data117->fPos = (data117->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN( 396)													data118->oPos = (data118->oPos + (int)4);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN( 396)													data119->iPos = (data119->iPos + (int)1);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN( 396)													data120->fPos = (data120->fPos + (int)2);
HXDLIN( 396)													 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN( 396)													data121->bPos = (data121->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN( 396)													data122->fPos = (data122->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN( 396)													data123->fPos = (data123->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE( 396)													 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN( 396)													data124->oPos = (data124->oPos + (int)1);
            												}
            												break;
            												case (int)20: case (int)21: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE( 396)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 396)										 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN( 396)										 ::openfl::_internal::renderer::DrawCommandReader c21 = this4;
HXLINE( 397)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp8 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 397)										_hx_tmp8->beginFill(c21->buffer->i->__get(c21->iPos),(int)1);
HXLINE( 398)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 398)										_hx_tmp9->beginFill(c21->buffer->i->__get(c21->iPos),(int)1);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 295)							{
HXLINE( 295)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN( 295)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN( 295)										data125->oPos = (data125->oPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN( 295)										data126->bPos = (data126->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN( 295)										data127->iPos = (data127->iPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN( 295)										data128->fPos = (data128->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN( 295)										data129->oPos = (data129->oPos + (int)4);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN( 295)										data130->iiPos = (data130->iiPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN( 295)										data131->ffPos = (data131->ffPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN( 295)										data132->fPos = (data132->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN( 295)										data133->oPos = (data133->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN( 295)										data134->fPos = (data134->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN( 295)										data135->fPos = (data135->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN( 295)										data136->fPos = (data136->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN( 295)										data137->fPos = (data137->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN( 295)										data138->oPos = (data138->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN( 295)										data139->fPos = (data139->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN( 295)										data140->fPos = (data140->fPos + (int)5);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN( 295)										data141->oPos = (data141->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN( 295)										data142->oPos = (data142->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN( 295)										data143->oPos = (data143->oPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN( 295)										data144->bPos = (data144->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN( 295)										data145->oPos = (data145->oPos + (int)4);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN( 295)										data146->iiPos = (data146->iiPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN( 295)										data147->ffPos = (data147->ffPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN( 295)										data148->fPos = (data148->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN( 295)										data149->oPos = (data149->oPos + (int)4);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN( 295)										data150->iPos = (data150->iPos + (int)1);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN( 295)										data151->fPos = (data151->fPos + (int)2);
HXDLIN( 295)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN( 295)										data152->bPos = (data152->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN( 295)										data153->fPos = (data153->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN( 295)										data154->fPos = (data154->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 295)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN( 295)										data155->oPos = (data155->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 295)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 295)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN( 295)							 ::openfl::_internal::renderer::DrawCommandReader c22 = this5;
HXLINE( 296)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp10 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 296)							Float c23 = c22->buffer->f->__get(c22->fPos);
HXDLIN( 296)							::Array< Float > c24 = c22->buffer->f;
HXDLIN( 296)							Float c25 = c24->__get((c22->fPos + (int)1));
HXDLIN( 296)							::Array< Float > c26 = c22->buffer->f;
HXDLIN( 296)							Float c27 = c26->__get((c22->fPos + (int)2));
HXDLIN( 296)							::Array< Float > c28 = c22->buffer->f;
HXDLIN( 296)							Float c29 = c28->__get((c22->fPos + (int)3));
HXDLIN( 296)							::Array< Float > c30 = c22->buffer->f;
HXDLIN( 296)							Float c31 = c30->__get((c22->fPos + (int)4));
HXDLIN( 296)							::Array< Float > c32 = c22->buffer->f;
HXDLIN( 296)							_hx_tmp10->cubicCurveTo(c23,c25,c27,c29,c31,c32->__get((c22->fPos + (int)5)));
HXLINE( 297)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp11 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 297)							Float c33 = c22->buffer->f->__get(c22->fPos);
HXDLIN( 297)							::Array< Float > c34 = c22->buffer->f;
HXDLIN( 297)							Float c35 = c34->__get((c22->fPos + (int)1));
HXDLIN( 297)							::Array< Float > c36 = c22->buffer->f;
HXDLIN( 297)							Float c37 = c36->__get((c22->fPos + (int)2));
HXDLIN( 297)							::Array< Float > c38 = c22->buffer->f;
HXDLIN( 297)							Float c39 = c38->__get((c22->fPos + (int)3));
HXDLIN( 297)							::Array< Float > c40 = c22->buffer->f;
HXDLIN( 297)							Float c41 = c40->__get((c22->fPos + (int)4));
HXDLIN( 297)							::Array< Float > c42 = c22->buffer->f;
HXDLIN( 297)							_hx_tmp11->cubicCurveTo(c33,c35,c37,c39,c41,c42->__get((c22->fPos + (int)5)));
            						}
            						break;
            						case (int)5: {
HXLINE( 301)							{
HXLINE( 301)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN( 301)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN( 301)										data156->oPos = (data156->oPos + (int)2);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN( 301)										data157->bPos = (data157->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN( 301)										data158->iPos = (data158->iPos + (int)1);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN( 301)										data159->fPos = (data159->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN( 301)										data160->oPos = (data160->oPos + (int)4);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN( 301)										data161->iiPos = (data161->iiPos + (int)2);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN( 301)										data162->ffPos = (data162->ffPos + (int)1);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN( 301)										data163->fPos = (data163->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN( 301)										data164->oPos = (data164->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN( 301)										data165->fPos = (data165->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN( 301)										data166->fPos = (data166->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN( 301)										data167->fPos = (data167->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN( 301)										data168->fPos = (data168->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN( 301)										data169->oPos = (data169->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN( 301)										data170->fPos = (data170->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN( 301)										data171->fPos = (data171->fPos + (int)5);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN( 301)										data172->oPos = (data172->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN( 301)										data173->oPos = (data173->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN( 301)										data174->oPos = (data174->oPos + (int)2);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN( 301)										data175->bPos = (data175->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN( 301)										data176->oPos = (data176->oPos + (int)4);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN( 301)										data177->iiPos = (data177->iiPos + (int)2);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN( 301)										data178->ffPos = (data178->ffPos + (int)1);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN( 301)										data179->fPos = (data179->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN( 301)										data180->oPos = (data180->oPos + (int)4);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN( 301)										data181->iPos = (data181->iPos + (int)1);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN( 301)										data182->fPos = (data182->fPos + (int)2);
HXDLIN( 301)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN( 301)										data183->bPos = (data183->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN( 301)										data184->fPos = (data184->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN( 301)										data185->fPos = (data185->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 301)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN( 301)										data186->oPos = (data186->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 301)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 301)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN( 301)							 ::openfl::_internal::renderer::DrawCommandReader c43 = this6;
HXLINE( 302)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 302)							Float c44 = c43->buffer->f->__get(c43->fPos);
HXDLIN( 302)							::Array< Float > c45 = c43->buffer->f;
HXDLIN( 302)							Float c46 = c45->__get((c43->fPos + (int)1));
HXDLIN( 302)							::Array< Float > c47 = c43->buffer->f;
HXDLIN( 302)							Float c48 = c47->__get((c43->fPos + (int)2));
HXDLIN( 302)							::Array< Float > c49 = c43->buffer->f;
HXDLIN( 302)							_hx_tmp12->curveTo(c44,c46,c48,c49->__get((c43->fPos + (int)3)));
HXLINE( 303)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 303)							Float c50 = c43->buffer->f->__get(c43->fPos);
HXDLIN( 303)							::Array< Float > c51 = c43->buffer->f;
HXDLIN( 303)							Float c52 = c51->__get((c43->fPos + (int)1));
HXDLIN( 303)							::Array< Float > c53 = c43->buffer->f;
HXDLIN( 303)							Float c54 = c53->__get((c43->fPos + (int)2));
HXDLIN( 303)							::Array< Float > c55 = c43->buffer->f;
HXDLIN( 303)							_hx_tmp13->curveTo(c50,c52,c54,c55->__get((c43->fPos + (int)3)));
            						}
            						break;
            						case (int)6: {
HXLINE( 404)							{
HXLINE( 404)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN( 404)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN( 404)										data187->oPos = (data187->oPos + (int)2);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN( 404)										data188->bPos = (data188->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN( 404)										data189->iPos = (data189->iPos + (int)1);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN( 404)										data190->fPos = (data190->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN( 404)										data191->oPos = (data191->oPos + (int)4);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN( 404)										data192->iiPos = (data192->iiPos + (int)2);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN( 404)										data193->ffPos = (data193->ffPos + (int)1);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN( 404)										data194->fPos = (data194->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN( 404)										data195->oPos = (data195->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN( 404)										data196->fPos = (data196->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN( 404)										data197->fPos = (data197->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN( 404)										data198->fPos = (data198->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN( 404)										data199->fPos = (data199->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN( 404)										data200->oPos = (data200->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN( 404)										data201->fPos = (data201->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN( 404)										data202->fPos = (data202->fPos + (int)5);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN( 404)										data203->oPos = (data203->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN( 404)										data204->oPos = (data204->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN( 404)										data205->oPos = (data205->oPos + (int)2);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN( 404)										data206->bPos = (data206->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN( 404)										data207->oPos = (data207->oPos + (int)4);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN( 404)										data208->iiPos = (data208->iiPos + (int)2);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN( 404)										data209->ffPos = (data209->ffPos + (int)1);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN( 404)										data210->fPos = (data210->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN( 404)										data211->oPos = (data211->oPos + (int)4);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN( 404)										data212->iPos = (data212->iPos + (int)1);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN( 404)										data213->fPos = (data213->fPos + (int)2);
HXDLIN( 404)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN( 404)										data214->bPos = (data214->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN( 404)										data215->fPos = (data215->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN( 404)										data216->fPos = (data216->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 404)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN( 404)										data217->oPos = (data217->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 404)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 404)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN( 404)							 ::openfl::_internal::renderer::DrawCommandReader c56 = this7;
HXLINE( 405)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 405)							Float c57 = c56->buffer->f->__get(c56->fPos);
HXDLIN( 405)							::Array< Float > c58 = c56->buffer->f;
HXDLIN( 405)							Float c59 = c58->__get((c56->fPos + (int)1));
HXDLIN( 405)							::Array< Float > c60 = c56->buffer->f;
HXDLIN( 405)							_hx_tmp14->drawCircle(c57,c59,c60->__get((c56->fPos + (int)2)));
HXLINE( 406)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 406)							Float c61 = c56->buffer->f->__get(c56->fPos);
HXDLIN( 406)							::Array< Float > c62 = c56->buffer->f;
HXDLIN( 406)							Float c63 = c62->__get((c56->fPos + (int)1));
HXDLIN( 406)							::Array< Float > c64 = c56->buffer->f;
HXDLIN( 406)							_hx_tmp15->drawCircle(c61,c63,c64->__get((c56->fPos + (int)2)));
            						}
            						break;
            						case (int)7: {
HXLINE( 410)							{
HXLINE( 410)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN( 410)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN( 410)										data218->oPos = (data218->oPos + (int)2);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN( 410)										data219->bPos = (data219->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN( 410)										data220->iPos = (data220->iPos + (int)1);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN( 410)										data221->fPos = (data221->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN( 410)										data222->oPos = (data222->oPos + (int)4);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN( 410)										data223->iiPos = (data223->iiPos + (int)2);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN( 410)										data224->ffPos = (data224->ffPos + (int)1);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN( 410)										data225->fPos = (data225->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN( 410)										data226->oPos = (data226->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN( 410)										data227->fPos = (data227->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN( 410)										data228->fPos = (data228->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN( 410)										data229->fPos = (data229->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN( 410)										data230->fPos = (data230->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN( 410)										data231->oPos = (data231->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN( 410)										data232->fPos = (data232->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN( 410)										data233->fPos = (data233->fPos + (int)5);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN( 410)										data234->oPos = (data234->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN( 410)										data235->oPos = (data235->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN( 410)										data236->oPos = (data236->oPos + (int)2);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN( 410)										data237->bPos = (data237->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN( 410)										data238->oPos = (data238->oPos + (int)4);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN( 410)										data239->iiPos = (data239->iiPos + (int)2);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN( 410)										data240->ffPos = (data240->ffPos + (int)1);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN( 410)										data241->fPos = (data241->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN( 410)										data242->oPos = (data242->oPos + (int)4);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN( 410)										data243->iPos = (data243->iPos + (int)1);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN( 410)										data244->fPos = (data244->fPos + (int)2);
HXDLIN( 410)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN( 410)										data245->bPos = (data245->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN( 410)										data246->fPos = (data246->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN( 410)										data247->fPos = (data247->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 410)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN( 410)										data248->oPos = (data248->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 410)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 410)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN( 410)							 ::openfl::_internal::renderer::DrawCommandReader c65 = this8;
HXLINE( 411)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 411)							Float c66 = c65->buffer->f->__get(c65->fPos);
HXDLIN( 411)							::Array< Float > c67 = c65->buffer->f;
HXDLIN( 411)							Float c68 = c67->__get((c65->fPos + (int)1));
HXDLIN( 411)							::Array< Float > c69 = c65->buffer->f;
HXDLIN( 411)							Float c70 = c69->__get((c65->fPos + (int)2));
HXDLIN( 411)							::Array< Float > c71 = c65->buffer->f;
HXDLIN( 411)							_hx_tmp16->drawEllipse(c66,c68,c70,c71->__get((c65->fPos + (int)3)));
HXLINE( 412)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp17 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 412)							Float c72 = c65->buffer->f->__get(c65->fPos);
HXDLIN( 412)							::Array< Float > c73 = c65->buffer->f;
HXDLIN( 412)							Float c74 = c73->__get((c65->fPos + (int)1));
HXDLIN( 412)							::Array< Float > c75 = c65->buffer->f;
HXDLIN( 412)							Float c76 = c75->__get((c65->fPos + (int)2));
HXDLIN( 412)							::Array< Float > c77 = c65->buffer->f;
HXDLIN( 412)							_hx_tmp17->drawEllipse(c72,c74,c76,c77->__get((c65->fPos + (int)3)));
            						}
            						break;
            						case (int)9: {
HXLINE( 416)							{
HXLINE( 416)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN( 416)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN( 416)										data249->oPos = (data249->oPos + (int)2);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN( 416)										data250->bPos = (data250->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN( 416)										data251->iPos = (data251->iPos + (int)1);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN( 416)										data252->fPos = (data252->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN( 416)										data253->oPos = (data253->oPos + (int)4);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN( 416)										data254->iiPos = (data254->iiPos + (int)2);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN( 416)										data255->ffPos = (data255->ffPos + (int)1);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN( 416)										data256->fPos = (data256->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN( 416)										data257->oPos = (data257->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN( 416)										data258->fPos = (data258->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN( 416)										data259->fPos = (data259->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN( 416)										data260->fPos = (data260->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN( 416)										data261->fPos = (data261->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN( 416)										data262->oPos = (data262->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN( 416)										data263->fPos = (data263->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN( 416)										data264->fPos = (data264->fPos + (int)5);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN( 416)										data265->oPos = (data265->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN( 416)										data266->oPos = (data266->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN( 416)										data267->oPos = (data267->oPos + (int)2);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN( 416)										data268->bPos = (data268->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN( 416)										data269->oPos = (data269->oPos + (int)4);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN( 416)										data270->iiPos = (data270->iiPos + (int)2);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN( 416)										data271->ffPos = (data271->ffPos + (int)1);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN( 416)										data272->fPos = (data272->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN( 416)										data273->oPos = (data273->oPos + (int)4);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN( 416)										data274->iPos = (data274->iPos + (int)1);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN( 416)										data275->fPos = (data275->fPos + (int)2);
HXDLIN( 416)										 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN( 416)										data276->bPos = (data276->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN( 416)										data277->fPos = (data277->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN( 416)										data278->fPos = (data278->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 416)										 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN( 416)										data279->oPos = (data279->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 416)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 416)							 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN( 416)							 ::openfl::_internal::renderer::DrawCommandReader c78 = this9;
HXLINE( 417)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp18 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 417)							Float c79 = c78->buffer->f->__get(c78->fPos);
HXDLIN( 417)							::Array< Float > c80 = c78->buffer->f;
HXDLIN( 417)							Float c81 = c80->__get((c78->fPos + (int)1));
HXDLIN( 417)							::Array< Float > c82 = c78->buffer->f;
HXDLIN( 417)							Float c83 = c82->__get((c78->fPos + (int)2));
HXDLIN( 417)							::Array< Float > c84 = c78->buffer->f;
HXDLIN( 417)							_hx_tmp18->drawRect(c79,c81,c83,c84->__get((c78->fPos + (int)3)));
HXLINE( 418)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 418)							Float c85 = c78->buffer->f->__get(c78->fPos);
HXDLIN( 418)							::Array< Float > c86 = c78->buffer->f;
HXDLIN( 418)							Float c87 = c86->__get((c78->fPos + (int)1));
HXDLIN( 418)							::Array< Float > c88 = c78->buffer->f;
HXDLIN( 418)							Float c89 = c88->__get((c78->fPos + (int)2));
HXDLIN( 418)							::Array< Float > c90 = c78->buffer->f;
HXDLIN( 418)							_hx_tmp19->drawRect(c85,c87,c89,c90->__get((c78->fPos + (int)3)));
            						}
            						break;
            						case (int)10: {
HXLINE( 422)							{
HXLINE( 422)								 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN( 422)								switch((int)(_hx_getEnumValueIndex(_g11))){
            									case (int)0: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN( 422)										data280->oPos = (data280->oPos + (int)2);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN( 422)										data281->bPos = (data281->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN( 422)										data282->iPos = (data282->iPos + (int)1);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN( 422)										data283->fPos = (data283->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN( 422)										data284->oPos = (data284->oPos + (int)4);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN( 422)										data285->iiPos = (data285->iiPos + (int)2);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN( 422)										data286->ffPos = (data286->ffPos + (int)1);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN( 422)										data287->fPos = (data287->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN( 422)										data288->oPos = (data288->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN( 422)										data289->fPos = (data289->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN( 422)										data290->fPos = (data290->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN( 422)										data291->fPos = (data291->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN( 422)										data292->fPos = (data292->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN( 422)										data293->oPos = (data293->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN( 422)										data294->fPos = (data294->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN( 422)										data295->fPos = (data295->fPos + (int)5);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN( 422)										data296->oPos = (data296->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN( 422)										data297->oPos = (data297->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN( 422)										data298->oPos = (data298->oPos + (int)2);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN( 422)										data299->bPos = (data299->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN( 422)										data300->oPos = (data300->oPos + (int)4);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN( 422)										data301->iiPos = (data301->iiPos + (int)2);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN( 422)										data302->ffPos = (data302->ffPos + (int)1);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN( 422)										data303->fPos = (data303->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN( 422)										data304->oPos = (data304->oPos + (int)4);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN( 422)										data305->iPos = (data305->iPos + (int)1);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN( 422)										data306->fPos = (data306->fPos + (int)2);
HXDLIN( 422)										 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN( 422)										data307->bPos = (data307->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN( 422)										data308->fPos = (data308->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN( 422)										data309->fPos = (data309->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 422)										 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN( 422)										data310->oPos = (data310->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 422)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 422)							 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN( 422)							 ::openfl::_internal::renderer::DrawCommandReader c91 = this10;
HXLINE( 423)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 423)							Float c92 = c91->buffer->f->__get(c91->fPos);
HXDLIN( 423)							::Array< Float > c93 = c91->buffer->f;
HXDLIN( 423)							Float c94 = c93->__get((c91->fPos + (int)1));
HXDLIN( 423)							::Array< Float > c95 = c91->buffer->f;
HXDLIN( 423)							Float c96 = c95->__get((c91->fPos + (int)2));
HXDLIN( 423)							::Array< Float > c97 = c91->buffer->f;
HXDLIN( 423)							Float c98 = c97->__get((c91->fPos + (int)3));
HXDLIN( 423)							::Array< Float > c99 = c91->buffer->f;
HXDLIN( 423)							_hx_tmp20->drawRoundRect(c92,c94,c96,c98,c99->__get((c91->fPos + (int)4)),c91->buffer->o->__get(c91->oPos));
HXLINE( 424)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 424)							Float c100 = c91->buffer->f->__get(c91->fPos);
HXDLIN( 424)							::Array< Float > c101 = c91->buffer->f;
HXDLIN( 424)							Float c102 = c101->__get((c91->fPos + (int)1));
HXDLIN( 424)							::Array< Float > c103 = c91->buffer->f;
HXDLIN( 424)							Float c104 = c103->__get((c91->fPos + (int)2));
HXDLIN( 424)							::Array< Float > c105 = c91->buffer->f;
HXDLIN( 424)							Float c106 = c105->__get((c91->fPos + (int)3));
HXDLIN( 424)							::Array< Float > c107 = c91->buffer->f;
HXDLIN( 424)							_hx_tmp21->drawRoundRect(c100,c102,c104,c106,c107->__get((c91->fPos + (int)4)),c91->buffer->o->__get(c91->oPos));
            						}
            						break;
            						case (int)13: {
HXLINE( 334)							{
HXLINE( 334)								{
HXLINE( 334)									 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN( 334)									switch((int)(_hx_getEnumValueIndex(_g12))){
            										case (int)0: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN( 334)											data311->oPos = (data311->oPos + (int)2);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN( 334)											data312->bPos = (data312->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN( 334)											data313->iPos = (data313->iPos + (int)1);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN( 334)											data314->fPos = (data314->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN( 334)											data315->oPos = (data315->oPos + (int)4);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN( 334)											data316->iiPos = (data316->iiPos + (int)2);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN( 334)											data317->ffPos = (data317->ffPos + (int)1);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN( 334)											data318->fPos = (data318->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN( 334)											data319->oPos = (data319->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN( 334)											data320->fPos = (data320->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN( 334)											data321->fPos = (data321->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN( 334)											data322->fPos = (data322->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN( 334)											data323->fPos = (data323->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN( 334)											data324->oPos = (data324->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN( 334)											data325->fPos = (data325->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN( 334)											data326->fPos = (data326->fPos + (int)5);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN( 334)											data327->oPos = (data327->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN( 334)											data328->oPos = (data328->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN( 334)											data329->oPos = (data329->oPos + (int)2);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN( 334)											data330->bPos = (data330->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN( 334)											data331->oPos = (data331->oPos + (int)4);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN( 334)											data332->iiPos = (data332->iiPos + (int)2);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN( 334)											data333->ffPos = (data333->ffPos + (int)1);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN( 334)											data334->fPos = (data334->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN( 334)											data335->oPos = (data335->oPos + (int)4);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN( 334)											data336->iPos = (data336->iPos + (int)1);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN( 334)											data337->fPos = (data337->fPos + (int)2);
HXDLIN( 334)											 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN( 334)											data338->bPos = (data338->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN( 334)											data339->fPos = (data339->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN( 334)											data340->fPos = (data340->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 334)											 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN( 334)											data341->oPos = (data341->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 334)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN( 334)								 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
            							}
HXLINE( 335)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE( 337)							bool _hx_tmp22;
HXDLIN( 337)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 337)								_hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 337)								_hx_tmp22 = false;
            							}
HXDLIN( 337)							if (_hx_tmp22) {
HXLINE( 339)								data->destroy();
HXLINE( 340)								return true;
            							}
HXLINE( 344)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE( 346)							bool _hx_tmp23;
HXDLIN( 346)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 346)								_hx_tmp23 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 346)								_hx_tmp23 = false;
            							}
HXDLIN( 346)							if (_hx_tmp23) {
HXLINE( 348)								data->destroy();
HXLINE( 349)								return true;
            							}
HXLINE( 353)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE( 354)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            						}
            						break;
            						case (int)14: {
HXLINE( 329)							{
HXLINE( 329)								 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 329)								switch((int)(_hx_getEnumValueIndex(_g13))){
            									case (int)0: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 329)										data342->oPos = (data342->oPos + (int)2);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 329)										data343->bPos = (data343->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 329)										data344->iPos = (data344->iPos + (int)1);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 329)										data345->fPos = (data345->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 329)										data346->oPos = (data346->oPos + (int)4);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 329)										data347->iiPos = (data347->iiPos + (int)2);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 329)										data348->ffPos = (data348->ffPos + (int)1);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 329)										data349->fPos = (data349->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 329)										data350->oPos = (data350->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 329)										data351->fPos = (data351->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 329)										data352->fPos = (data352->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 329)										data353->fPos = (data353->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 329)										data354->fPos = (data354->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 329)										data355->oPos = (data355->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 329)										data356->fPos = (data356->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 329)										data357->fPos = (data357->fPos + (int)5);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 329)										data358->oPos = (data358->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 329)										data359->oPos = (data359->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 329)										data360->oPos = (data360->oPos + (int)2);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 329)										data361->bPos = (data361->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 329)										data362->oPos = (data362->oPos + (int)4);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 329)										data363->iiPos = (data363->iiPos + (int)2);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 329)										data364->ffPos = (data364->ffPos + (int)1);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 329)										data365->fPos = (data365->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 329)										data366->oPos = (data366->oPos + (int)4);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 329)										data367->iPos = (data367->iPos + (int)1);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 329)										data368->fPos = (data368->fPos + (int)2);
HXDLIN( 329)										 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 329)										data369->bPos = (data369->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 329)										data370->fPos = (data370->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 329)										data371->fPos = (data371->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 329)										 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 329)										data372->oPos = (data372->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 329)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 329)							 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 329)							 ::openfl::_internal::renderer::DrawCommandReader c108 = this12;
HXLINE( 330)							::cpp::VirtualArray c109 = c108->buffer->o;
HXDLIN( 330)							::Array< bool > c110 = c108->buffer->b;
HXDLIN( 330)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c108->buffer->o->__get(c108->oPos)) ),( ( ::openfl::geom::Matrix)(c109->__get((c108->oPos + (int)1))) ),c108->buffer->b->__get(c108->bPos),c110->__get((c108->bPos + (int)1)));
            						}
            						break;
            						case (int)15: {
HXLINE( 324)							{
HXLINE( 324)								 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 324)								switch((int)(_hx_getEnumValueIndex(_g14))){
            									case (int)0: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 324)										data373->oPos = (data373->oPos + (int)2);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 324)										data374->bPos = (data374->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 324)										data375->iPos = (data375->iPos + (int)1);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 324)										data376->fPos = (data376->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 324)										data377->oPos = (data377->oPos + (int)4);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 324)										data378->iiPos = (data378->iiPos + (int)2);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 324)										data379->ffPos = (data379->ffPos + (int)1);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 324)										data380->fPos = (data380->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 324)										data381->oPos = (data381->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 324)										data382->fPos = (data382->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 324)										data383->fPos = (data383->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 324)										data384->fPos = (data384->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 324)										data385->fPos = (data385->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 324)										data386->oPos = (data386->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 324)										data387->fPos = (data387->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 324)										data388->fPos = (data388->fPos + (int)5);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 324)										data389->oPos = (data389->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 324)										data390->oPos = (data390->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 324)										data391->oPos = (data391->oPos + (int)2);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 324)										data392->bPos = (data392->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 324)										data393->oPos = (data393->oPos + (int)4);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 324)										data394->iiPos = (data394->iiPos + (int)2);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 324)										data395->ffPos = (data395->ffPos + (int)1);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 324)										data396->fPos = (data396->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 324)										data397->oPos = (data397->oPos + (int)4);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 324)										data398->iPos = (data398->iPos + (int)1);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 324)										data399->fPos = (data399->fPos + (int)2);
HXDLIN( 324)										 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 324)										data400->bPos = (data400->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 324)										data401->fPos = (data401->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 324)										data402->fPos = (data402->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 324)										 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 324)										data403->oPos = (data403->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 324)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 324)							 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 324)							 ::openfl::_internal::renderer::DrawCommandReader c111 = this13;
HXLINE( 325)							::Array< ::Dynamic> c112 = c111->buffer->ii;
HXDLIN( 325)							::cpp::VirtualArray c113 = c111->buffer->o;
HXDLIN( 325)							::cpp::VirtualArray c114 = c111->buffer->o;
HXDLIN( 325)							::cpp::VirtualArray c115 = c111->buffer->o;
HXDLIN( 325)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineGradientStyle(c111->buffer->o->__get(c111->oPos),c111->buffer->ii->__get(c111->iiPos).StaticCast< ::Array< int > >(),c111->buffer->ff->__get(c111->ffPos).StaticCast< ::Array< Float > >(),c112->__get((c111->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c113->__get((c111->oPos + (int)1))) ),c114->__get((c111->oPos + (int)2)),c115->__get((c111->oPos + (int)3)),c111->buffer->f->__get(c111->fPos));
            						}
            						break;
            						case (int)16: {
HXLINE( 319)							{
HXLINE( 319)								 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 319)								switch((int)(_hx_getEnumValueIndex(_g15))){
            									case (int)0: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 319)										data404->oPos = (data404->oPos + (int)2);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 319)										data405->bPos = (data405->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 319)										data406->iPos = (data406->iPos + (int)1);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 319)										data407->fPos = (data407->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 319)										data408->oPos = (data408->oPos + (int)4);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 319)										data409->iiPos = (data409->iiPos + (int)2);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 319)										data410->ffPos = (data410->ffPos + (int)1);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 319)										data411->fPos = (data411->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 319)										data412->oPos = (data412->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 319)										data413->fPos = (data413->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 319)										data414->fPos = (data414->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 319)										data415->fPos = (data415->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 319)										data416->fPos = (data416->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 319)										data417->oPos = (data417->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 319)										data418->fPos = (data418->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 319)										data419->fPos = (data419->fPos + (int)5);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 319)										data420->oPos = (data420->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 319)										data421->oPos = (data421->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 319)										data422->oPos = (data422->oPos + (int)2);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 319)										data423->bPos = (data423->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 319)										data424->oPos = (data424->oPos + (int)4);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 319)										data425->iiPos = (data425->iiPos + (int)2);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 319)										data426->ffPos = (data426->ffPos + (int)1);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 319)										data427->fPos = (data427->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 319)										data428->oPos = (data428->oPos + (int)4);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 319)										data429->iPos = (data429->iPos + (int)1);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 319)										data430->fPos = (data430->fPos + (int)2);
HXDLIN( 319)										 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 319)										data431->bPos = (data431->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 319)										data432->fPos = (data432->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 319)										data433->fPos = (data433->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 319)										 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 319)										data434->oPos = (data434->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 319)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 319)							 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 319)							 ::openfl::_internal::renderer::DrawCommandReader c116 = this14;
HXLINE( 320)							::cpp::VirtualArray c117 = c116->buffer->o;
HXDLIN( 320)							::cpp::VirtualArray c118 = c116->buffer->o;
HXDLIN( 320)							::cpp::VirtualArray c119 = c116->buffer->o;
HXDLIN( 320)							::Array< Float > c120 = c116->buffer->f;
HXDLIN( 320)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineStyle(c116->buffer->o->__get(c116->oPos),c116->buffer->i->__get(c116->iPos),(int)1,c116->buffer->b->__get(c116->bPos),c117->__get((c116->oPos + (int)1)),c118->__get((c116->oPos + (int)2)),c119->__get((c116->oPos + (int)3)),c120->__get((c116->fPos + (int)1)));
            						}
            						break;
            						case (int)17: {
HXLINE( 307)							{
HXLINE( 307)								 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 307)								switch((int)(_hx_getEnumValueIndex(_g16))){
            									case (int)0: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 307)										data435->oPos = (data435->oPos + (int)2);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 307)										data436->bPos = (data436->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 307)										data437->iPos = (data437->iPos + (int)1);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 307)										data438->fPos = (data438->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 307)										data439->oPos = (data439->oPos + (int)4);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 307)										data440->iiPos = (data440->iiPos + (int)2);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 307)										data441->ffPos = (data441->ffPos + (int)1);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 307)										data442->fPos = (data442->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 307)										data443->oPos = (data443->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 307)										data444->fPos = (data444->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 307)										data445->fPos = (data445->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 307)										data446->fPos = (data446->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 307)										data447->fPos = (data447->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 307)										data448->oPos = (data448->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 307)										data449->fPos = (data449->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 307)										data450->fPos = (data450->fPos + (int)5);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 307)										data451->oPos = (data451->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 307)										data452->oPos = (data452->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 307)										data453->oPos = (data453->oPos + (int)2);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 307)										data454->bPos = (data454->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 307)										data455->oPos = (data455->oPos + (int)4);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 307)										data456->iiPos = (data456->iiPos + (int)2);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 307)										data457->ffPos = (data457->ffPos + (int)1);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 307)										data458->fPos = (data458->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 307)										data459->oPos = (data459->oPos + (int)4);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 307)										data460->iPos = (data460->iPos + (int)1);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 307)										data461->fPos = (data461->fPos + (int)2);
HXDLIN( 307)										 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 307)										data462->bPos = (data462->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 307)										data463->fPos = (data463->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 307)										data464->fPos = (data464->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 307)										 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN( 307)										data465->oPos = (data465->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 307)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 307)							 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 307)							 ::openfl::_internal::renderer::DrawCommandReader c121 = this15;
HXLINE( 308)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp24 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 308)							Float c122 = c121->buffer->f->__get(c121->fPos);
HXDLIN( 308)							::Array< Float > c123 = c121->buffer->f;
HXDLIN( 308)							_hx_tmp24->lineTo(c122,c123->__get((c121->fPos + (int)1)));
HXLINE( 309)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp25 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 309)							Float c124 = c121->buffer->f->__get(c121->fPos);
HXDLIN( 309)							::Array< Float > c125 = c121->buffer->f;
HXDLIN( 309)							_hx_tmp25->lineTo(c124,c125->__get((c121->fPos + (int)1)));
            						}
            						break;
            						case (int)18: {
HXLINE( 313)							{
HXLINE( 313)								 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 313)								switch((int)(_hx_getEnumValueIndex(_g17))){
            									case (int)0: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN( 313)										data466->oPos = (data466->oPos + (int)2);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN( 313)										data467->bPos = (data467->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN( 313)										data468->iPos = (data468->iPos + (int)1);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN( 313)										data469->fPos = (data469->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN( 313)										data470->oPos = (data470->oPos + (int)4);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN( 313)										data471->iiPos = (data471->iiPos + (int)2);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN( 313)										data472->ffPos = (data472->ffPos + (int)1);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN( 313)										data473->fPos = (data473->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN( 313)										data474->oPos = (data474->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN( 313)										data475->fPos = (data475->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN( 313)										data476->fPos = (data476->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN( 313)										data477->fPos = (data477->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN( 313)										data478->fPos = (data478->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN( 313)										data479->oPos = (data479->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN( 313)										data480->fPos = (data480->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN( 313)										data481->fPos = (data481->fPos + (int)5);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN( 313)										data482->oPos = (data482->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN( 313)										data483->oPos = (data483->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN( 313)										data484->oPos = (data484->oPos + (int)2);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN( 313)										data485->bPos = (data485->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN( 313)										data486->oPos = (data486->oPos + (int)4);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN( 313)										data487->iiPos = (data487->iiPos + (int)2);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN( 313)										data488->ffPos = (data488->ffPos + (int)1);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN( 313)										data489->fPos = (data489->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN( 313)										data490->oPos = (data490->oPos + (int)4);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN( 313)										data491->iPos = (data491->iPos + (int)1);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN( 313)										data492->fPos = (data492->fPos + (int)2);
HXDLIN( 313)										 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN( 313)										data493->bPos = (data493->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN( 313)										data494->fPos = (data494->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN( 313)										data495->fPos = (data495->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 313)										 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN( 313)										data496->oPos = (data496->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 313)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 313)							 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN( 313)							 ::openfl::_internal::renderer::DrawCommandReader c126 = this16;
HXLINE( 314)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp26 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 314)							Float c127 = c126->buffer->f->__get(c126->fPos);
HXDLIN( 314)							::Array< Float > c128 = c126->buffer->f;
HXDLIN( 314)							_hx_tmp26->moveTo(c127,c128->__get((c126->fPos + (int)1)));
HXLINE( 315)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp27 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 315)							Float c129 = c126->buffer->f->__get(c126->fPos);
HXDLIN( 315)							::Array< Float > c130 = c126->buffer->f;
HXDLIN( 315)							_hx_tmp27->moveTo(c129,c130->__get((c126->fPos + (int)1)));
            						}
            						break;
            						case (int)20: {
HXLINE( 428)							{
HXLINE( 428)								{
HXLINE( 428)									 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN( 428)									switch((int)(_hx_getEnumValueIndex(_g18))){
            										case (int)0: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN( 428)											data497->oPos = (data497->oPos + (int)2);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN( 428)											data498->bPos = (data498->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN( 428)											data499->iPos = (data499->iPos + (int)1);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN( 428)											data500->fPos = (data500->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN( 428)											data501->oPos = (data501->oPos + (int)4);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN( 428)											data502->iiPos = (data502->iiPos + (int)2);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN( 428)											data503->ffPos = (data503->ffPos + (int)1);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN( 428)											data504->fPos = (data504->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN( 428)											data505->oPos = (data505->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN( 428)											data506->fPos = (data506->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN( 428)											data507->fPos = (data507->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN( 428)											data508->fPos = (data508->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN( 428)											data509->fPos = (data509->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN( 428)											data510->oPos = (data510->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN( 428)											data511->fPos = (data511->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN( 428)											data512->fPos = (data512->fPos + (int)5);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN( 428)											data513->oPos = (data513->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN( 428)											data514->oPos = (data514->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN( 428)											data515->oPos = (data515->oPos + (int)2);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN( 428)											data516->bPos = (data516->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN( 428)											data517->oPos = (data517->oPos + (int)4);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN( 428)											data518->iiPos = (data518->iiPos + (int)2);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN( 428)											data519->ffPos = (data519->ffPos + (int)1);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN( 428)											data520->fPos = (data520->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN( 428)											data521->oPos = (data521->oPos + (int)4);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN( 428)											data522->iPos = (data522->iPos + (int)1);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN( 428)											data523->fPos = (data523->fPos + (int)2);
HXDLIN( 428)											 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN( 428)											data524->bPos = (data524->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN( 428)											data525->fPos = (data525->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN( 428)											data526->fPos = (data526->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 428)											 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN( 428)											data527->oPos = (data527->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 428)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN( 428)								 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
            							}
HXLINE( 429)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
            						}
            						break;
            						case (int)21: {
HXLINE( 433)							{
HXLINE( 433)								{
HXLINE( 433)									 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN( 433)									switch((int)(_hx_getEnumValueIndex(_g19))){
            										case (int)0: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN( 433)											data528->oPos = (data528->oPos + (int)2);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN( 433)											data529->bPos = (data529->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN( 433)											data530->iPos = (data530->iPos + (int)1);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN( 433)											data531->fPos = (data531->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN( 433)											data532->oPos = (data532->oPos + (int)4);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN( 433)											data533->iiPos = (data533->iiPos + (int)2);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN( 433)											data534->ffPos = (data534->ffPos + (int)1);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN( 433)											data535->fPos = (data535->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN( 433)											data536->oPos = (data536->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN( 433)											data537->fPos = (data537->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN( 433)											data538->fPos = (data538->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN( 433)											data539->fPos = (data539->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN( 433)											data540->fPos = (data540->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN( 433)											data541->oPos = (data541->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN( 433)											data542->fPos = (data542->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN( 433)											data543->fPos = (data543->fPos + (int)5);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN( 433)											data544->oPos = (data544->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN( 433)											data545->oPos = (data545->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN( 433)											data546->oPos = (data546->oPos + (int)2);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN( 433)											data547->bPos = (data547->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN( 433)											data548->oPos = (data548->oPos + (int)4);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN( 433)											data549->iiPos = (data549->iiPos + (int)2);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN( 433)											data550->ffPos = (data550->ffPos + (int)1);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN( 433)											data551->fPos = (data551->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data552 = data;
HXDLIN( 433)											data552->oPos = (data552->oPos + (int)4);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data553 = data;
HXDLIN( 433)											data553->iPos = (data553->iPos + (int)1);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data554 = data;
HXDLIN( 433)											data554->fPos = (data554->fPos + (int)2);
HXDLIN( 433)											 ::openfl::_internal::renderer::DrawCommandReader data555 = data;
HXDLIN( 433)											data555->bPos = (data555->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data556 = data;
HXDLIN( 433)											data556->fPos = (data556->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data557 = data;
HXDLIN( 433)											data557->fPos = (data557->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 433)											 ::openfl::_internal::renderer::DrawCommandReader data558 = data;
HXDLIN( 433)											data558->oPos = (data558->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 433)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN( 433)								 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
            							}
HXLINE( 434)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)0);
            						}
            						break;
            						default:{
HXLINE( 438)							{
HXLINE( 438)								 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN( 438)								switch((int)(_hx_getEnumValueIndex(_g20))){
            									case (int)0: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data559 = data;
HXDLIN( 438)										data559->oPos = (data559->oPos + (int)2);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data560 = data;
HXDLIN( 438)										data560->bPos = (data560->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data561 = data;
HXDLIN( 438)										data561->iPos = (data561->iPos + (int)1);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data562 = data;
HXDLIN( 438)										data562->fPos = (data562->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data563 = data;
HXDLIN( 438)										data563->oPos = (data563->oPos + (int)4);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data564 = data;
HXDLIN( 438)										data564->iiPos = (data564->iiPos + (int)2);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data565 = data;
HXDLIN( 438)										data565->ffPos = (data565->ffPos + (int)1);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data566 = data;
HXDLIN( 438)										data566->fPos = (data566->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data567 = data;
HXDLIN( 438)										data567->oPos = (data567->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data568 = data;
HXDLIN( 438)										data568->fPos = (data568->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data569 = data;
HXDLIN( 438)										data569->fPos = (data569->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data570 = data;
HXDLIN( 438)										data570->fPos = (data570->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data571 = data;
HXDLIN( 438)										data571->fPos = (data571->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data572 = data;
HXDLIN( 438)										data572->oPos = (data572->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data573 = data;
HXDLIN( 438)										data573->fPos = (data573->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data574 = data;
HXDLIN( 438)										data574->fPos = (data574->fPos + (int)5);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data575 = data;
HXDLIN( 438)										data575->oPos = (data575->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data576 = data;
HXDLIN( 438)										data576->oPos = (data576->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data577 = data;
HXDLIN( 438)										data577->oPos = (data577->oPos + (int)2);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data578 = data;
HXDLIN( 438)										data578->bPos = (data578->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data579 = data;
HXDLIN( 438)										data579->oPos = (data579->oPos + (int)4);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data580 = data;
HXDLIN( 438)										data580->iiPos = (data580->iiPos + (int)2);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data581 = data;
HXDLIN( 438)										data581->ffPos = (data581->ffPos + (int)1);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data582 = data;
HXDLIN( 438)										data582->fPos = (data582->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data583 = data;
HXDLIN( 438)										data583->oPos = (data583->oPos + (int)4);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data584 = data;
HXDLIN( 438)										data584->iPos = (data584->iPos + (int)1);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data585 = data;
HXDLIN( 438)										data585->fPos = (data585->fPos + (int)2);
HXDLIN( 438)										 ::openfl::_internal::renderer::DrawCommandReader data586 = data;
HXDLIN( 438)										data586->bPos = (data586->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data587 = data;
HXDLIN( 438)										data587->fPos = (data587->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data588 = data;
HXDLIN( 438)										data588->fPos = (data588->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 438)										 ::openfl::_internal::renderer::DrawCommandReader data589 = data;
HXDLIN( 438)										data589->oPos = (data589->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 438)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE( 444)			bool hitTest = false;
HXLINE( 446)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->get_length() > (int)0)) {
HXLINE( 448)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
            			}
HXLINE( 452)			bool _hx_tmp28;
HXDLIN( 452)			if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 452)				_hx_tmp28 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            			}
            			else {
HXLINE( 452)				_hx_tmp28 = false;
            			}
HXDLIN( 452)			if (_hx_tmp28) {
HXLINE( 454)				hitTest = true;
            			}
HXLINE( 458)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->get_length() > (int)0)) {
HXLINE( 460)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
            			}
HXLINE( 464)			bool _hx_tmp29;
HXDLIN( 464)			if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 464)				_hx_tmp29 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            			}
            			else {
HXLINE( 464)				_hx_tmp29 = false;
            			}
HXDLIN( 464)			if (_hx_tmp29) {
HXLINE( 466)				hitTest = true;
            			}
HXLINE( 470)			data->destroy();
HXLINE( 472)			return hitTest;
            		}
HXLINE( 253)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CairoGraphics_obj,hitTest,return )

bool CairoGraphics_obj::isCCW(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_486_isCCW)
HXDLIN( 486)		return ((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,isCCW,return )

 ::Dynamic CairoGraphics_obj::normalizeUVT( ::openfl::_Vector::FloatVector uvt,hx::Null< bool >  __o_skipT){
bool skipT = __o_skipT.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_491_normalizeUVT)
HXLINE( 493)		Float max = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 494)		Float tmp = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 495)		int len = uvt->get_length();
HXLINE( 497)		{
HXLINE( 497)			int _g1 = (int)1;
HXDLIN( 497)			int _g = (len + (int)1);
HXDLIN( 497)			while((_g1 < _g)){
HXLINE( 497)				_g1 = (_g1 + (int)1);
HXDLIN( 497)				int t = (_g1 - (int)1);
HXLINE( 499)				bool _hx_tmp;
HXDLIN( 499)				if (skipT) {
HXLINE( 499)					_hx_tmp = (hx::Mod(t,(int)3) == (int)0);
            				}
            				else {
HXLINE( 499)					_hx_tmp = false;
            				}
HXDLIN( 499)				if (_hx_tmp) {
HXLINE( 501)					continue;
            				}
HXLINE( 505)				tmp = uvt->get((t - (int)1));
HXLINE( 507)				if ((max < tmp)) {
HXLINE( 509)					max = tmp;
            				}
            			}
            		}
HXLINE( 515)		if (!(skipT)) {
HXLINE( 517)			return  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("max",a4,0a,53,00),max)
            				->setFixed(1,HX_("uvt",f3,2e,59,00),uvt));
            		}
HXLINE( 521)		int length = null();
HXDLIN( 521)		bool fixed = null();
HXDLIN( 521)		 ::openfl::_Vector::FloatVector result =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length,fixed,null(),true);
HXLINE( 523)		{
HXLINE( 523)			int _g11 = (int)1;
HXDLIN( 523)			int _g2 = (len + (int)1);
HXDLIN( 523)			while((_g11 < _g2)){
HXLINE( 523)				_g11 = (_g11 + (int)1);
HXDLIN( 523)				int t1 = (_g11 - (int)1);
HXLINE( 525)				bool _hx_tmp1;
HXDLIN( 525)				if (skipT) {
HXLINE( 525)					_hx_tmp1 = (hx::Mod(t1,(int)3) == (int)0);
            				}
            				else {
HXLINE( 525)					_hx_tmp1 = false;
            				}
HXDLIN( 525)				if (_hx_tmp1) {
HXLINE( 527)					continue;
            				}
HXLINE( 531)				result->push(uvt->get((t1 - (int)1)));
            			}
            		}
HXLINE( 535)		return  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("max",a4,0a,53,00),max)
            			->setFixed(1,HX_("uvt",f3,2e,59,00),result));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,normalizeUVT,return )

void CairoGraphics_obj::playCommands( ::openfl::_internal::renderer::DrawCommandBuffer commands,hx::Null< bool >  __o_stroke){
bool stroke = __o_stroke.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_540_playCommands)
HXLINE( 542)		if ((commands->get_length() == (int)0)) {
HXLINE( 542)			return;
            		}
HXLINE( 544)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds;
HXLINE( 546)		Float offsetX = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x;
HXLINE( 547)		Float offsetY = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y;
HXLINE( 549)		Float positionX = ((Float)0.0);
HXLINE( 550)		Float positionY = ((Float)0.0);
HXLINE( 552)		bool closeGap = false;
HXLINE( 553)		Float startX = ((Float)0.0);
HXLINE( 554)		Float startY = ((Float)0.0);
HXLINE( 555)		bool setStart = false;
HXLINE( 557)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
HXLINE( 558)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_antialias((int)3);
HXLINE( 560)		bool hasPath = false;
HXLINE( 562)		 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,commands);
HXLINE( 564)		Float x;
HXDLIN( 564)		Float y;
HXDLIN( 564)		Float width;
HXDLIN( 564)		Float height;
HXDLIN( 564)		Float kappa = ((Float).5522848);
HXDLIN( 564)		Float ox;
HXDLIN( 564)		Float oy;
HXDLIN( 564)		Float xe;
HXDLIN( 564)		Float ye;
HXDLIN( 564)		Float xm;
HXDLIN( 564)		Float ym;
HXDLIN( 564)		Float r;
HXDLIN( 564)		Float g;
HXDLIN( 564)		Float b;
HXLINE( 566)		{
HXLINE( 566)			int _g = (int)0;
HXDLIN( 566)			::Array< ::Dynamic> _g1 = commands->types;
HXDLIN( 566)			while((_g < _g1->length)){
HXLINE( 566)				 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN( 566)				_g = (_g + (int)1);
HXLINE( 568)				switch((int)(_hx_getEnumValueIndex(type))){
            					case (int)0: {
HXLINE( 761)						{
HXLINE( 761)							 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN( 761)							switch((int)(_hx_getEnumValueIndex(_g2))){
            								case (int)0: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN( 761)									data1->oPos = (data1->oPos + (int)2);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN( 761)									data2->bPos = (data2->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN( 761)									data3->iPos = (data3->iPos + (int)1);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN( 761)									data4->fPos = (data4->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN( 761)									data5->oPos = (data5->oPos + (int)4);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN( 761)									data6->iiPos = (data6->iiPos + (int)2);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN( 761)									data7->ffPos = (data7->ffPos + (int)1);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN( 761)									data8->fPos = (data8->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN( 761)									data9->oPos = (data9->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN( 761)									data10->fPos = (data10->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN( 761)									data11->fPos = (data11->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN( 761)									data12->fPos = (data12->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN( 761)									data13->fPos = (data13->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN( 761)									data14->oPos = (data14->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN( 761)									data15->fPos = (data15->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN( 761)									data16->fPos = (data16->fPos + (int)5);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN( 761)									data17->oPos = (data17->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN( 761)									data18->oPos = (data18->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN( 761)									data19->oPos = (data19->oPos + (int)2);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN( 761)									data20->bPos = (data20->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN( 761)									data21->oPos = (data21->oPos + (int)4);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN( 761)									data22->iiPos = (data22->iiPos + (int)2);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN( 761)									data23->ffPos = (data23->ffPos + (int)1);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN( 761)									data24->fPos = (data24->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN( 761)									data25->oPos = (data25->oPos + (int)4);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN( 761)									data26->iPos = (data26->iPos + (int)1);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN( 761)									data27->fPos = (data27->fPos + (int)2);
HXDLIN( 761)									 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN( 761)									data28->bPos = (data28->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN( 761)									data29->fPos = (data29->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN( 761)									data30->fPos = (data30->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 761)									 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN( 761)									data31->oPos = (data31->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 761)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 761)						 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN( 761)						 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE( 762)						 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 762)						::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN( 762)						 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN( 762)						bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN( 762)						::Array< bool > c5 = c->buffer->b;
HXDLIN( 762)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE( 764)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXLINE( 765)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapRepeat = c->buffer->b->__get(c->bPos);
HXLINE( 767)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            					}
            					break;
            					case (int)1: {
HXLINE( 771)						{
HXLINE( 771)							 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN( 771)							switch((int)(_hx_getEnumValueIndex(_g3))){
            								case (int)0: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN( 771)									data32->oPos = (data32->oPos + (int)2);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN( 771)									data33->bPos = (data33->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN( 771)									data34->iPos = (data34->iPos + (int)1);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN( 771)									data35->fPos = (data35->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN( 771)									data36->oPos = (data36->oPos + (int)4);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN( 771)									data37->iiPos = (data37->iiPos + (int)2);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN( 771)									data38->ffPos = (data38->ffPos + (int)1);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN( 771)									data39->fPos = (data39->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN( 771)									data40->oPos = (data40->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN( 771)									data41->fPos = (data41->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN( 771)									data42->fPos = (data42->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN( 771)									data43->fPos = (data43->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN( 771)									data44->fPos = (data44->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN( 771)									data45->oPos = (data45->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN( 771)									data46->fPos = (data46->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN( 771)									data47->fPos = (data47->fPos + (int)5);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN( 771)									data48->oPos = (data48->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN( 771)									data49->oPos = (data49->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN( 771)									data50->oPos = (data50->oPos + (int)2);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN( 771)									data51->bPos = (data51->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN( 771)									data52->oPos = (data52->oPos + (int)4);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN( 771)									data53->iiPos = (data53->iiPos + (int)2);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN( 771)									data54->ffPos = (data54->ffPos + (int)1);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN( 771)									data55->fPos = (data55->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN( 771)									data56->oPos = (data56->oPos + (int)4);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN( 771)									data57->iPos = (data57->iPos + (int)1);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN( 771)									data58->fPos = (data58->fPos + (int)2);
HXDLIN( 771)									 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN( 771)									data59->bPos = (data59->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN( 771)									data60->fPos = (data60->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN( 771)									data61->fPos = (data61->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 771)									 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN( 771)									data62->oPos = (data62->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 771)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 771)						 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN( 771)						 ::openfl::_internal::renderer::DrawCommandReader c6 = this2;
HXLINE( 772)						if ((c6->buffer->f->__get(c6->fPos) < ((Float)0.005))) {
HXLINE( 774)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
            						}
            						else {
HXLINE( 778)							if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern )) {
HXLINE( 780)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = null();
            							}
HXLINE( 784)							Float _hx_tmp = ((Float)hx::UShr(((int)c6->buffer->i->__get(c6->iPos) & (int)(int)16711680),(int)16) / (Float)(int)255);
HXDLIN( 784)							Float _hx_tmp1 = ((Float)hx::UShr(((int)c6->buffer->i->__get(c6->iPos) & (int)(int)65280),(int)8) / (Float)(int)255);
HXDLIN( 784)							Float _hx_tmp2 = ((Float)((int)c6->buffer->i->__get(c6->iPos) & (int)(int)255) / (Float)(int)255);
HXDLIN( 784)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA(_hx_tmp,_hx_tmp1,_hx_tmp2,c6->buffer->f->__get(c6->fPos));
HXLINE( 785)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            						}
HXLINE( 789)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)2: {
HXLINE( 793)						{
HXLINE( 793)							 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN( 793)							switch((int)(_hx_getEnumValueIndex(_g4))){
            								case (int)0: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN( 793)									data63->oPos = (data63->oPos + (int)2);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN( 793)									data64->bPos = (data64->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN( 793)									data65->iPos = (data65->iPos + (int)1);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN( 793)									data66->fPos = (data66->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN( 793)									data67->oPos = (data67->oPos + (int)4);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN( 793)									data68->iiPos = (data68->iiPos + (int)2);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN( 793)									data69->ffPos = (data69->ffPos + (int)1);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN( 793)									data70->fPos = (data70->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN( 793)									data71->oPos = (data71->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN( 793)									data72->fPos = (data72->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN( 793)									data73->fPos = (data73->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN( 793)									data74->fPos = (data74->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN( 793)									data75->fPos = (data75->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN( 793)									data76->oPos = (data76->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN( 793)									data77->fPos = (data77->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN( 793)									data78->fPos = (data78->fPos + (int)5);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN( 793)									data79->oPos = (data79->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN( 793)									data80->oPos = (data80->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN( 793)									data81->oPos = (data81->oPos + (int)2);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN( 793)									data82->bPos = (data82->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN( 793)									data83->oPos = (data83->oPos + (int)4);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN( 793)									data84->iiPos = (data84->iiPos + (int)2);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN( 793)									data85->ffPos = (data85->ffPos + (int)1);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN( 793)									data86->fPos = (data86->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN( 793)									data87->oPos = (data87->oPos + (int)4);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN( 793)									data88->iPos = (data88->iPos + (int)1);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN( 793)									data89->fPos = (data89->fPos + (int)2);
HXDLIN( 793)									 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN( 793)									data90->bPos = (data90->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN( 793)									data91->fPos = (data91->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN( 793)									data92->fPos = (data92->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 793)									 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN( 793)									data93->oPos = (data93->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 793)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 793)						 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN( 793)						 ::openfl::_internal::renderer::DrawCommandReader c7 = this3;
HXLINE( 794)						if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern )) {
HXLINE( 796)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = null();
            						}
HXLINE( 800)						::Array< ::Dynamic> c8 = c7->buffer->ii;
HXDLIN( 800)						::cpp::VirtualArray c9 = c7->buffer->o;
HXDLIN( 800)						::cpp::VirtualArray c10 = c7->buffer->o;
HXDLIN( 800)						::cpp::VirtualArray c11 = c7->buffer->o;
HXDLIN( 800)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createGradientPattern(c7->buffer->o->__get(c7->oPos),c7->buffer->ii->__get(c7->iiPos).StaticCast< ::Array< int > >(),c7->buffer->ff->__get(c7->ffPos).StaticCast< ::Array< Float > >(),c8->__get((c7->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c9->__get((c7->oPos + (int)1))) ),c10->__get((c7->oPos + (int)2)),c11->__get((c7->oPos + (int)3)),c7->buffer->f->__get(c7->fPos));
HXLINE( 802)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
HXLINE( 803)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)3: {
HXLINE( 807)						{
HXLINE( 807)							 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN( 807)							switch((int)(_hx_getEnumValueIndex(_g5))){
            								case (int)0: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN( 807)									data94->oPos = (data94->oPos + (int)2);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN( 807)									data95->bPos = (data95->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN( 807)									data96->iPos = (data96->iPos + (int)1);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN( 807)									data97->fPos = (data97->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN( 807)									data98->oPos = (data98->oPos + (int)4);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN( 807)									data99->iiPos = (data99->iiPos + (int)2);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN( 807)									data100->ffPos = (data100->ffPos + (int)1);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN( 807)									data101->fPos = (data101->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN( 807)									data102->oPos = (data102->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN( 807)									data103->fPos = (data103->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN( 807)									data104->fPos = (data104->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN( 807)									data105->fPos = (data105->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN( 807)									data106->fPos = (data106->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN( 807)									data107->oPos = (data107->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN( 807)									data108->fPos = (data108->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN( 807)									data109->fPos = (data109->fPos + (int)5);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN( 807)									data110->oPos = (data110->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN( 807)									data111->oPos = (data111->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN( 807)									data112->oPos = (data112->oPos + (int)2);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN( 807)									data113->bPos = (data113->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN( 807)									data114->oPos = (data114->oPos + (int)4);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN( 807)									data115->iiPos = (data115->iiPos + (int)2);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN( 807)									data116->ffPos = (data116->ffPos + (int)1);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN( 807)									data117->fPos = (data117->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN( 807)									data118->oPos = (data118->oPos + (int)4);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN( 807)									data119->iPos = (data119->iPos + (int)1);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN( 807)									data120->fPos = (data120->fPos + (int)2);
HXDLIN( 807)									 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN( 807)									data121->bPos = (data121->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN( 807)									data122->fPos = (data122->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN( 807)									data123->fPos = (data123->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 807)									 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN( 807)									data124->oPos = (data124->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 807)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN( 807)						 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN( 807)						 ::openfl::_internal::renderer::DrawCommandReader c12 = this4;
HXLINE( 808)						 ::openfl::_internal::renderer::ShaderBuffer shaderBuffer = ( ( ::openfl::_internal::renderer::ShaderBuffer)(c12->buffer->o->__get(c12->oPos)) );
HXLINE( 810)						if ((shaderBuffer->inputCount > (int)0)) {
HXLINE( 812)							 ::openfl::display::BitmapData shaderBuffer1 = shaderBuffer->inputs->__get((int)0).StaticCast<  ::openfl::display::BitmapData >();
HXDLIN( 812)							bool _hx_tmp3 = hx::IsNotEq( shaderBuffer->inputWrap->__get((int)0),(int)0 );
HXDLIN( 812)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(shaderBuffer1,null(),_hx_tmp3,hx::IsNotEq( shaderBuffer->inputFilter->__get((int)0),(int)5 ));
HXLINE( 814)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = shaderBuffer->inputs->__get((int)0).StaticCast<  ::openfl::display::BitmapData >();
HXLINE( 815)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapRepeat = false;
HXLINE( 817)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            						}
            					}
            					break;
            					case (int)4: {
HXLINE( 572)						{
HXLINE( 572)							 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN( 572)							switch((int)(_hx_getEnumValueIndex(_g6))){
            								case (int)0: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN( 572)									data125->oPos = (data125->oPos + (int)2);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN( 572)									data126->bPos = (data126->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN( 572)									data127->iPos = (data127->iPos + (int)1);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN( 572)									data128->fPos = (data128->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN( 572)									data129->oPos = (data129->oPos + (int)4);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN( 572)									data130->iiPos = (data130->iiPos + (int)2);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN( 572)									data131->ffPos = (data131->ffPos + (int)1);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN( 572)									data132->fPos = (data132->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN( 572)									data133->oPos = (data133->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN( 572)									data134->fPos = (data134->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN( 572)									data135->fPos = (data135->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN( 572)									data136->fPos = (data136->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN( 572)									data137->fPos = (data137->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN( 572)									data138->oPos = (data138->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN( 572)									data139->fPos = (data139->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN( 572)									data140->fPos = (data140->fPos + (int)5);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN( 572)									data141->oPos = (data141->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN( 572)									data142->oPos = (data142->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN( 572)									data143->oPos = (data143->oPos + (int)2);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN( 572)									data144->bPos = (data144->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN( 572)									data145->oPos = (data145->oPos + (int)4);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN( 572)									data146->iiPos = (data146->iiPos + (int)2);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN( 572)									data147->ffPos = (data147->ffPos + (int)1);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN( 572)									data148->fPos = (data148->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN( 572)									data149->oPos = (data149->oPos + (int)4);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN( 572)									data150->iPos = (data150->iPos + (int)1);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN( 572)									data151->fPos = (data151->fPos + (int)2);
HXDLIN( 572)									 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN( 572)									data152->bPos = (data152->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN( 572)									data153->fPos = (data153->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN( 572)									data154->fPos = (data154->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 572)									 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN( 572)									data155->oPos = (data155->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 572)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 572)						 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN( 572)						 ::openfl::_internal::renderer::DrawCommandReader c13 = this5;
HXLINE( 573)						hasPath = true;
HXLINE( 574)						 ::lime::graphics::cairo::Cairo _hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 574)						Float _hx_tmp5 = (c13->buffer->f->__get(c13->fPos) - offsetX);
HXDLIN( 574)						::Array< Float > c14 = c13->buffer->f;
HXDLIN( 574)						Float _hx_tmp6 = (c14->__get((c13->fPos + (int)1)) - offsetY);
HXDLIN( 574)						::Array< Float > c15 = c13->buffer->f;
HXDLIN( 574)						Float _hx_tmp7 = (c15->__get((c13->fPos + (int)2)) - offsetX);
HXDLIN( 574)						::Array< Float > c16 = c13->buffer->f;
HXDLIN( 574)						Float _hx_tmp8 = (c16->__get((c13->fPos + (int)3)) - offsetY);
HXDLIN( 574)						::Array< Float > c17 = c13->buffer->f;
HXDLIN( 574)						Float _hx_tmp9 = (c17->__get((c13->fPos + (int)4)) - offsetX);
HXDLIN( 574)						::Array< Float > c18 = c13->buffer->f;
HXDLIN( 574)						_hx_tmp4->curveTo(_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8,_hx_tmp9,(c18->__get((c13->fPos + (int)5)) - offsetY));
            					}
            					break;
            					case (int)5: {
HXLINE( 578)						{
HXLINE( 578)							 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN( 578)							switch((int)(_hx_getEnumValueIndex(_g7))){
            								case (int)0: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN( 578)									data156->oPos = (data156->oPos + (int)2);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN( 578)									data157->bPos = (data157->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN( 578)									data158->iPos = (data158->iPos + (int)1);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN( 578)									data159->fPos = (data159->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN( 578)									data160->oPos = (data160->oPos + (int)4);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN( 578)									data161->iiPos = (data161->iiPos + (int)2);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN( 578)									data162->ffPos = (data162->ffPos + (int)1);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN( 578)									data163->fPos = (data163->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN( 578)									data164->oPos = (data164->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN( 578)									data165->fPos = (data165->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN( 578)									data166->fPos = (data166->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN( 578)									data167->fPos = (data167->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN( 578)									data168->fPos = (data168->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN( 578)									data169->oPos = (data169->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN( 578)									data170->fPos = (data170->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN( 578)									data171->fPos = (data171->fPos + (int)5);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN( 578)									data172->oPos = (data172->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN( 578)									data173->oPos = (data173->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN( 578)									data174->oPos = (data174->oPos + (int)2);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN( 578)									data175->bPos = (data175->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN( 578)									data176->oPos = (data176->oPos + (int)4);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN( 578)									data177->iiPos = (data177->iiPos + (int)2);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN( 578)									data178->ffPos = (data178->ffPos + (int)1);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN( 578)									data179->fPos = (data179->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN( 578)									data180->oPos = (data180->oPos + (int)4);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN( 578)									data181->iPos = (data181->iPos + (int)1);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN( 578)									data182->fPos = (data182->fPos + (int)2);
HXDLIN( 578)									 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN( 578)									data183->bPos = (data183->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN( 578)									data184->fPos = (data184->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN( 578)									data185->fPos = (data185->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 578)									 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN( 578)									data186->oPos = (data186->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 578)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 578)						 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN( 578)						 ::openfl::_internal::renderer::DrawCommandReader c19 = this6;
HXLINE( 579)						hasPath = true;
HXLINE( 580)						Float _hx_tmp10 = (c19->buffer->f->__get(c19->fPos) - offsetX);
HXDLIN( 580)						::Array< Float > c20 = c19->buffer->f;
HXDLIN( 580)						Float _hx_tmp11 = (c20->__get((c19->fPos + (int)1)) - offsetY);
HXDLIN( 580)						::Array< Float > c21 = c19->buffer->f;
HXDLIN( 580)						Float _hx_tmp12 = (c21->__get((c19->fPos + (int)2)) - offsetX);
HXDLIN( 580)						::Array< Float > c22 = c19->buffer->f;
HXDLIN( 580)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(_hx_tmp10,_hx_tmp11,_hx_tmp12,(c22->__get((c19->fPos + (int)3)) - offsetY));
            					}
            					break;
            					case (int)6: {
HXLINE( 584)						{
HXLINE( 584)							 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN( 584)							switch((int)(_hx_getEnumValueIndex(_g8))){
            								case (int)0: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN( 584)									data187->oPos = (data187->oPos + (int)2);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN( 584)									data188->bPos = (data188->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN( 584)									data189->iPos = (data189->iPos + (int)1);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN( 584)									data190->fPos = (data190->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN( 584)									data191->oPos = (data191->oPos + (int)4);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN( 584)									data192->iiPos = (data192->iiPos + (int)2);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN( 584)									data193->ffPos = (data193->ffPos + (int)1);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN( 584)									data194->fPos = (data194->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN( 584)									data195->oPos = (data195->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN( 584)									data196->fPos = (data196->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN( 584)									data197->fPos = (data197->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN( 584)									data198->fPos = (data198->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN( 584)									data199->fPos = (data199->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN( 584)									data200->oPos = (data200->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN( 584)									data201->fPos = (data201->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN( 584)									data202->fPos = (data202->fPos + (int)5);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN( 584)									data203->oPos = (data203->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN( 584)									data204->oPos = (data204->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN( 584)									data205->oPos = (data205->oPos + (int)2);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN( 584)									data206->bPos = (data206->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN( 584)									data207->oPos = (data207->oPos + (int)4);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN( 584)									data208->iiPos = (data208->iiPos + (int)2);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN( 584)									data209->ffPos = (data209->ffPos + (int)1);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN( 584)									data210->fPos = (data210->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN( 584)									data211->oPos = (data211->oPos + (int)4);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN( 584)									data212->iPos = (data212->iPos + (int)1);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN( 584)									data213->fPos = (data213->fPos + (int)2);
HXDLIN( 584)									 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN( 584)									data214->bPos = (data214->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN( 584)									data215->fPos = (data215->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN( 584)									data216->fPos = (data216->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 584)									 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN( 584)									data217->oPos = (data217->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 584)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 584)						 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN( 584)						 ::openfl::_internal::renderer::DrawCommandReader c23 = this7;
HXLINE( 585)						hasPath = true;
HXLINE( 586)						 ::lime::graphics::cairo::Cairo _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 586)						Float _hx_tmp14 = (c23->buffer->f->__get(c23->fPos) - offsetX);
HXDLIN( 586)						::Array< Float > c24 = c23->buffer->f;
HXDLIN( 586)						Float _hx_tmp15 = (_hx_tmp14 + c24->__get((c23->fPos + (int)2)));
HXDLIN( 586)						::Array< Float > c25 = c23->buffer->f;
HXDLIN( 586)						_hx_tmp13->moveTo(_hx_tmp15,(c25->__get((c23->fPos + (int)1)) - offsetY));
HXLINE( 587)						 ::lime::graphics::cairo::Cairo _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 587)						Float _hx_tmp17 = (c23->buffer->f->__get(c23->fPos) - offsetX);
HXDLIN( 587)						::Array< Float > c26 = c23->buffer->f;
HXDLIN( 587)						Float _hx_tmp18 = (c26->__get((c23->fPos + (int)1)) - offsetY);
HXDLIN( 587)						::Array< Float > c27 = c23->buffer->f;
HXDLIN( 587)						Float c28 = c27->__get((c23->fPos + (int)2));
HXDLIN( 587)						_hx_tmp16->arc(_hx_tmp17,_hx_tmp18,c28,(int)0,(::Math_obj::PI * (int)2));
            					}
            					break;
            					case (int)7: {
HXLINE( 597)						{
HXLINE( 597)							 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN( 597)							switch((int)(_hx_getEnumValueIndex(_g9))){
            								case (int)0: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN( 597)									data218->oPos = (data218->oPos + (int)2);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN( 597)									data219->bPos = (data219->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN( 597)									data220->iPos = (data220->iPos + (int)1);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN( 597)									data221->fPos = (data221->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN( 597)									data222->oPos = (data222->oPos + (int)4);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN( 597)									data223->iiPos = (data223->iiPos + (int)2);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN( 597)									data224->ffPos = (data224->ffPos + (int)1);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN( 597)									data225->fPos = (data225->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN( 597)									data226->oPos = (data226->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN( 597)									data227->fPos = (data227->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN( 597)									data228->fPos = (data228->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN( 597)									data229->fPos = (data229->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN( 597)									data230->fPos = (data230->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN( 597)									data231->oPos = (data231->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN( 597)									data232->fPos = (data232->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN( 597)									data233->fPos = (data233->fPos + (int)5);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN( 597)									data234->oPos = (data234->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN( 597)									data235->oPos = (data235->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN( 597)									data236->oPos = (data236->oPos + (int)2);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN( 597)									data237->bPos = (data237->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN( 597)									data238->oPos = (data238->oPos + (int)4);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN( 597)									data239->iiPos = (data239->iiPos + (int)2);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN( 597)									data240->ffPos = (data240->ffPos + (int)1);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN( 597)									data241->fPos = (data241->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN( 597)									data242->oPos = (data242->oPos + (int)4);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN( 597)									data243->iPos = (data243->iPos + (int)1);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN( 597)									data244->fPos = (data244->fPos + (int)2);
HXDLIN( 597)									 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN( 597)									data245->bPos = (data245->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN( 597)									data246->fPos = (data246->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN( 597)									data247->fPos = (data247->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 597)									 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN( 597)									data248->oPos = (data248->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 597)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 597)						 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN( 597)						 ::openfl::_internal::renderer::DrawCommandReader c29 = this8;
HXLINE( 598)						hasPath = true;
HXLINE( 600)						x = c29->buffer->f->__get(c29->fPos);
HXLINE( 601)						::Array< Float > c30 = c29->buffer->f;
HXDLIN( 601)						y = c30->__get((c29->fPos + (int)1));
HXLINE( 602)						::Array< Float > c31 = c29->buffer->f;
HXDLIN( 602)						width = c31->__get((c29->fPos + (int)2));
HXLINE( 603)						::Array< Float > c32 = c29->buffer->f;
HXDLIN( 603)						height = c32->__get((c29->fPos + (int)3));
HXLINE( 605)						x = (x - offsetX);
HXLINE( 606)						y = (y - offsetY);
HXLINE( 608)						ox = (((Float)width / (Float)(int)2) * kappa);
HXLINE( 609)						oy = (((Float)height / (Float)(int)2) * kappa);
HXLINE( 610)						xe = (x + width);
HXLINE( 611)						ye = (y + height);
HXLINE( 612)						xm = (x + ((Float)width / (Float)(int)2));
HXLINE( 613)						ym = (y + ((Float)height / (Float)(int)2));
HXLINE( 615)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x,ym);
HXLINE( 616)						 ::lime::graphics::cairo::Cairo _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 616)						_hx_tmp19->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE( 617)						 ::lime::graphics::cairo::Cairo _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 617)						_hx_tmp20->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE( 618)						 ::lime::graphics::cairo::Cairo _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 618)						_hx_tmp21->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE( 619)						 ::lime::graphics::cairo::Cairo _hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 619)						_hx_tmp22->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            					}
            					break;
            					case (int)8: {
HXLINE( 823)						int cacheExtend = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::get_extend(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE( 824)						::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern,(int)0);
HXLINE( 826)						{
HXLINE( 826)							 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN( 826)							switch((int)(_hx_getEnumValueIndex(_g10))){
            								case (int)0: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN( 826)									data249->oPos = (data249->oPos + (int)2);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN( 826)									data250->bPos = (data250->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN( 826)									data251->iPos = (data251->iPos + (int)1);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN( 826)									data252->fPos = (data252->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN( 826)									data253->oPos = (data253->oPos + (int)4);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN( 826)									data254->iiPos = (data254->iiPos + (int)2);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN( 826)									data255->ffPos = (data255->ffPos + (int)1);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN( 826)									data256->fPos = (data256->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN( 826)									data257->oPos = (data257->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN( 826)									data258->fPos = (data258->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN( 826)									data259->fPos = (data259->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN( 826)									data260->fPos = (data260->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN( 826)									data261->fPos = (data261->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN( 826)									data262->oPos = (data262->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN( 826)									data263->fPos = (data263->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN( 826)									data264->fPos = (data264->fPos + (int)5);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN( 826)									data265->oPos = (data265->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN( 826)									data266->oPos = (data266->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN( 826)									data267->oPos = (data267->oPos + (int)2);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN( 826)									data268->bPos = (data268->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN( 826)									data269->oPos = (data269->oPos + (int)4);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN( 826)									data270->iiPos = (data270->iiPos + (int)2);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN( 826)									data271->ffPos = (data271->ffPos + (int)1);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN( 826)									data272->fPos = (data272->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN( 826)									data273->oPos = (data273->oPos + (int)4);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN( 826)									data274->iPos = (data274->iPos + (int)1);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN( 826)									data275->fPos = (data275->fPos + (int)2);
HXDLIN( 826)									 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN( 826)									data276->bPos = (data276->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN( 826)									data277->fPos = (data277->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN( 826)									data278->fPos = (data278->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 826)									 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN( 826)									data279->oPos = (data279->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 826)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN( 826)						 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN( 826)						 ::openfl::_internal::renderer::DrawCommandReader c33 = this9;
HXLINE( 827)						 ::openfl::_Vector::FloatVector rects = ( ( ::openfl::_Vector::FloatVector)(c33->buffer->o->__get(c33->oPos)) );
HXLINE( 828)						::cpp::VirtualArray c34 = c33->buffer->o;
HXDLIN( 828)						 ::openfl::_Vector::IntVector indices = ( ( ::openfl::_Vector::IntVector)(c34->__get((c33->oPos + (int)1))) );
HXLINE( 829)						::cpp::VirtualArray c35 = c33->buffer->o;
HXDLIN( 829)						 ::openfl::_Vector::FloatVector transforms = ( ( ::openfl::_Vector::FloatVector)(c35->__get((c33->oPos + (int)2))) );
HXLINE( 831)						bool hasIndices = hx::IsNotNull( indices );
HXLINE( 832)						bool transformABCD = false;
HXDLIN( 832)						bool transformXY = false;
HXLINE( 834)						int length;
HXDLIN( 834)						if (hasIndices) {
HXLINE( 834)							length = indices->get_length();
            						}
            						else {
HXLINE( 834)							length = ::Math_obj::floor(((Float)rects->get_length() / (Float)(int)4));
            						}
HXLINE( 835)						if ((length == (int)0)) {
HXLINE( 835)							return;
            						}
HXLINE( 837)						if (hx::IsNotNull( transforms )) {
HXLINE( 839)							int _hx_tmp23 = transforms->get_length();
HXDLIN( 839)							if ((_hx_tmp23 >= (length * (int)6))) {
HXLINE( 841)								transformABCD = true;
HXLINE( 842)								transformXY = true;
            							}
            							else {
HXLINE( 844)								int _hx_tmp24 = transforms->get_length();
HXDLIN( 844)								if ((_hx_tmp24 >= (length * (int)4))) {
HXLINE( 846)									transformABCD = true;
            								}
            								else {
HXLINE( 848)									int _hx_tmp25 = transforms->get_length();
HXDLIN( 848)									if ((_hx_tmp25 >= (length * (int)2))) {
HXLINE( 850)										transformXY = true;
            									}
            								}
            							}
            						}
HXLINE( 856)						 ::openfl::geom::Rectangle tileRect = ::openfl::geom::Rectangle_obj::_hx___pool->get();
HXLINE( 857)						 ::openfl::geom::Matrix tileTransform = ::openfl::geom::Matrix_obj::_hx___pool->get();
HXLINE( 859)						 ::openfl::geom::Rectangle sourceRect;
HXDLIN( 859)						if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill )) {
HXLINE( 859)							sourceRect = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->rect;
            						}
            						else {
HXLINE( 859)							sourceRect = null();
            						}
HXLINE( 860)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3->identity();
HXLINE( 862)						 ::openfl::geom::Matrix transform = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform;
HXLINE( 864)						Float alpha = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::worldAlpha;
HXLINE( 866)						int ri;
HXDLIN( 866)						int ti;
HXLINE( 868)						{
HXLINE( 868)							int _g31 = (int)0;
HXDLIN( 868)							int _g21 = length;
HXDLIN( 868)							while((_g31 < _g21)){
HXLINE( 868)								_g31 = (_g31 + (int)1);
HXDLIN( 868)								int i = (_g31 - (int)1);
HXLINE( 870)								if (hasIndices) {
HXLINE( 870)									ri = (indices->get(i) * (int)4);
            								}
            								else {
HXLINE( 870)									ri = (i * (int)4);
            								}
HXLINE( 871)								if ((ri < (int)0)) {
HXLINE( 871)									continue;
            								}
HXLINE( 872)								Float _hx_tmp26 = rects->get(ri);
HXDLIN( 872)								Float _hx_tmp27 = rects->get((ri + (int)1));
HXDLIN( 872)								Float _hx_tmp28 = rects->get((ri + (int)2));
HXDLIN( 872)								tileRect->setTo(_hx_tmp26,_hx_tmp27,_hx_tmp28,rects->get((ri + (int)3)));
HXLINE( 874)								bool _hx_tmp29;
HXDLIN( 874)								if (!((tileRect->width <= (int)0))) {
HXLINE( 874)									_hx_tmp29 = (tileRect->height <= (int)0);
            								}
            								else {
HXLINE( 874)									_hx_tmp29 = true;
            								}
HXDLIN( 874)								if (_hx_tmp29) {
HXLINE( 876)									continue;
            								}
HXLINE( 880)								bool _hx_tmp30;
HXDLIN( 880)								if (transformABCD) {
HXLINE( 880)									_hx_tmp30 = transformXY;
            								}
            								else {
HXLINE( 880)									_hx_tmp30 = false;
            								}
HXDLIN( 880)								if (_hx_tmp30) {
HXLINE( 882)									ti = (i * (int)6);
HXLINE( 883)									Float _hx_tmp31 = transforms->get(ti);
HXDLIN( 883)									Float _hx_tmp32 = transforms->get((ti + (int)1));
HXDLIN( 883)									Float _hx_tmp33 = transforms->get((ti + (int)2));
HXDLIN( 883)									Float _hx_tmp34 = transforms->get((ti + (int)3));
HXDLIN( 883)									Float _hx_tmp35 = transforms->get((ti + (int)4));
HXDLIN( 883)									tileTransform->setTo(_hx_tmp31,_hx_tmp32,_hx_tmp33,_hx_tmp34,_hx_tmp35,transforms->get((ti + (int)5)));
            								}
            								else {
HXLINE( 885)									if (transformABCD) {
HXLINE( 887)										ti = (i * (int)4);
HXLINE( 888)										Float _hx_tmp36 = transforms->get(ti);
HXDLIN( 888)										Float _hx_tmp37 = transforms->get((ti + (int)1));
HXDLIN( 888)										Float _hx_tmp38 = transforms->get((ti + (int)2));
HXDLIN( 888)										tileTransform->setTo(_hx_tmp36,_hx_tmp37,_hx_tmp38,transforms->get((ti + (int)3)),tileRect->x,tileRect->y);
            									}
            									else {
HXLINE( 890)										if (transformXY) {
HXLINE( 892)											ti = (i * (int)2);
HXLINE( 893)											tileTransform->tx = transforms->get(ti);
HXLINE( 894)											tileTransform->ty = transforms->get((ti + (int)1));
            										}
            										else {
HXLINE( 898)											tileTransform->tx = tileRect->x;
HXLINE( 899)											tileTransform->ty = tileRect->y;
            										}
            									}
            								}
HXLINE( 903)								 ::openfl::geom::Matrix tileTransform1 = tileTransform;
HXDLIN( 903)								tileTransform1->tx = (tileTransform1->tx + (positionX - offsetX));
HXLINE( 904)								 ::openfl::geom::Matrix tileTransform2 = tileTransform;
HXDLIN( 904)								tileTransform2->ty = (tileTransform2->ty + (positionY - offsetY));
HXLINE( 905)								tileTransform->concat(transform);
HXLINE( 914)								 ::lime::graphics::cairo::Cairo _hx_tmp39 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 914)								_hx_tmp39->set_matrix(tileTransform->_hx___toMatrix3());
HXLINE( 916)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3->tx = tileRect->x;
HXLINE( 917)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3->ty = tileRect->y;
HXLINE( 918)								::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern,::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3);
HXLINE( 919)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE( 921)								if (hx::IsNotEq( tileRect,sourceRect )) {
HXLINE( 923)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->save();
HXLINE( 925)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 926)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->rectangle((int)0,(int)0,tileRect->width,tileRect->height);
HXLINE( 927)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->clip();
            								}
HXLINE( 931)								if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE( 933)									if ((alpha == (int)1)) {
HXLINE( 935)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->paint();
            									}
            									else {
HXLINE( 939)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->paintWithAlpha(alpha);
            									}
            								}
HXLINE( 945)								if (hx::IsNotEq( tileRect,sourceRect )) {
HXLINE( 947)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->restore();
            								}
            							}
            						}
HXLINE( 953)						::openfl::geom::Rectangle_obj::_hx___pool->release(tileRect);
HXLINE( 954)						::openfl::geom::Matrix_obj::_hx___pool->release(tileTransform);
HXLINE( 956)						 ::lime::graphics::cairo::Cairo _hx_tmp40 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 956)						_hx_tmp40->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE( 957)						::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern,cacheExtend);
            					}
            					break;
            					case (int)9: {
HXLINE( 591)						{
HXLINE( 591)							 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN( 591)							switch((int)(_hx_getEnumValueIndex(_g11))){
            								case (int)0: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN( 591)									data280->oPos = (data280->oPos + (int)2);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN( 591)									data281->bPos = (data281->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN( 591)									data282->iPos = (data282->iPos + (int)1);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN( 591)									data283->fPos = (data283->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN( 591)									data284->oPos = (data284->oPos + (int)4);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN( 591)									data285->iiPos = (data285->iiPos + (int)2);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN( 591)									data286->ffPos = (data286->ffPos + (int)1);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN( 591)									data287->fPos = (data287->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN( 591)									data288->oPos = (data288->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN( 591)									data289->fPos = (data289->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN( 591)									data290->fPos = (data290->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN( 591)									data291->fPos = (data291->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN( 591)									data292->fPos = (data292->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN( 591)									data293->oPos = (data293->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN( 591)									data294->fPos = (data294->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN( 591)									data295->fPos = (data295->fPos + (int)5);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN( 591)									data296->oPos = (data296->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN( 591)									data297->oPos = (data297->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN( 591)									data298->oPos = (data298->oPos + (int)2);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN( 591)									data299->bPos = (data299->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN( 591)									data300->oPos = (data300->oPos + (int)4);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN( 591)									data301->iiPos = (data301->iiPos + (int)2);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN( 591)									data302->ffPos = (data302->ffPos + (int)1);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN( 591)									data303->fPos = (data303->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN( 591)									data304->oPos = (data304->oPos + (int)4);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN( 591)									data305->iPos = (data305->iPos + (int)1);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN( 591)									data306->fPos = (data306->fPos + (int)2);
HXDLIN( 591)									 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN( 591)									data307->bPos = (data307->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN( 591)									data308->fPos = (data308->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN( 591)									data309->fPos = (data309->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 591)									 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN( 591)									data310->oPos = (data310->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 591)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 591)						 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN( 591)						 ::openfl::_internal::renderer::DrawCommandReader c36 = this10;
HXLINE( 592)						hasPath = true;
HXLINE( 593)						 ::lime::graphics::cairo::Cairo _hx_tmp41 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 593)						Float _hx_tmp42 = (c36->buffer->f->__get(c36->fPos) - offsetX);
HXDLIN( 593)						::Array< Float > c37 = c36->buffer->f;
HXDLIN( 593)						Float _hx_tmp43 = (c37->__get((c36->fPos + (int)1)) - offsetY);
HXDLIN( 593)						::Array< Float > c38 = c36->buffer->f;
HXDLIN( 593)						Float c39 = c38->__get((c36->fPos + (int)2));
HXDLIN( 593)						::Array< Float > c40 = c36->buffer->f;
HXDLIN( 593)						_hx_tmp41->rectangle(_hx_tmp42,_hx_tmp43,c39,c40->__get((c36->fPos + (int)3)));
            					}
            					break;
            					case (int)10: {
HXLINE( 623)						{
HXLINE( 623)							 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN( 623)							switch((int)(_hx_getEnumValueIndex(_g12))){
            								case (int)0: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN( 623)									data311->oPos = (data311->oPos + (int)2);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN( 623)									data312->bPos = (data312->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN( 623)									data313->iPos = (data313->iPos + (int)1);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN( 623)									data314->fPos = (data314->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN( 623)									data315->oPos = (data315->oPos + (int)4);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN( 623)									data316->iiPos = (data316->iiPos + (int)2);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN( 623)									data317->ffPos = (data317->ffPos + (int)1);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN( 623)									data318->fPos = (data318->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN( 623)									data319->oPos = (data319->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN( 623)									data320->fPos = (data320->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN( 623)									data321->fPos = (data321->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN( 623)									data322->fPos = (data322->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN( 623)									data323->fPos = (data323->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN( 623)									data324->oPos = (data324->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN( 623)									data325->fPos = (data325->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN( 623)									data326->fPos = (data326->fPos + (int)5);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN( 623)									data327->oPos = (data327->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN( 623)									data328->oPos = (data328->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN( 623)									data329->oPos = (data329->oPos + (int)2);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN( 623)									data330->bPos = (data330->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN( 623)									data331->oPos = (data331->oPos + (int)4);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN( 623)									data332->iiPos = (data332->iiPos + (int)2);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN( 623)									data333->ffPos = (data333->ffPos + (int)1);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN( 623)									data334->fPos = (data334->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN( 623)									data335->oPos = (data335->oPos + (int)4);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN( 623)									data336->iPos = (data336->iPos + (int)1);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN( 623)									data337->fPos = (data337->fPos + (int)2);
HXDLIN( 623)									 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN( 623)									data338->bPos = (data338->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN( 623)									data339->fPos = (data339->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN( 623)									data340->fPos = (data340->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 623)									 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN( 623)									data341->oPos = (data341->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 623)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 623)						 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN( 623)						 ::openfl::_internal::renderer::DrawCommandReader c41 = this11;
HXLINE( 624)						hasPath = true;
HXLINE( 625)						Float _hx_tmp44 = (c41->buffer->f->__get(c41->fPos) - offsetX);
HXDLIN( 625)						::Array< Float > c42 = c41->buffer->f;
HXDLIN( 625)						Float _hx_tmp45 = (c42->__get((c41->fPos + (int)1)) - offsetY);
HXDLIN( 625)						::Array< Float > c43 = c41->buffer->f;
HXDLIN( 625)						Float c44 = c43->__get((c41->fPos + (int)2));
HXDLIN( 625)						::Array< Float > c45 = c41->buffer->f;
HXDLIN( 625)						Float c46 = c45->__get((c41->fPos + (int)3));
HXDLIN( 625)						::Array< Float > c47 = c41->buffer->f;
HXDLIN( 625)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::drawRoundRect(_hx_tmp44,_hx_tmp45,c44,c46,c47->__get((c41->fPos + (int)4)),c41->buffer->o->__get(c41->oPos));
            					}
            					break;
            					case (int)12: {
HXLINE( 961)						{
HXLINE( 961)							 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 961)							switch((int)(_hx_getEnumValueIndex(_g13))){
            								case (int)0: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 961)									data342->oPos = (data342->oPos + (int)2);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 961)									data343->bPos = (data343->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 961)									data344->iPos = (data344->iPos + (int)1);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 961)									data345->fPos = (data345->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 961)									data346->oPos = (data346->oPos + (int)4);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 961)									data347->iiPos = (data347->iiPos + (int)2);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 961)									data348->ffPos = (data348->ffPos + (int)1);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 961)									data349->fPos = (data349->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 961)									data350->oPos = (data350->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 961)									data351->fPos = (data351->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 961)									data352->fPos = (data352->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 961)									data353->fPos = (data353->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 961)									data354->fPos = (data354->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 961)									data355->oPos = (data355->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 961)									data356->fPos = (data356->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 961)									data357->fPos = (data357->fPos + (int)5);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 961)									data358->oPos = (data358->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 961)									data359->oPos = (data359->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 961)									data360->oPos = (data360->oPos + (int)2);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 961)									data361->bPos = (data361->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 961)									data362->oPos = (data362->oPos + (int)4);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 961)									data363->iiPos = (data363->iiPos + (int)2);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 961)									data364->ffPos = (data364->ffPos + (int)1);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 961)									data365->fPos = (data365->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 961)									data366->oPos = (data366->oPos + (int)4);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 961)									data367->iPos = (data367->iPos + (int)1);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 961)									data368->fPos = (data368->fPos + (int)2);
HXDLIN( 961)									 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 961)									data369->bPos = (data369->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 961)									data370->fPos = (data370->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 961)									data371->fPos = (data371->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 961)									 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 961)									data372->oPos = (data372->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 961)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN( 961)						 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 961)						 ::openfl::_internal::renderer::DrawCommandReader c48 = this12;
HXLINE( 962)						 ::openfl::_Vector::FloatVector v = ( ( ::openfl::_Vector::FloatVector)(c48->buffer->o->__get(c48->oPos)) );
HXLINE( 963)						::cpp::VirtualArray c49 = c48->buffer->o;
HXDLIN( 963)						 ::openfl::_Vector::IntVector ind = ( ( ::openfl::_Vector::IntVector)(c49->__get((c48->oPos + (int)1))) );
HXLINE( 964)						::cpp::VirtualArray c50 = c48->buffer->o;
HXDLIN( 964)						 ::openfl::_Vector::FloatVector uvt = ( ( ::openfl::_Vector::FloatVector)(c50->__get((c48->oPos + (int)2))) );
HXLINE( 965)						bool colorFill = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill );
HXLINE( 967)						bool _hx_tmp46;
HXDLIN( 967)						if (colorFill) {
HXLINE( 967)							_hx_tmp46 = hx::IsNotNull( uvt );
            						}
            						else {
HXLINE( 967)							_hx_tmp46 = false;
            						}
HXDLIN( 967)						if (_hx_tmp46) {
HXLINE( 969)							goto _hx_goto_14;
            						}
HXLINE( 973)						int width1 = (int)0;
HXLINE( 974)						int height1 = (int)0;
HXLINE( 975)						 ::lime::math::Matrix3 currentMatrix = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3();
HXLINE( 977)						if (!(colorFill)) {
HXLINE( 981)							if (hx::IsNull( uvt )) {
HXLINE( 983)								int length1 = null();
HXDLIN( 983)								bool fixed = null();
HXDLIN( 983)								uvt =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length1,fixed,null(),true);
HXLINE( 985)								{
HXLINE( 985)									int _g32 = (int)0;
HXDLIN( 985)									int _g22 = ::Std_obj::_hx_int(((Float)v->get_length() / (Float)(int)2));
HXDLIN( 985)									while((_g32 < _g22)){
HXLINE( 985)										_g32 = (_g32 + (int)1);
HXDLIN( 985)										int i1 = (_g32 - (int)1);
HXLINE( 987)										{
HXLINE( 987)											Float x1 = v->get((i1 * (int)2));
HXDLIN( 987)											uvt->push((x1 - ((Float)offsetX / (Float)::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->width)));
            										}
HXLINE( 988)										{
HXLINE( 988)											Float x2 = v->get(((i1 * (int)2) + (int)1));
HXDLIN( 988)											uvt->push((x2 - ((Float)offsetY / (Float)::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->height)));
            										}
            									}
            								}
            							}
HXLINE( 994)							::cpp::VirtualArray c51 = c48->buffer->o;
HXDLIN( 994)							int skipT = ::openfl::_Vector::IVector_obj::get_length(( ( ::openfl::_Vector::FloatVector)(c51->__get((c48->oPos + (int)2))) ));
HXDLIN( 994)							bool skipT1 = (skipT != v->get_length());
HXLINE( 995)							 ::Dynamic normalizedUVT = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::normalizeUVT(uvt,skipT1);
HXLINE( 996)							Float maxUVT = ( (Float)(normalizedUVT->__Field(HX_("max",a4,0a,53,00),hx::paccDynamic)) );
HXLINE( 997)							uvt = ( ( ::openfl::_Vector::FloatVector)(normalizedUVT->__Field(HX_("uvt",f3,2e,59,00),hx::paccDynamic)) );
HXLINE( 999)							if ((maxUVT > (int)1)) {
HXLINE(1000)								width1 = ::Std_obj::_hx_int(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width);
HXLINE(1001)								height1 = ::Std_obj::_hx_int(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height);
            							}
            							else {
HXLINE(1006)								width1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->width;
HXLINE(1007)								height1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->height;
            							}
            						}
HXLINE(1013)						int i2 = (int)0;
HXLINE(1014)						int l = ind->get_length();
HXLINE(1016)						int a_;
HXDLIN(1016)						int b_;
HXDLIN(1016)						int c_;
HXLINE(1017)						int iax;
HXDLIN(1017)						int iay;
HXDLIN(1017)						int ibx;
HXDLIN(1017)						int iby;
HXDLIN(1017)						int icx;
HXDLIN(1017)						int icy;
HXLINE(1018)						Float x11;
HXDLIN(1018)						Float y1;
HXDLIN(1018)						Float x21;
HXDLIN(1018)						Float y2;
HXDLIN(1018)						Float x3;
HXDLIN(1018)						Float y3;
HXLINE(1019)						Float uvx1;
HXDLIN(1019)						Float uvy1;
HXDLIN(1019)						Float uvx2;
HXDLIN(1019)						Float uvy2;
HXDLIN(1019)						Float uvx3;
HXDLIN(1019)						Float uvy3;
HXLINE(1020)						Float denom;
HXLINE(1021)						Float t1;
HXDLIN(1021)						Float t2;
HXDLIN(1021)						Float t3;
HXDLIN(1021)						Float t4;
HXLINE(1022)						Float dx;
HXDLIN(1022)						Float dy;
HXLINE(1024)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_antialias((int)1);
HXLINE(1026)						while((i2 < l)){
HXLINE(1028)							a_ = i2;
HXLINE(1029)							b_ = (i2 + (int)1);
HXLINE(1030)							c_ = (i2 + (int)2);
HXLINE(1032)							iax = (ind->get(a_) * (int)2);
HXLINE(1033)							iay = ((ind->get(a_) * (int)2) + (int)1);
HXLINE(1034)							ibx = (ind->get(b_) * (int)2);
HXLINE(1035)							iby = ((ind->get(b_) * (int)2) + (int)1);
HXLINE(1036)							icx = (ind->get(c_) * (int)2);
HXLINE(1037)							icy = ((ind->get(c_) * (int)2) + (int)1);
HXLINE(1039)							x11 = (v->get(iax) - offsetX);
HXLINE(1040)							y1 = (v->get(iay) - offsetY);
HXLINE(1041)							x21 = (v->get(ibx) - offsetX);
HXLINE(1042)							y2 = (v->get(iby) - offsetY);
HXLINE(1043)							x3 = (v->get(icx) - offsetX);
HXLINE(1044)							y3 = (v->get(icy) - offsetY);
HXLINE(1046)							{
HXLINE(1046)								::cpp::VirtualArray c52 = c48->buffer->o;
HXDLIN(1046)								 ::Dynamic _g23 = c52->__get((c48->oPos + (int)3));
HXDLIN(1046)								 ::Dynamic _hx_switch_0 = _g23;
            								if (  (_hx_switch_0==(int)0) ){
HXLINE(1059)									if (((((x21 - x11) * (y3 - y1)) - ((y2 - y1) * (x3 - x11))) < (int)0)) {
HXLINE(1061)										i2 = (i2 + (int)3);
HXLINE(1062)										continue;
            									}
HXLINE(1059)									goto _hx_goto_18;
            								}
            								if (  (_hx_switch_0==(int)2) ){
HXLINE(1050)									if (!(((((x21 - x11) * (y3 - y1)) - ((y2 - y1) * (x3 - x11))) < (int)0))) {
HXLINE(1052)										i2 = (i2 + (int)3);
HXLINE(1053)										continue;
            									}
HXLINE(1050)									goto _hx_goto_18;
            								}
            								/* default */{
            								}
            								_hx_goto_18:;
            							}
HXLINE(1070)							if (colorFill) {
HXLINE(1072)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE(1073)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x11,y1);
HXLINE(1074)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x21,y2);
HXLINE(1075)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE(1076)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE(1077)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE(1078)								if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1078)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            								}
HXLINE(1079)								i2 = (i2 + (int)3);
HXLINE(1080)								continue;
            							}
HXLINE(1084)							 ::lime::graphics::cairo::Cairo _hx_tmp47 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1084)							_hx_tmp47->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE(1088)							uvx1 = (uvt->get(iax) * width1);
HXLINE(1089)							uvx2 = (uvt->get(ibx) * width1);
HXLINE(1090)							uvx3 = (uvt->get(icx) * width1);
HXLINE(1091)							uvy1 = (uvt->get(iay) * height1);
HXLINE(1092)							uvy2 = (uvt->get(iby) * height1);
HXLINE(1093)							uvy3 = (uvt->get(icy) * height1);
HXLINE(1095)							denom = ((((uvx1 * (uvy3 - uvy2)) - (uvx2 * uvy3)) + (uvx3 * uvy2)) + ((uvx2 - uvx3) * uvy1));
HXLINE(1097)							if ((denom == (int)0)) {
HXLINE(1099)								i2 = (i2 + (int)3);
HXLINE(1100)								continue;
            							}
HXLINE(1104)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE(1105)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x11,y1);
HXLINE(1106)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x21,y2);
HXLINE(1107)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE(1108)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE(1111)							x11 = (x11 * currentMatrix->a);
HXLINE(1112)							x21 = (x21 * currentMatrix->a);
HXLINE(1113)							x3 = (x3 * currentMatrix->a);
HXLINE(1114)							y1 = (y1 * currentMatrix->d);
HXLINE(1115)							y2 = (y2 * currentMatrix->d);
HXLINE(1116)							y3 = (y3 * currentMatrix->d);
HXLINE(1118)							t1 = ((Float)-(((((uvy1 * (x3 - x21)) - (uvy2 * x3)) + (uvy3 * x21)) + ((uvy2 - uvy3) * x11))) / (Float)denom);
HXLINE(1119)							t2 = ((Float)((((uvy2 * y3) + (uvy1 * (y2 - y3))) - (uvy3 * y2)) + ((uvy3 - uvy2) * y1)) / (Float)denom);
HXLINE(1120)							t3 = ((Float)((((uvx1 * (x3 - x21)) - (uvx2 * x3)) + (uvx3 * x21)) + ((uvx2 - uvx3) * x11)) / (Float)denom);
HXLINE(1121)							t4 = ((Float)-(((((uvx2 * y3) + (uvx1 * (y2 - y3))) - (uvx3 * y2)) + ((uvx3 - uvx2) * y1))) / (Float)denom);
HXLINE(1122)							dx = ((Float)(((uvx1 * ((uvy3 * x21) - (uvy2 * x3))) + (uvy1 * ((uvx2 * x3) - (uvx3 * x21)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * x11)) / (Float)denom);
HXLINE(1123)							dy = ((Float)(((uvx1 * ((uvy3 * y2) - (uvy2 * y3))) + (uvy1 * ((uvx2 * y3) - (uvx3 * y2)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * y1)) / (Float)denom);
HXLINE(1125)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3->setTo(t1,t2,t3,t4,dx,dy);
HXLINE(1126)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3);
HXLINE(1127)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE(1128)							if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1128)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fill();
            							}
HXLINE(1130)							i2 = (i2 + (int)3);
            						}
HXLINE(1134)						 ::lime::graphics::cairo::Cairo _hx_tmp48 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1134)						_hx_tmp48->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
            					}
            					break;
            					case (int)14: {
HXLINE( 747)						{
HXLINE( 747)							 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 747)							switch((int)(_hx_getEnumValueIndex(_g14))){
            								case (int)0: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 747)									data373->oPos = (data373->oPos + (int)2);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 747)									data374->bPos = (data374->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 747)									data375->iPos = (data375->iPos + (int)1);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 747)									data376->fPos = (data376->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 747)									data377->oPos = (data377->oPos + (int)4);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 747)									data378->iiPos = (data378->iiPos + (int)2);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 747)									data379->ffPos = (data379->ffPos + (int)1);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 747)									data380->fPos = (data380->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 747)									data381->oPos = (data381->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 747)									data382->fPos = (data382->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 747)									data383->fPos = (data383->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 747)									data384->fPos = (data384->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 747)									data385->fPos = (data385->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 747)									data386->oPos = (data386->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 747)									data387->fPos = (data387->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 747)									data388->fPos = (data388->fPos + (int)5);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 747)									data389->oPos = (data389->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 747)									data390->oPos = (data390->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 747)									data391->oPos = (data391->oPos + (int)2);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 747)									data392->bPos = (data392->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 747)									data393->oPos = (data393->oPos + (int)4);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 747)									data394->iiPos = (data394->iiPos + (int)2);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 747)									data395->ffPos = (data395->ffPos + (int)1);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 747)									data396->fPos = (data396->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 747)									data397->oPos = (data397->oPos + (int)4);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 747)									data398->iPos = (data398->iPos + (int)1);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 747)									data399->fPos = (data399->fPos + (int)2);
HXDLIN( 747)									 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 747)									data400->bPos = (data400->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 747)									data401->fPos = (data401->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 747)									data402->fPos = (data402->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 747)									 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 747)									data403->oPos = (data403->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 747)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 747)						 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 747)						 ::openfl::_internal::renderer::DrawCommandReader c53 = this13;
HXLINE( 748)						bool _hx_tmp49;
HXDLIN( 748)						if (stroke) {
HXLINE( 748)							_hx_tmp49 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 748)							_hx_tmp49 = false;
            						}
HXDLIN( 748)						if (_hx_tmp49) {
HXLINE( 750)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(null());
            						}
HXLINE( 754)						 ::lime::graphics::cairo::Cairo _hx_tmp50 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 754)						_hx_tmp50->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 755)						::cpp::VirtualArray c54 = c53->buffer->o;
HXDLIN( 755)						::Array< bool > c55 = c53->buffer->b;
HXDLIN( 755)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(( ( ::openfl::display::BitmapData)(c53->buffer->o->__get(c53->oPos)) ),( ( ::openfl::geom::Matrix)(c54->__get((c53->oPos + (int)1))) ),c53->buffer->b->__get(c53->bPos),c55->__get((c53->bPos + (int)1)));
HXLINE( 757)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)15: {
HXLINE( 733)						{
HXLINE( 733)							 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 733)							switch((int)(_hx_getEnumValueIndex(_g15))){
            								case (int)0: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 733)									data404->oPos = (data404->oPos + (int)2);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 733)									data405->bPos = (data405->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 733)									data406->iPos = (data406->iPos + (int)1);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 733)									data407->fPos = (data407->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 733)									data408->oPos = (data408->oPos + (int)4);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 733)									data409->iiPos = (data409->iiPos + (int)2);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 733)									data410->ffPos = (data410->ffPos + (int)1);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 733)									data411->fPos = (data411->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 733)									data412->oPos = (data412->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 733)									data413->fPos = (data413->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 733)									data414->fPos = (data414->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 733)									data415->fPos = (data415->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 733)									data416->fPos = (data416->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 733)									data417->oPos = (data417->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 733)									data418->fPos = (data418->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 733)									data419->fPos = (data419->fPos + (int)5);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 733)									data420->oPos = (data420->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 733)									data421->oPos = (data421->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 733)									data422->oPos = (data422->oPos + (int)2);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 733)									data423->bPos = (data423->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 733)									data424->oPos = (data424->oPos + (int)4);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 733)									data425->iiPos = (data425->iiPos + (int)2);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 733)									data426->ffPos = (data426->ffPos + (int)1);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 733)									data427->fPos = (data427->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 733)									data428->oPos = (data428->oPos + (int)4);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 733)									data429->iPos = (data429->iPos + (int)1);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 733)									data430->fPos = (data430->fPos + (int)2);
HXDLIN( 733)									 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 733)									data431->bPos = (data431->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 733)									data432->fPos = (data432->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 733)									data433->fPos = (data433->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 733)									 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 733)									data434->oPos = (data434->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 733)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 733)						 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 733)						 ::openfl::_internal::renderer::DrawCommandReader c56 = this14;
HXLINE( 734)						bool _hx_tmp51;
HXDLIN( 734)						if (stroke) {
HXLINE( 734)							_hx_tmp51 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 734)							_hx_tmp51 = false;
            						}
HXDLIN( 734)						if (_hx_tmp51) {
HXLINE( 736)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(null());
            						}
HXLINE( 740)						 ::lime::graphics::cairo::Cairo _hx_tmp52 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 740)						_hx_tmp52->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 741)						::Array< ::Dynamic> c57 = c56->buffer->ii;
HXDLIN( 741)						::cpp::VirtualArray c58 = c56->buffer->o;
HXDLIN( 741)						::cpp::VirtualArray c59 = c56->buffer->o;
HXDLIN( 741)						::cpp::VirtualArray c60 = c56->buffer->o;
HXDLIN( 741)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createGradientPattern(c56->buffer->o->__get(c56->oPos),c56->buffer->ii->__get(c56->iiPos).StaticCast< ::Array< int > >(),c56->buffer->ff->__get(c56->ffPos).StaticCast< ::Array< Float > >(),c57->__get((c56->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c58->__get((c56->oPos + (int)1))) ),c59->__get((c56->oPos + (int)2)),c60->__get((c56->oPos + (int)3)),c56->buffer->f->__get(c56->fPos));
HXLINE( 743)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)16: {
HXLINE( 662)						{
HXLINE( 662)							 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 662)							switch((int)(_hx_getEnumValueIndex(_g16))){
            								case (int)0: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 662)									data435->oPos = (data435->oPos + (int)2);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 662)									data436->bPos = (data436->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 662)									data437->iPos = (data437->iPos + (int)1);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 662)									data438->fPos = (data438->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 662)									data439->oPos = (data439->oPos + (int)4);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 662)									data440->iiPos = (data440->iiPos + (int)2);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 662)									data441->ffPos = (data441->ffPos + (int)1);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 662)									data442->fPos = (data442->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 662)									data443->oPos = (data443->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 662)									data444->fPos = (data444->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 662)									data445->fPos = (data445->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 662)									data446->fPos = (data446->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 662)									data447->fPos = (data447->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 662)									data448->oPos = (data448->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 662)									data449->fPos = (data449->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 662)									data450->fPos = (data450->fPos + (int)5);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 662)									data451->oPos = (data451->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 662)									data452->oPos = (data452->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 662)									data453->oPos = (data453->oPos + (int)2);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 662)									data454->bPos = (data454->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 662)									data455->oPos = (data455->oPos + (int)4);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 662)									data456->iiPos = (data456->iiPos + (int)2);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 662)									data457->ffPos = (data457->ffPos + (int)1);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 662)									data458->fPos = (data458->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 662)									data459->oPos = (data459->oPos + (int)4);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 662)									data460->iPos = (data460->iPos + (int)1);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 662)									data461->fPos = (data461->fPos + (int)2);
HXDLIN( 662)									 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 662)									data462->bPos = (data462->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 662)									data463->fPos = (data463->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 662)									data464->fPos = (data464->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 662)									 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN( 662)									data465->oPos = (data465->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 662)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 662)						 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 662)						 ::openfl::_internal::renderer::DrawCommandReader c61 = this15;
HXLINE( 663)						bool _hx_tmp53;
HXDLIN( 663)						if (stroke) {
HXLINE( 663)							_hx_tmp53 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 663)							_hx_tmp53 = false;
            						}
HXDLIN( 663)						if (_hx_tmp53) {
HXLINE( 665)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(true);
            						}
HXLINE( 669)						 ::lime::graphics::cairo::Cairo _hx_tmp54 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 669)						_hx_tmp54->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 671)						if (hx::IsNull( c61->buffer->o->__get(c61->oPos) )) {
HXLINE( 673)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
            						}
            						else {
HXLINE( 677)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
HXLINE( 679)							Float _hx_tmp55;
HXDLIN( 679)							if (hx::IsGreater( c61->buffer->o->__get(c61->oPos),(int)0 )) {
HXLINE( 679)								_hx_tmp55 = ( (Float)(c61->buffer->o->__get(c61->oPos)) );
            							}
            							else {
HXLINE( 679)								_hx_tmp55 = (int)1;
            							}
HXDLIN( 679)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineWidth(_hx_tmp55);
HXLINE( 681)							::cpp::VirtualArray c62 = c61->buffer->o;
HXDLIN( 681)							if (hx::IsNull( c62->__get((c61->oPos + (int)3)) )) {
HXLINE( 683)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineJoin((int)1);
            							}
            							else {
HXLINE( 687)								::cpp::VirtualArray c63 = c61->buffer->o;
HXDLIN( 687)								 ::Dynamic _g24 = c63->__get((c61->oPos + (int)3));
HXDLIN( 687)								int _hx_tmp56;
HXDLIN( 687)								 ::Dynamic _hx_switch_1 = _g24;
            								if (  (_hx_switch_1==(int)0) ){
HXLINE( 687)									_hx_tmp56 = (int)2;
HXDLIN( 687)									goto _hx_goto_19;
            								}
            								if (  (_hx_switch_1==(int)1) ){
HXLINE( 687)									_hx_tmp56 = (int)0;
HXDLIN( 687)									goto _hx_goto_19;
            								}
            								/* default */{
HXLINE( 687)									_hx_tmp56 = (int)1;
            								}
            								_hx_goto_19:;
HXDLIN( 687)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineJoin(_hx_tmp56);
            							}
HXLINE( 697)							::cpp::VirtualArray c64 = c61->buffer->o;
HXDLIN( 697)							if (hx::IsNull( c64->__get((c61->oPos + (int)2)) )) {
HXLINE( 699)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineCap((int)1);
            							}
            							else {
HXLINE( 703)								::cpp::VirtualArray c65 = c61->buffer->o;
HXDLIN( 703)								 ::Dynamic _g25 = c65->__get((c61->oPos + (int)2));
HXDLIN( 703)								int _hx_tmp57;
HXDLIN( 703)								 ::Dynamic _hx_switch_2 = _g25;
            								if (  (_hx_switch_2==(int)0) ){
HXLINE( 703)									_hx_tmp57 = (int)0;
HXDLIN( 703)									goto _hx_goto_20;
            								}
            								if (  (_hx_switch_2==(int)2) ){
HXLINE( 703)									_hx_tmp57 = (int)2;
HXDLIN( 703)									goto _hx_goto_20;
            								}
            								/* default */{
HXLINE( 703)									_hx_tmp57 = (int)1;
            								}
            								_hx_goto_20:;
HXDLIN( 703)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineCap(_hx_tmp57);
            							}
HXLINE( 713)							::Array< Float > c66 = c61->buffer->f;
HXDLIN( 713)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_miterLimit(c66->__get((c61->fPos + (int)1)));
HXLINE( 715)							r = ((Float)hx::UShr(((int)c61->buffer->i->__get(c61->iPos) & (int)(int)16711680),(int)16) / (Float)(int)255);
HXLINE( 716)							g = ((Float)hx::UShr(((int)c61->buffer->i->__get(c61->iPos) & (int)(int)65280),(int)8) / (Float)(int)255);
HXLINE( 717)							b = ((Float)((int)c61->buffer->i->__get(c61->iPos) & (int)(int)255) / (Float)(int)255);
HXLINE( 719)							if ((c61->buffer->f->__get(c61->fPos) == (int)1)) {
HXLINE( 721)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGB(r,g,b);
            							}
            							else {
HXLINE( 725)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA(r,g,b,c61->buffer->f->__get(c61->fPos));
            							}
            						}
            					}
            					break;
            					case (int)17: {
HXLINE( 629)						{
HXLINE( 629)							 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 629)							switch((int)(_hx_getEnumValueIndex(_g17))){
            								case (int)0: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN( 629)									data466->oPos = (data466->oPos + (int)2);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN( 629)									data467->bPos = (data467->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN( 629)									data468->iPos = (data468->iPos + (int)1);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN( 629)									data469->fPos = (data469->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN( 629)									data470->oPos = (data470->oPos + (int)4);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN( 629)									data471->iiPos = (data471->iiPos + (int)2);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN( 629)									data472->ffPos = (data472->ffPos + (int)1);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN( 629)									data473->fPos = (data473->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN( 629)									data474->oPos = (data474->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN( 629)									data475->fPos = (data475->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN( 629)									data476->fPos = (data476->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN( 629)									data477->fPos = (data477->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN( 629)									data478->fPos = (data478->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN( 629)									data479->oPos = (data479->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN( 629)									data480->fPos = (data480->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN( 629)									data481->fPos = (data481->fPos + (int)5);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN( 629)									data482->oPos = (data482->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN( 629)									data483->oPos = (data483->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN( 629)									data484->oPos = (data484->oPos + (int)2);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN( 629)									data485->bPos = (data485->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN( 629)									data486->oPos = (data486->oPos + (int)4);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN( 629)									data487->iiPos = (data487->iiPos + (int)2);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN( 629)									data488->ffPos = (data488->ffPos + (int)1);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN( 629)									data489->fPos = (data489->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN( 629)									data490->oPos = (data490->oPos + (int)4);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN( 629)									data491->iPos = (data491->iPos + (int)1);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN( 629)									data492->fPos = (data492->fPos + (int)2);
HXDLIN( 629)									 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN( 629)									data493->bPos = (data493->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN( 629)									data494->fPos = (data494->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN( 629)									data495->fPos = (data495->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 629)									 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN( 629)									data496->oPos = (data496->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 629)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 629)						 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN( 629)						 ::openfl::_internal::renderer::DrawCommandReader c67 = this16;
HXLINE( 630)						hasPath = true;
HXLINE( 631)						 ::lime::graphics::cairo::Cairo _hx_tmp58 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 631)						Float _hx_tmp59 = (c67->buffer->f->__get(c67->fPos) - offsetX);
HXDLIN( 631)						::Array< Float > c68 = c67->buffer->f;
HXDLIN( 631)						_hx_tmp58->lineTo(_hx_tmp59,(c68->__get((c67->fPos + (int)1)) - offsetY));
HXLINE( 633)						positionX = c67->buffer->f->__get(c67->fPos);
HXLINE( 634)						::Array< Float > c69 = c67->buffer->f;
HXDLIN( 634)						positionY = c69->__get((c67->fPos + (int)1));
HXLINE( 636)						bool _hx_tmp60;
HXDLIN( 636)						if ((positionX == startX)) {
HXLINE( 636)							_hx_tmp60 = (positionY == startY);
            						}
            						else {
HXLINE( 636)							_hx_tmp60 = false;
            						}
HXDLIN( 636)						if (_hx_tmp60) {
HXLINE( 638)							closeGap = true;
            						}
            					}
            					break;
            					case (int)18: {
HXLINE( 644)						{
HXLINE( 644)							 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN( 644)							switch((int)(_hx_getEnumValueIndex(_g18))){
            								case (int)0: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN( 644)									data497->oPos = (data497->oPos + (int)2);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN( 644)									data498->bPos = (data498->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN( 644)									data499->iPos = (data499->iPos + (int)1);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN( 644)									data500->fPos = (data500->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN( 644)									data501->oPos = (data501->oPos + (int)4);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN( 644)									data502->iiPos = (data502->iiPos + (int)2);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN( 644)									data503->ffPos = (data503->ffPos + (int)1);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN( 644)									data504->fPos = (data504->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN( 644)									data505->oPos = (data505->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN( 644)									data506->fPos = (data506->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN( 644)									data507->fPos = (data507->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN( 644)									data508->fPos = (data508->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN( 644)									data509->fPos = (data509->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN( 644)									data510->oPos = (data510->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN( 644)									data511->fPos = (data511->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN( 644)									data512->fPos = (data512->fPos + (int)5);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN( 644)									data513->oPos = (data513->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN( 644)									data514->oPos = (data514->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN( 644)									data515->oPos = (data515->oPos + (int)2);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN( 644)									data516->bPos = (data516->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN( 644)									data517->oPos = (data517->oPos + (int)4);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN( 644)									data518->iiPos = (data518->iiPos + (int)2);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN( 644)									data519->ffPos = (data519->ffPos + (int)1);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN( 644)									data520->fPos = (data520->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN( 644)									data521->oPos = (data521->oPos + (int)4);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN( 644)									data522->iPos = (data522->iPos + (int)1);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN( 644)									data523->fPos = (data523->fPos + (int)2);
HXDLIN( 644)									 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN( 644)									data524->bPos = (data524->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN( 644)									data525->fPos = (data525->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN( 644)									data526->fPos = (data526->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 644)									 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN( 644)									data527->oPos = (data527->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 644)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 644)						 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
HXDLIN( 644)						 ::openfl::_internal::renderer::DrawCommandReader c70 = this17;
HXLINE( 645)						 ::lime::graphics::cairo::Cairo _hx_tmp61 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 645)						Float _hx_tmp62 = (c70->buffer->f->__get(c70->fPos) - offsetX);
HXDLIN( 645)						::Array< Float > c71 = c70->buffer->f;
HXDLIN( 645)						_hx_tmp61->moveTo(_hx_tmp62,(c71->__get((c70->fPos + (int)1)) - offsetY));
HXLINE( 647)						positionX = c70->buffer->f->__get(c70->fPos);
HXLINE( 648)						::Array< Float > c72 = c70->buffer->f;
HXDLIN( 648)						positionY = c72->__get((c70->fPos + (int)1));
HXLINE( 650)						if (setStart) {
HXLINE( 652)							closeGap = true;
            						}
HXLINE( 656)						startX = c70->buffer->f->__get(c70->fPos);
HXLINE( 657)						::Array< Float > c73 = c70->buffer->f;
HXDLIN( 657)						startY = c73->__get((c70->fPos + (int)1));
HXLINE( 658)						setStart = true;
            					}
            					break;
            					case (int)20: {
HXLINE(1138)						{
HXLINE(1138)							{
HXLINE(1138)								 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN(1138)								switch((int)(_hx_getEnumValueIndex(_g19))){
            									case (int)0: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN(1138)										data528->oPos = (data528->oPos + (int)2);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN(1138)										data529->bPos = (data529->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN(1138)										data530->iPos = (data530->iPos + (int)1);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN(1138)										data531->fPos = (data531->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN(1138)										data532->oPos = (data532->oPos + (int)4);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN(1138)										data533->iiPos = (data533->iiPos + (int)2);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN(1138)										data534->ffPos = (data534->ffPos + (int)1);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN(1138)										data535->fPos = (data535->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN(1138)										data536->oPos = (data536->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN(1138)										data537->fPos = (data537->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN(1138)										data538->fPos = (data538->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN(1138)										data539->fPos = (data539->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN(1138)										data540->fPos = (data540->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN(1138)										data541->oPos = (data541->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN(1138)										data542->fPos = (data542->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN(1138)										data543->fPos = (data543->fPos + (int)5);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN(1138)										data544->oPos = (data544->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN(1138)										data545->oPos = (data545->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN(1138)										data546->oPos = (data546->oPos + (int)2);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN(1138)										data547->bPos = (data547->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN(1138)										data548->oPos = (data548->oPos + (int)4);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN(1138)										data549->iiPos = (data549->iiPos + (int)2);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN(1138)										data550->ffPos = (data550->ffPos + (int)1);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN(1138)										data551->fPos = (data551->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data552 = data;
HXDLIN(1138)										data552->oPos = (data552->oPos + (int)4);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data553 = data;
HXDLIN(1138)										data553->iPos = (data553->iPos + (int)1);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data554 = data;
HXDLIN(1138)										data554->fPos = (data554->fPos + (int)2);
HXDLIN(1138)										 ::openfl::_internal::renderer::DrawCommandReader data555 = data;
HXDLIN(1138)										data555->bPos = (data555->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data556 = data;
HXDLIN(1138)										data556->fPos = (data556->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data557 = data;
HXDLIN(1138)										data557->fPos = (data557->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1138)										 ::openfl::_internal::renderer::DrawCommandReader data558 = data;
HXDLIN(1138)										data558->oPos = (data558->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1138)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN(1138)							 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
            						}
HXLINE(1139)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
            					}
            					break;
            					case (int)21: {
HXLINE(1143)						{
HXLINE(1143)							{
HXLINE(1143)								 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN(1143)								switch((int)(_hx_getEnumValueIndex(_g20))){
            									case (int)0: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data559 = data;
HXDLIN(1143)										data559->oPos = (data559->oPos + (int)2);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data560 = data;
HXDLIN(1143)										data560->bPos = (data560->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data561 = data;
HXDLIN(1143)										data561->iPos = (data561->iPos + (int)1);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data562 = data;
HXDLIN(1143)										data562->fPos = (data562->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data563 = data;
HXDLIN(1143)										data563->oPos = (data563->oPos + (int)4);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data564 = data;
HXDLIN(1143)										data564->iiPos = (data564->iiPos + (int)2);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data565 = data;
HXDLIN(1143)										data565->ffPos = (data565->ffPos + (int)1);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data566 = data;
HXDLIN(1143)										data566->fPos = (data566->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data567 = data;
HXDLIN(1143)										data567->oPos = (data567->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data568 = data;
HXDLIN(1143)										data568->fPos = (data568->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data569 = data;
HXDLIN(1143)										data569->fPos = (data569->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data570 = data;
HXDLIN(1143)										data570->fPos = (data570->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data571 = data;
HXDLIN(1143)										data571->fPos = (data571->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data572 = data;
HXDLIN(1143)										data572->oPos = (data572->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data573 = data;
HXDLIN(1143)										data573->fPos = (data573->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data574 = data;
HXDLIN(1143)										data574->fPos = (data574->fPos + (int)5);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data575 = data;
HXDLIN(1143)										data575->oPos = (data575->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data576 = data;
HXDLIN(1143)										data576->oPos = (data576->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data577 = data;
HXDLIN(1143)										data577->oPos = (data577->oPos + (int)2);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data578 = data;
HXDLIN(1143)										data578->bPos = (data578->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data579 = data;
HXDLIN(1143)										data579->oPos = (data579->oPos + (int)4);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data580 = data;
HXDLIN(1143)										data580->iiPos = (data580->iiPos + (int)2);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data581 = data;
HXDLIN(1143)										data581->ffPos = (data581->ffPos + (int)1);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data582 = data;
HXDLIN(1143)										data582->fPos = (data582->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data583 = data;
HXDLIN(1143)										data583->oPos = (data583->oPos + (int)4);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data584 = data;
HXDLIN(1143)										data584->iPos = (data584->iPos + (int)1);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data585 = data;
HXDLIN(1143)										data585->fPos = (data585->fPos + (int)2);
HXDLIN(1143)										 ::openfl::_internal::renderer::DrawCommandReader data586 = data;
HXDLIN(1143)										data586->bPos = (data586->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data587 = data;
HXDLIN(1143)										data587->fPos = (data587->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data588 = data;
HXDLIN(1143)										data588->fPos = (data588->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1143)										 ::openfl::_internal::renderer::DrawCommandReader data589 = data;
HXDLIN(1143)										data589->oPos = (data589->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1143)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN(1143)							 ::openfl::_internal::renderer::DrawCommandReader this19 = data;
            						}
HXLINE(1144)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)0);
            					}
            					break;
            					default:{
HXLINE(1148)						{
HXLINE(1148)							 ::openfl::_internal::renderer::DrawCommandType _g26 = data->prev;
HXDLIN(1148)							switch((int)(_hx_getEnumValueIndex(_g26))){
            								case (int)0: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data590 = data;
HXDLIN(1148)									data590->oPos = (data590->oPos + (int)2);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data591 = data;
HXDLIN(1148)									data591->bPos = (data591->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data592 = data;
HXDLIN(1148)									data592->iPos = (data592->iPos + (int)1);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data593 = data;
HXDLIN(1148)									data593->fPos = (data593->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data594 = data;
HXDLIN(1148)									data594->oPos = (data594->oPos + (int)4);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data595 = data;
HXDLIN(1148)									data595->iiPos = (data595->iiPos + (int)2);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data596 = data;
HXDLIN(1148)									data596->ffPos = (data596->ffPos + (int)1);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data597 = data;
HXDLIN(1148)									data597->fPos = (data597->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data598 = data;
HXDLIN(1148)									data598->oPos = (data598->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data599 = data;
HXDLIN(1148)									data599->fPos = (data599->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data600 = data;
HXDLIN(1148)									data600->fPos = (data600->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data601 = data;
HXDLIN(1148)									data601->fPos = (data601->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data602 = data;
HXDLIN(1148)									data602->fPos = (data602->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data603 = data;
HXDLIN(1148)									data603->oPos = (data603->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data604 = data;
HXDLIN(1148)									data604->fPos = (data604->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data605 = data;
HXDLIN(1148)									data605->fPos = (data605->fPos + (int)5);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data606 = data;
HXDLIN(1148)									data606->oPos = (data606->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data607 = data;
HXDLIN(1148)									data607->oPos = (data607->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data608 = data;
HXDLIN(1148)									data608->oPos = (data608->oPos + (int)2);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data609 = data;
HXDLIN(1148)									data609->bPos = (data609->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data610 = data;
HXDLIN(1148)									data610->oPos = (data610->oPos + (int)4);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data611 = data;
HXDLIN(1148)									data611->iiPos = (data611->iiPos + (int)2);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data612 = data;
HXDLIN(1148)									data612->ffPos = (data612->ffPos + (int)1);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data613 = data;
HXDLIN(1148)									data613->fPos = (data613->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data614 = data;
HXDLIN(1148)									data614->oPos = (data614->oPos + (int)4);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data615 = data;
HXDLIN(1148)									data615->iPos = (data615->iPos + (int)1);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data616 = data;
HXDLIN(1148)									data616->fPos = (data616->fPos + (int)2);
HXDLIN(1148)									 ::openfl::_internal::renderer::DrawCommandReader data617 = data;
HXDLIN(1148)									data617->bPos = (data617->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data618 = data;
HXDLIN(1148)									data618->fPos = (data618->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data619 = data;
HXDLIN(1148)									data619->fPos = (data619->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(1148)									 ::openfl::_internal::renderer::DrawCommandReader data620 = data;
HXDLIN(1148)									data620->oPos = (data620->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(1148)						data->prev = type;
            					}
            				}
            			}
            			_hx_goto_14:;
            		}
HXLINE(1154)		data->destroy();
HXLINE(1156)		if (hasPath) {
HXLINE(1158)			bool _hx_tmp63;
HXDLIN(1158)			if (stroke) {
HXLINE(1158)				_hx_tmp63 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            			}
            			else {
HXLINE(1158)				_hx_tmp63 = false;
            			}
HXDLIN(1158)			if (_hx_tmp63) {
HXLINE(1160)				bool _hx_tmp64;
HXDLIN(1160)				if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE(1160)					_hx_tmp64 = closeGap;
            				}
            				else {
HXLINE(1160)					_hx_tmp64 = false;
            				}
HXDLIN(1160)				if (_hx_tmp64) {
HXLINE(1162)					 ::lime::graphics::cairo::Cairo _hx_tmp65 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1162)					_hx_tmp65->lineTo((startX - offsetX),(startY - offsetY));
HXLINE(1163)					::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(false);
            				}
            				else {
HXLINE(1165)					bool _hx_tmp66;
HXDLIN(1165)					bool _hx_tmp67;
HXDLIN(1165)					if (closeGap) {
HXLINE(1165)						_hx_tmp67 = (positionX == startX);
            					}
            					else {
HXLINE(1165)						_hx_tmp67 = false;
            					}
HXDLIN(1165)					if (_hx_tmp67) {
HXLINE(1165)						_hx_tmp66 = (positionY == startY);
            					}
            					else {
HXLINE(1165)						_hx_tmp66 = false;
            					}
HXDLIN(1165)					if (_hx_tmp66) {
HXLINE(1167)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(false);
            					}
            				}
HXLINE(1171)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern);
HXLINE(1172)				if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1172)					::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->strokePreserve();
            				}
            			}
HXLINE(1176)			bool _hx_tmp68;
HXDLIN(1176)			if (!(stroke)) {
HXLINE(1176)				_hx_tmp68 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill;
            			}
            			else {
HXLINE(1176)				_hx_tmp68 = false;
            			}
HXDLIN(1176)			if (_hx_tmp68) {
HXLINE(1178)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->translate(-(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x),-(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y));
HXLINE(1180)				if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix )) {
HXLINE(1182)					 ::openfl::geom::Matrix matrix = ::openfl::geom::Matrix_obj::_hx___pool->get();
HXLINE(1183)					matrix->copyFrom(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix);
HXLINE(1184)					matrix->invert();
HXLINE(1186)					if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix )) {
HXLINE(1188)						matrix->concat(::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix);
            					}
HXLINE(1192)					 ::Dynamic _hx_tmp69 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern;
HXDLIN(1192)					::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(_hx_tmp69,matrix->_hx___toMatrix3());
HXLINE(1194)					::openfl::geom::Matrix_obj::_hx___pool->release(matrix);
            				}
HXLINE(1198)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE(1200)				if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix )) {
HXLINE(1202)					 ::lime::graphics::cairo::Cairo _hx_tmp70 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1202)					_hx_tmp70->transform(::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix->_hx___toMatrix3());
HXLINE(1203)					if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1203)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            					}
HXLINE(1204)					 ::lime::graphics::cairo::Cairo _hx_tmp71 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1204)					_hx_tmp71->transform(::openfl::_internal::renderer::cairo::CairoGraphics_obj::inversePendingMatrix->_hx___toMatrix3());
            				}
            				else {
HXLINE(1208)					if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1208)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            					}
            				}
HXLINE(1212)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->translate(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x,::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y);
HXLINE(1213)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,playCommands,(void))

void CairoGraphics_obj::quadraticCurveTo(Float cx,Float cy,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1221_quadraticCurveTo)
HXLINE(1223)		 ::lime::math::Vector2 current = null();
HXLINE(1225)		if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->get_hasCurrentPoint())) {
HXLINE(1227)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(cx,cy);
HXLINE(1228)			current =  ::lime::math::Vector2_obj::__alloc( HX_CTX ,cx,cy);
            		}
            		else {
HXLINE(1232)			current = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->get_currentPoint();
            		}
HXLINE(1236)		Float current1 = current->x;
HXDLIN(1236)		Float cx1 = (current1 + (((Float)0.66666666666666663) * (cx - current->x)));
HXLINE(1237)		Float current2 = current->y;
HXDLIN(1237)		Float cy1 = (current2 + (((Float)0.66666666666666663) * (cy - current->y)));
HXLINE(1238)		Float cx2 = (x + (((Float)0.66666666666666663) * (cx - x)));
HXLINE(1239)		Float cy2 = (y + (((Float)0.66666666666666663) * (cy - y)));
HXLINE(1241)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->curveTo(cx1,cy1,cx2,cy2,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,quadraticCurveTo,(void))

void CairoGraphics_obj::render( ::openfl::display::Graphics graphics, ::openfl::display::CairoRenderer renderer){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1248_render)
HXLINE(1252)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics = graphics;
HXLINE(1253)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::allowSmoothing = renderer->_hx___allowSmoothing;
HXLINE(1254)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::worldAlpha = renderer->_hx___getAlpha(graphics->_hx___owner->_hx___worldAlpha);
HXLINE(1256)		graphics->_hx___update(renderer->_hx___worldTransform);
HXLINE(1258)		bool _hx_tmp;
HXDLIN(1258)		if (!(!(graphics->_hx___dirty))) {
HXLINE(1258)			_hx_tmp = graphics->_hx___managed;
            		}
            		else {
HXLINE(1258)			_hx_tmp = true;
            		}
HXDLIN(1258)		if (_hx_tmp) {
HXLINE(1258)			return;
            		}
HXLINE(1260)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE(1262)		int width = graphics->_hx___width;
HXLINE(1263)		int height = graphics->_hx___height;
HXLINE(1265)		bool _hx_tmp1;
HXDLIN(1265)		bool _hx_tmp2;
HXDLIN(1265)		bool _hx_tmp3;
HXDLIN(1265)		bool _hx_tmp4;
HXDLIN(1265)		if (!(!(graphics->_hx___visible))) {
HXLINE(1265)			_hx_tmp4 = (graphics->_hx___commands->get_length() == (int)0);
            		}
            		else {
HXLINE(1265)			_hx_tmp4 = true;
            		}
HXDLIN(1265)		if (!(_hx_tmp4)) {
HXLINE(1265)			_hx_tmp3 = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE(1265)			_hx_tmp3 = true;
            		}
HXDLIN(1265)		if (!(_hx_tmp3)) {
HXLINE(1265)			_hx_tmp2 = (width < (int)1);
            		}
            		else {
HXLINE(1265)			_hx_tmp2 = true;
            		}
HXDLIN(1265)		if (!(_hx_tmp2)) {
HXLINE(1265)			_hx_tmp1 = (height < (int)1);
            		}
            		else {
HXLINE(1265)			_hx_tmp1 = true;
            		}
HXDLIN(1265)		if (_hx_tmp1) {
HXLINE(1267)			graphics->_hx___cairo = null();
HXLINE(1268)			graphics->_hx___bitmap = null();
            		}
            		else {
HXLINE(1272)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting = false;
HXLINE(1273)			bool needsUpscaling = false;
HXLINE(1275)			if (hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1277)				 ::Dynamic surface = graphics->_hx___cairo->get_target();
HXLINE(1279)				bool _hx_tmp5;
HXDLIN(1279)				if ((width <= ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_width(surface))) {
HXLINE(1279)					_hx_tmp5 = (height > ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_height(surface));
            				}
            				else {
HXLINE(1279)					_hx_tmp5 = true;
            				}
HXDLIN(1279)				if (_hx_tmp5) {
HXLINE(1281)					graphics->_hx___cairo = null();
HXLINE(1282)					needsUpscaling = true;
            				}
            			}
HXLINE(1288)			bool _hx_tmp6;
HXDLIN(1288)			if (hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1288)				_hx_tmp6 = hx::IsNull( graphics->_hx___bitmap );
            			}
            			else {
HXLINE(1288)				_hx_tmp6 = true;
            			}
HXDLIN(1288)			if (_hx_tmp6) {
HXLINE(1290)				 ::openfl::display::BitmapData bitmap;
HXDLIN(1290)				if (needsUpscaling) {
HXLINE(1291)					int bitmap1 = ::Std_obj::_hx_int((width * ((Float)1.25)));
HXLINE(1290)					bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,bitmap1,::Std_obj::_hx_int((height * ((Float)1.25))),true,(int)0);
            				}
            				else {
HXLINE(1290)					bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,width,height,true,(int)0);
            				}
HXLINE(1293)				 ::Dynamic surface1 = bitmap->getSurface();
HXLINE(1294)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface1);
HXLINE(1295)				graphics->_hx___bitmap = bitmap;
            			}
HXLINE(1299)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE(1301)			renderer->applyMatrix(graphics->_hx___renderTransform,::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo);
HXLINE(1303)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_operator((int)0);
HXLINE(1304)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->paint();
HXLINE(1305)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_operator((int)2);
HXLINE(1307)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
HXLINE(1308)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
HXLINE(1310)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE(1311)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
HXLINE(1313)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = null();
HXLINE(1314)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = null();
HXLINE(1316)			bool hasLineStyle = false;
HXLINE(1317)			Float initStrokeX = ((Float)0.0);
HXLINE(1318)			Float initStrokeY = ((Float)0.0);
HXLINE(1320)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1322)			{
HXLINE(1322)				int _g = (int)0;
HXDLIN(1322)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1322)				while((_g < _g1->length)){
HXLINE(1322)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(1322)					_g = (_g + (int)1);
HXLINE(1324)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)0: case (int)1: case (int)2: case (int)3: {
HXLINE(1452)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE(1453)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE(1455)							if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE(1457)								{
HXLINE(1457)									 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(1457)									switch((int)(_hx_getEnumValueIndex(_g2))){
            										case (int)0: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(1457)											data1->oPos = (data1->oPos + (int)2);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(1457)											data2->bPos = (data2->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(1457)											data3->iPos = (data3->iPos + (int)1);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(1457)											data4->fPos = (data4->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(1457)											data5->oPos = (data5->oPos + (int)4);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(1457)											data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(1457)											data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(1457)											data8->fPos = (data8->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(1457)											data9->oPos = (data9->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(1457)											data10->fPos = (data10->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(1457)											data11->fPos = (data11->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(1457)											data12->fPos = (data12->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(1457)											data13->fPos = (data13->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(1457)											data14->oPos = (data14->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(1457)											data15->fPos = (data15->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(1457)											data16->fPos = (data16->fPos + (int)5);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(1457)											data17->oPos = (data17->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(1457)											data18->oPos = (data18->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(1457)											data19->oPos = (data19->oPos + (int)2);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(1457)											data20->bPos = (data20->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(1457)											data21->oPos = (data21->oPos + (int)4);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(1457)											data22->iiPos = (data22->iiPos + (int)2);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(1457)											data23->ffPos = (data23->ffPos + (int)1);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(1457)											data24->fPos = (data24->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(1457)											data25->oPos = (data25->oPos + (int)4);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(1457)											data26->iPos = (data26->iPos + (int)1);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(1457)											data27->fPos = (data27->fPos + (int)2);
HXDLIN(1457)											 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(1457)											data28->bPos = (data28->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(1457)											data29->fPos = (data29->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(1457)											data30->fPos = (data30->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1457)											 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(1457)											data31->oPos = (data31->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1457)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN(1457)								 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(1457)								 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE(1458)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp7 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1458)								 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(1458)								::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN(1458)								 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN(1458)								bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN(1458)								::Array< bool > c5 = c->buffer->b;
HXDLIN(1458)								_hx_tmp7->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE(1459)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp8 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1459)								 ::openfl::display::BitmapData c6 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(1459)								::cpp::VirtualArray c7 = c->buffer->o;
HXDLIN(1459)								 ::openfl::geom::Matrix c8 = ( ( ::openfl::geom::Matrix)(c7->__get((c->oPos + (int)1))) );
HXDLIN(1459)								bool c9 = c->buffer->b->__get(c->bPos);
HXDLIN(1459)								::Array< bool > c10 = c->buffer->b;
HXDLIN(1459)								_hx_tmp8->beginBitmapFill(c6,c8,c9,c10->__get((c->bPos + (int)1)));
            							}
            							else {
HXLINE(1461)								if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE(1463)									{
HXLINE(1463)										 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(1463)										switch((int)(_hx_getEnumValueIndex(_g3))){
            											case (int)0: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(1463)												data32->oPos = (data32->oPos + (int)2);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(1463)												data33->bPos = (data33->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(1463)												data34->iPos = (data34->iPos + (int)1);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(1463)												data35->fPos = (data35->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(1463)												data36->oPos = (data36->oPos + (int)4);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(1463)												data37->iiPos = (data37->iiPos + (int)2);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(1463)												data38->ffPos = (data38->ffPos + (int)1);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(1463)												data39->fPos = (data39->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(1463)												data40->oPos = (data40->oPos + (int)1);
            											}
            											break;
            											case (int)4: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(1463)												data41->fPos = (data41->fPos + (int)6);
            											}
            											break;
            											case (int)5: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(1463)												data42->fPos = (data42->fPos + (int)4);
            											}
            											break;
            											case (int)6: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(1463)												data43->fPos = (data43->fPos + (int)3);
            											}
            											break;
            											case (int)7: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(1463)												data44->fPos = (data44->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(1463)												data45->oPos = (data45->oPos + (int)3);
            											}
            											break;
            											case (int)9: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(1463)												data46->fPos = (data46->fPos + (int)4);
            											}
            											break;
            											case (int)10: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(1463)												data47->fPos = (data47->fPos + (int)5);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(1463)												data48->oPos = (data48->oPos + (int)1);
            											}
            											break;
            											case (int)12: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(1463)												data49->oPos = (data49->oPos + (int)4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(1463)												data50->oPos = (data50->oPos + (int)2);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(1463)												data51->bPos = (data51->bPos + (int)2);
            											}
            											break;
            											case (int)15: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(1463)												data52->oPos = (data52->oPos + (int)4);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(1463)												data53->iiPos = (data53->iiPos + (int)2);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(1463)												data54->ffPos = (data54->ffPos + (int)1);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(1463)												data55->fPos = (data55->fPos + (int)1);
            											}
            											break;
            											case (int)16: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(1463)												data56->oPos = (data56->oPos + (int)4);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(1463)												data57->iPos = (data57->iPos + (int)1);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(1463)												data58->fPos = (data58->fPos + (int)2);
HXDLIN(1463)												 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(1463)												data59->bPos = (data59->bPos + (int)1);
            											}
            											break;
            											case (int)17: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(1463)												data60->fPos = (data60->fPos + (int)2);
            											}
            											break;
            											case (int)18: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(1463)												data61->fPos = (data61->fPos + (int)2);
            											}
            											break;
            											case (int)19: {
HXLINE(1463)												 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(1463)												data62->oPos = (data62->oPos + (int)1);
            											}
            											break;
            											case (int)20: case (int)21: {
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE(1463)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN(1463)									 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(1463)									 ::openfl::_internal::renderer::DrawCommandReader c11 = this2;
HXLINE(1464)									::Array< ::Dynamic> c12 = c11->buffer->ii;
HXDLIN(1464)									::cpp::VirtualArray c13 = c11->buffer->o;
HXDLIN(1464)									::cpp::VirtualArray c14 = c11->buffer->o;
HXDLIN(1464)									::cpp::VirtualArray c15 = c11->buffer->o;
HXDLIN(1464)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c12->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->__get((c11->oPos + (int)1))) ),c14->__get((c11->oPos + (int)2)),c15->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
HXLINE(1465)									::Array< ::Dynamic> c16 = c11->buffer->ii;
HXDLIN(1465)									::cpp::VirtualArray c17 = c11->buffer->o;
HXDLIN(1465)									::cpp::VirtualArray c18 = c11->buffer->o;
HXDLIN(1465)									::cpp::VirtualArray c19 = c11->buffer->o;
HXDLIN(1465)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c16->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c17->__get((c11->oPos + (int)1))) ),c18->__get((c11->oPos + (int)2)),c19->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
            								}
            								else {
HXLINE(1467)									if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn() )) {
HXLINE(1469)										{
HXLINE(1469)											 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(1469)											switch((int)(_hx_getEnumValueIndex(_g4))){
            												case (int)0: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(1469)													data63->oPos = (data63->oPos + (int)2);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(1469)													data64->bPos = (data64->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(1469)													data65->iPos = (data65->iPos + (int)1);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(1469)													data66->fPos = (data66->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(1469)													data67->oPos = (data67->oPos + (int)4);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(1469)													data68->iiPos = (data68->iiPos + (int)2);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(1469)													data69->ffPos = (data69->ffPos + (int)1);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(1469)													data70->fPos = (data70->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(1469)													data71->oPos = (data71->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(1469)													data72->fPos = (data72->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(1469)													data73->fPos = (data73->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(1469)													data74->fPos = (data74->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(1469)													data75->fPos = (data75->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(1469)													data76->oPos = (data76->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(1469)													data77->fPos = (data77->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(1469)													data78->fPos = (data78->fPos + (int)5);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(1469)													data79->oPos = (data79->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(1469)													data80->oPos = (data80->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(1469)													data81->oPos = (data81->oPos + (int)2);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(1469)													data82->bPos = (data82->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(1469)													data83->oPos = (data83->oPos + (int)4);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(1469)													data84->iiPos = (data84->iiPos + (int)2);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(1469)													data85->ffPos = (data85->ffPos + (int)1);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(1469)													data86->fPos = (data86->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(1469)													data87->oPos = (data87->oPos + (int)4);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(1469)													data88->iPos = (data88->iPos + (int)1);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(1469)													data89->fPos = (data89->fPos + (int)2);
HXDLIN(1469)													 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(1469)													data90->bPos = (data90->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(1469)													data91->fPos = (data91->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(1469)													data92->fPos = (data92->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE(1469)													 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(1469)													data93->oPos = (data93->oPos + (int)1);
            												}
            												break;
            												case (int)20: case (int)21: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE(1469)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN(1469)										 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(1469)										 ::openfl::_internal::renderer::DrawCommandReader c20 = this3;
HXLINE(1470)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
HXLINE(1471)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
            									}
            									else {
HXLINE(1475)										{
HXLINE(1475)											 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(1475)											switch((int)(_hx_getEnumValueIndex(_g5))){
            												case (int)0: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(1475)													data94->oPos = (data94->oPos + (int)2);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(1475)													data95->bPos = (data95->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(1475)													data96->iPos = (data96->iPos + (int)1);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(1475)													data97->fPos = (data97->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(1475)													data98->oPos = (data98->oPos + (int)4);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(1475)													data99->iiPos = (data99->iiPos + (int)2);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(1475)													data100->ffPos = (data100->ffPos + (int)1);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(1475)													data101->fPos = (data101->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(1475)													data102->oPos = (data102->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(1475)													data103->fPos = (data103->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(1475)													data104->fPos = (data104->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(1475)													data105->fPos = (data105->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(1475)													data106->fPos = (data106->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(1475)													data107->oPos = (data107->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(1475)													data108->fPos = (data108->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(1475)													data109->fPos = (data109->fPos + (int)5);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(1475)													data110->oPos = (data110->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(1475)													data111->oPos = (data111->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(1475)													data112->oPos = (data112->oPos + (int)2);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(1475)													data113->bPos = (data113->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(1475)													data114->oPos = (data114->oPos + (int)4);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(1475)													data115->iiPos = (data115->iiPos + (int)2);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(1475)													data116->ffPos = (data116->ffPos + (int)1);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(1475)													data117->fPos = (data117->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(1475)													data118->oPos = (data118->oPos + (int)4);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(1475)													data119->iPos = (data119->iPos + (int)1);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(1475)													data120->fPos = (data120->fPos + (int)2);
HXDLIN(1475)													 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(1475)													data121->bPos = (data121->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(1475)													data122->fPos = (data122->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(1475)													data123->fPos = (data123->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE(1475)													 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(1475)													data124->oPos = (data124->oPos + (int)1);
            												}
            												break;
            												case (int)20: case (int)21: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE(1475)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN(1475)										 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(1475)										 ::openfl::_internal::renderer::DrawCommandReader c21 = this4;
HXLINE(1476)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1476)										int c22 = c21->buffer->i->__get(c21->iPos);
HXDLIN(1476)										_hx_tmp9->beginFill(c22,c21->buffer->f->__get(c21->fPos));
HXLINE(1477)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp10 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1477)										int c23 = c21->buffer->i->__get(c21->iPos);
HXDLIN(1477)										_hx_tmp10->beginFill(c23,c21->buffer->f->__get(c21->fPos));
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE(1328)							{
HXLINE(1328)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(1328)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(1328)										data125->oPos = (data125->oPos + (int)2);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(1328)										data126->bPos = (data126->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(1328)										data127->iPos = (data127->iPos + (int)1);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(1328)										data128->fPos = (data128->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(1328)										data129->oPos = (data129->oPos + (int)4);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(1328)										data130->iiPos = (data130->iiPos + (int)2);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(1328)										data131->ffPos = (data131->ffPos + (int)1);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(1328)										data132->fPos = (data132->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(1328)										data133->oPos = (data133->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(1328)										data134->fPos = (data134->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(1328)										data135->fPos = (data135->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(1328)										data136->fPos = (data136->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(1328)										data137->fPos = (data137->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(1328)										data138->oPos = (data138->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(1328)										data139->fPos = (data139->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(1328)										data140->fPos = (data140->fPos + (int)5);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(1328)										data141->oPos = (data141->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(1328)										data142->oPos = (data142->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(1328)										data143->oPos = (data143->oPos + (int)2);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(1328)										data144->bPos = (data144->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(1328)										data145->oPos = (data145->oPos + (int)4);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(1328)										data146->iiPos = (data146->iiPos + (int)2);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(1328)										data147->ffPos = (data147->ffPos + (int)1);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(1328)										data148->fPos = (data148->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(1328)										data149->oPos = (data149->oPos + (int)4);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(1328)										data150->iPos = (data150->iPos + (int)1);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(1328)										data151->fPos = (data151->fPos + (int)2);
HXDLIN(1328)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(1328)										data152->bPos = (data152->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(1328)										data153->fPos = (data153->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(1328)										data154->fPos = (data154->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1328)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(1328)										data155->oPos = (data155->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1328)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1328)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(1328)							 ::openfl::_internal::renderer::DrawCommandReader c24 = this5;
HXLINE(1329)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp11 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1329)							Float c25 = c24->buffer->f->__get(c24->fPos);
HXDLIN(1329)							::Array< Float > c26 = c24->buffer->f;
HXDLIN(1329)							Float c27 = c26->__get((c24->fPos + (int)1));
HXDLIN(1329)							::Array< Float > c28 = c24->buffer->f;
HXDLIN(1329)							Float c29 = c28->__get((c24->fPos + (int)2));
HXDLIN(1329)							::Array< Float > c30 = c24->buffer->f;
HXDLIN(1329)							Float c31 = c30->__get((c24->fPos + (int)3));
HXDLIN(1329)							::Array< Float > c32 = c24->buffer->f;
HXDLIN(1329)							Float c33 = c32->__get((c24->fPos + (int)4));
HXDLIN(1329)							::Array< Float > c34 = c24->buffer->f;
HXDLIN(1329)							_hx_tmp11->cubicCurveTo(c25,c27,c29,c31,c33,c34->__get((c24->fPos + (int)5)));
HXLINE(1331)							if (hasLineStyle) {
HXLINE(1333)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1333)								Float c35 = c24->buffer->f->__get(c24->fPos);
HXDLIN(1333)								::Array< Float > c36 = c24->buffer->f;
HXDLIN(1333)								Float c37 = c36->__get((c24->fPos + (int)1));
HXDLIN(1333)								::Array< Float > c38 = c24->buffer->f;
HXDLIN(1333)								Float c39 = c38->__get((c24->fPos + (int)2));
HXDLIN(1333)								::Array< Float > c40 = c24->buffer->f;
HXDLIN(1333)								Float c41 = c40->__get((c24->fPos + (int)3));
HXDLIN(1333)								::Array< Float > c42 = c24->buffer->f;
HXDLIN(1333)								Float c43 = c42->__get((c24->fPos + (int)4));
HXDLIN(1333)								::Array< Float > c44 = c24->buffer->f;
HXDLIN(1333)								_hx_tmp12->cubicCurveTo(c35,c37,c39,c41,c43,c44->__get((c24->fPos + (int)5)));
            							}
            							else {
HXLINE(1337)								::Array< Float > c45 = c24->buffer->f;
HXDLIN(1337)								initStrokeX = c45->__get((c24->fPos + (int)4));
HXLINE(1338)								::Array< Float > c46 = c24->buffer->f;
HXDLIN(1338)								initStrokeY = c46->__get((c24->fPos + (int)5));
            							}
            						}
            						break;
            						case (int)5: {
HXLINE(1344)							{
HXLINE(1344)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(1344)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(1344)										data156->oPos = (data156->oPos + (int)2);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(1344)										data157->bPos = (data157->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(1344)										data158->iPos = (data158->iPos + (int)1);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(1344)										data159->fPos = (data159->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(1344)										data160->oPos = (data160->oPos + (int)4);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(1344)										data161->iiPos = (data161->iiPos + (int)2);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(1344)										data162->ffPos = (data162->ffPos + (int)1);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(1344)										data163->fPos = (data163->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(1344)										data164->oPos = (data164->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(1344)										data165->fPos = (data165->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(1344)										data166->fPos = (data166->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(1344)										data167->fPos = (data167->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(1344)										data168->fPos = (data168->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(1344)										data169->oPos = (data169->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(1344)										data170->fPos = (data170->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(1344)										data171->fPos = (data171->fPos + (int)5);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(1344)										data172->oPos = (data172->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(1344)										data173->oPos = (data173->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(1344)										data174->oPos = (data174->oPos + (int)2);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(1344)										data175->bPos = (data175->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(1344)										data176->oPos = (data176->oPos + (int)4);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(1344)										data177->iiPos = (data177->iiPos + (int)2);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(1344)										data178->ffPos = (data178->ffPos + (int)1);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(1344)										data179->fPos = (data179->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(1344)										data180->oPos = (data180->oPos + (int)4);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(1344)										data181->iPos = (data181->iPos + (int)1);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(1344)										data182->fPos = (data182->fPos + (int)2);
HXDLIN(1344)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(1344)										data183->bPos = (data183->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(1344)										data184->fPos = (data184->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(1344)										data185->fPos = (data185->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1344)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(1344)										data186->oPos = (data186->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1344)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1344)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(1344)							 ::openfl::_internal::renderer::DrawCommandReader c47 = this6;
HXLINE(1345)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1345)							Float c48 = c47->buffer->f->__get(c47->fPos);
HXDLIN(1345)							::Array< Float > c49 = c47->buffer->f;
HXDLIN(1345)							Float c50 = c49->__get((c47->fPos + (int)1));
HXDLIN(1345)							::Array< Float > c51 = c47->buffer->f;
HXDLIN(1345)							Float c52 = c51->__get((c47->fPos + (int)2));
HXDLIN(1345)							::Array< Float > c53 = c47->buffer->f;
HXDLIN(1345)							_hx_tmp13->curveTo(c48,c50,c52,c53->__get((c47->fPos + (int)3)));
HXLINE(1347)							if (hasLineStyle) {
HXLINE(1349)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1349)								Float c54 = c47->buffer->f->__get(c47->fPos);
HXDLIN(1349)								::Array< Float > c55 = c47->buffer->f;
HXDLIN(1349)								Float c56 = c55->__get((c47->fPos + (int)1));
HXDLIN(1349)								::Array< Float > c57 = c47->buffer->f;
HXDLIN(1349)								Float c58 = c57->__get((c47->fPos + (int)2));
HXDLIN(1349)								::Array< Float > c59 = c47->buffer->f;
HXDLIN(1349)								_hx_tmp14->curveTo(c54,c56,c58,c59->__get((c47->fPos + (int)3)));
            							}
            							else {
HXLINE(1353)								::Array< Float > c60 = c47->buffer->f;
HXDLIN(1353)								initStrokeX = c60->__get((c47->fPos + (int)2));
HXLINE(1354)								::Array< Float > c61 = c47->buffer->f;
HXDLIN(1354)								initStrokeY = c61->__get((c47->fPos + (int)3));
            							}
            						}
            						break;
            						case (int)6: {
HXLINE(1483)							{
HXLINE(1483)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(1483)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(1483)										data187->oPos = (data187->oPos + (int)2);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(1483)										data188->bPos = (data188->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(1483)										data189->iPos = (data189->iPos + (int)1);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(1483)										data190->fPos = (data190->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(1483)										data191->oPos = (data191->oPos + (int)4);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(1483)										data192->iiPos = (data192->iiPos + (int)2);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(1483)										data193->ffPos = (data193->ffPos + (int)1);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(1483)										data194->fPos = (data194->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(1483)										data195->oPos = (data195->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(1483)										data196->fPos = (data196->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(1483)										data197->fPos = (data197->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(1483)										data198->fPos = (data198->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(1483)										data199->fPos = (data199->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(1483)										data200->oPos = (data200->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(1483)										data201->fPos = (data201->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(1483)										data202->fPos = (data202->fPos + (int)5);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(1483)										data203->oPos = (data203->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(1483)										data204->oPos = (data204->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(1483)										data205->oPos = (data205->oPos + (int)2);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(1483)										data206->bPos = (data206->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(1483)										data207->oPos = (data207->oPos + (int)4);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(1483)										data208->iiPos = (data208->iiPos + (int)2);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(1483)										data209->ffPos = (data209->ffPos + (int)1);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(1483)										data210->fPos = (data210->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(1483)										data211->oPos = (data211->oPos + (int)4);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(1483)										data212->iPos = (data212->iPos + (int)1);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(1483)										data213->fPos = (data213->fPos + (int)2);
HXDLIN(1483)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(1483)										data214->bPos = (data214->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(1483)										data215->fPos = (data215->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(1483)										data216->fPos = (data216->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1483)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(1483)										data217->oPos = (data217->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1483)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1483)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(1483)							 ::openfl::_internal::renderer::DrawCommandReader c62 = this7;
HXLINE(1484)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1484)							Float c63 = c62->buffer->f->__get(c62->fPos);
HXDLIN(1484)							::Array< Float > c64 = c62->buffer->f;
HXDLIN(1484)							Float c65 = c64->__get((c62->fPos + (int)1));
HXDLIN(1484)							::Array< Float > c66 = c62->buffer->f;
HXDLIN(1484)							_hx_tmp15->drawCircle(c63,c65,c66->__get((c62->fPos + (int)2)));
HXLINE(1486)							if (hasLineStyle) {
HXLINE(1488)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1488)								Float c67 = c62->buffer->f->__get(c62->fPos);
HXDLIN(1488)								::Array< Float > c68 = c62->buffer->f;
HXDLIN(1488)								Float c69 = c68->__get((c62->fPos + (int)1));
HXDLIN(1488)								::Array< Float > c70 = c62->buffer->f;
HXDLIN(1488)								_hx_tmp16->drawCircle(c67,c69,c70->__get((c62->fPos + (int)2)));
            							}
            						}
            						break;
            						case (int)7: {
HXLINE(1494)							{
HXLINE(1494)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(1494)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(1494)										data218->oPos = (data218->oPos + (int)2);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(1494)										data219->bPos = (data219->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(1494)										data220->iPos = (data220->iPos + (int)1);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(1494)										data221->fPos = (data221->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(1494)										data222->oPos = (data222->oPos + (int)4);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(1494)										data223->iiPos = (data223->iiPos + (int)2);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(1494)										data224->ffPos = (data224->ffPos + (int)1);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(1494)										data225->fPos = (data225->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(1494)										data226->oPos = (data226->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(1494)										data227->fPos = (data227->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(1494)										data228->fPos = (data228->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(1494)										data229->fPos = (data229->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(1494)										data230->fPos = (data230->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(1494)										data231->oPos = (data231->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(1494)										data232->fPos = (data232->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(1494)										data233->fPos = (data233->fPos + (int)5);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(1494)										data234->oPos = (data234->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(1494)										data235->oPos = (data235->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(1494)										data236->oPos = (data236->oPos + (int)2);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(1494)										data237->bPos = (data237->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(1494)										data238->oPos = (data238->oPos + (int)4);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(1494)										data239->iiPos = (data239->iiPos + (int)2);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(1494)										data240->ffPos = (data240->ffPos + (int)1);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(1494)										data241->fPos = (data241->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(1494)										data242->oPos = (data242->oPos + (int)4);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(1494)										data243->iPos = (data243->iPos + (int)1);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(1494)										data244->fPos = (data244->fPos + (int)2);
HXDLIN(1494)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(1494)										data245->bPos = (data245->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(1494)										data246->fPos = (data246->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(1494)										data247->fPos = (data247->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1494)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(1494)										data248->oPos = (data248->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1494)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1494)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(1494)							 ::openfl::_internal::renderer::DrawCommandReader c71 = this8;
HXLINE(1495)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp17 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1495)							Float c72 = c71->buffer->f->__get(c71->fPos);
HXDLIN(1495)							::Array< Float > c73 = c71->buffer->f;
HXDLIN(1495)							Float c74 = c73->__get((c71->fPos + (int)1));
HXDLIN(1495)							::Array< Float > c75 = c71->buffer->f;
HXDLIN(1495)							Float c76 = c75->__get((c71->fPos + (int)2));
HXDLIN(1495)							::Array< Float > c77 = c71->buffer->f;
HXDLIN(1495)							_hx_tmp17->drawEllipse(c72,c74,c76,c77->__get((c71->fPos + (int)3)));
HXLINE(1497)							if (hasLineStyle) {
HXLINE(1499)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp18 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1499)								Float c78 = c71->buffer->f->__get(c71->fPos);
HXDLIN(1499)								::Array< Float > c79 = c71->buffer->f;
HXDLIN(1499)								Float c80 = c79->__get((c71->fPos + (int)1));
HXDLIN(1499)								::Array< Float > c81 = c71->buffer->f;
HXDLIN(1499)								Float c82 = c81->__get((c71->fPos + (int)2));
HXDLIN(1499)								::Array< Float > c83 = c71->buffer->f;
HXDLIN(1499)								_hx_tmp18->drawEllipse(c78,c80,c82,c83->__get((c71->fPos + (int)3)));
            							}
            						}
            						break;
            						case (int)8: {
HXLINE(1527)							{
HXLINE(1527)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(1527)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(1527)										data249->oPos = (data249->oPos + (int)2);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(1527)										data250->bPos = (data250->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(1527)										data251->iPos = (data251->iPos + (int)1);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(1527)										data252->fPos = (data252->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(1527)										data253->oPos = (data253->oPos + (int)4);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(1527)										data254->iiPos = (data254->iiPos + (int)2);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(1527)										data255->ffPos = (data255->ffPos + (int)1);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(1527)										data256->fPos = (data256->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(1527)										data257->oPos = (data257->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(1527)										data258->fPos = (data258->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(1527)										data259->fPos = (data259->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(1527)										data260->fPos = (data260->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(1527)										data261->fPos = (data261->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN(1527)										data262->oPos = (data262->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN(1527)										data263->fPos = (data263->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN(1527)										data264->fPos = (data264->fPos + (int)5);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN(1527)										data265->oPos = (data265->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN(1527)										data266->oPos = (data266->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN(1527)										data267->oPos = (data267->oPos + (int)2);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN(1527)										data268->bPos = (data268->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN(1527)										data269->oPos = (data269->oPos + (int)4);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN(1527)										data270->iiPos = (data270->iiPos + (int)2);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN(1527)										data271->ffPos = (data271->ffPos + (int)1);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN(1527)										data272->fPos = (data272->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN(1527)										data273->oPos = (data273->oPos + (int)4);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN(1527)										data274->iPos = (data274->iPos + (int)1);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN(1527)										data275->fPos = (data275->fPos + (int)2);
HXDLIN(1527)										 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN(1527)										data276->bPos = (data276->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN(1527)										data277->fPos = (data277->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN(1527)										data278->fPos = (data278->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1527)										 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN(1527)										data279->oPos = (data279->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1527)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN(1527)							 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN(1527)							 ::openfl::_internal::renderer::DrawCommandReader c84 = this9;
HXLINE(1528)							::cpp::VirtualArray c85 = c84->buffer->o;
HXDLIN(1528)							::cpp::VirtualArray c86 = c84->buffer->o;
HXDLIN(1528)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->drawQuads(( ( ::openfl::_Vector::FloatVector)(c84->buffer->o->__get(c84->oPos)) ),( ( ::openfl::_Vector::IntVector)(c85->__get((c84->oPos + (int)1))) ),( ( ::openfl::_Vector::FloatVector)(c86->__get((c84->oPos + (int)2))) ));
            						}
            						break;
            						case (int)9: {
HXLINE(1505)							{
HXLINE(1505)								 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN(1505)								switch((int)(_hx_getEnumValueIndex(_g11))){
            									case (int)0: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN(1505)										data280->oPos = (data280->oPos + (int)2);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN(1505)										data281->bPos = (data281->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN(1505)										data282->iPos = (data282->iPos + (int)1);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN(1505)										data283->fPos = (data283->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN(1505)										data284->oPos = (data284->oPos + (int)4);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN(1505)										data285->iiPos = (data285->iiPos + (int)2);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN(1505)										data286->ffPos = (data286->ffPos + (int)1);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN(1505)										data287->fPos = (data287->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN(1505)										data288->oPos = (data288->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN(1505)										data289->fPos = (data289->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN(1505)										data290->fPos = (data290->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN(1505)										data291->fPos = (data291->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN(1505)										data292->fPos = (data292->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN(1505)										data293->oPos = (data293->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN(1505)										data294->fPos = (data294->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN(1505)										data295->fPos = (data295->fPos + (int)5);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN(1505)										data296->oPos = (data296->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN(1505)										data297->oPos = (data297->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN(1505)										data298->oPos = (data298->oPos + (int)2);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN(1505)										data299->bPos = (data299->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN(1505)										data300->oPos = (data300->oPos + (int)4);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN(1505)										data301->iiPos = (data301->iiPos + (int)2);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN(1505)										data302->ffPos = (data302->ffPos + (int)1);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN(1505)										data303->fPos = (data303->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN(1505)										data304->oPos = (data304->oPos + (int)4);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN(1505)										data305->iPos = (data305->iPos + (int)1);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN(1505)										data306->fPos = (data306->fPos + (int)2);
HXDLIN(1505)										 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN(1505)										data307->bPos = (data307->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN(1505)										data308->fPos = (data308->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN(1505)										data309->fPos = (data309->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1505)										 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN(1505)										data310->oPos = (data310->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1505)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1505)							 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN(1505)							 ::openfl::_internal::renderer::DrawCommandReader c87 = this10;
HXLINE(1506)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1506)							Float c88 = c87->buffer->f->__get(c87->fPos);
HXDLIN(1506)							::Array< Float > c89 = c87->buffer->f;
HXDLIN(1506)							Float c90 = c89->__get((c87->fPos + (int)1));
HXDLIN(1506)							::Array< Float > c91 = c87->buffer->f;
HXDLIN(1506)							Float c92 = c91->__get((c87->fPos + (int)2));
HXDLIN(1506)							::Array< Float > c93 = c87->buffer->f;
HXDLIN(1506)							_hx_tmp19->drawRect(c88,c90,c92,c93->__get((c87->fPos + (int)3)));
HXLINE(1508)							if (hasLineStyle) {
HXLINE(1510)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1510)								Float c94 = c87->buffer->f->__get(c87->fPos);
HXDLIN(1510)								::Array< Float > c95 = c87->buffer->f;
HXDLIN(1510)								Float c96 = c95->__get((c87->fPos + (int)1));
HXDLIN(1510)								::Array< Float > c97 = c87->buffer->f;
HXDLIN(1510)								Float c98 = c97->__get((c87->fPos + (int)2));
HXDLIN(1510)								::Array< Float > c99 = c87->buffer->f;
HXDLIN(1510)								_hx_tmp20->drawRect(c94,c96,c98,c99->__get((c87->fPos + (int)3)));
            							}
            						}
            						break;
            						case (int)10: {
HXLINE(1516)							{
HXLINE(1516)								 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN(1516)								switch((int)(_hx_getEnumValueIndex(_g12))){
            									case (int)0: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN(1516)										data311->oPos = (data311->oPos + (int)2);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN(1516)										data312->bPos = (data312->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN(1516)										data313->iPos = (data313->iPos + (int)1);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN(1516)										data314->fPos = (data314->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN(1516)										data315->oPos = (data315->oPos + (int)4);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN(1516)										data316->iiPos = (data316->iiPos + (int)2);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN(1516)										data317->ffPos = (data317->ffPos + (int)1);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN(1516)										data318->fPos = (data318->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN(1516)										data319->oPos = (data319->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN(1516)										data320->fPos = (data320->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN(1516)										data321->fPos = (data321->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN(1516)										data322->fPos = (data322->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN(1516)										data323->fPos = (data323->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN(1516)										data324->oPos = (data324->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN(1516)										data325->fPos = (data325->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN(1516)										data326->fPos = (data326->fPos + (int)5);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN(1516)										data327->oPos = (data327->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN(1516)										data328->oPos = (data328->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN(1516)										data329->oPos = (data329->oPos + (int)2);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN(1516)										data330->bPos = (data330->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN(1516)										data331->oPos = (data331->oPos + (int)4);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN(1516)										data332->iiPos = (data332->iiPos + (int)2);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN(1516)										data333->ffPos = (data333->ffPos + (int)1);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN(1516)										data334->fPos = (data334->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN(1516)										data335->oPos = (data335->oPos + (int)4);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN(1516)										data336->iPos = (data336->iPos + (int)1);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN(1516)										data337->fPos = (data337->fPos + (int)2);
HXDLIN(1516)										 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN(1516)										data338->bPos = (data338->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN(1516)										data339->fPos = (data339->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN(1516)										data340->fPos = (data340->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1516)										 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN(1516)										data341->oPos = (data341->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1516)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1516)							 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN(1516)							 ::openfl::_internal::renderer::DrawCommandReader c100 = this11;
HXLINE(1517)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1517)							Float c101 = c100->buffer->f->__get(c100->fPos);
HXDLIN(1517)							::Array< Float > c102 = c100->buffer->f;
HXDLIN(1517)							Float c103 = c102->__get((c100->fPos + (int)1));
HXDLIN(1517)							::Array< Float > c104 = c100->buffer->f;
HXDLIN(1517)							Float c105 = c104->__get((c100->fPos + (int)2));
HXDLIN(1517)							::Array< Float > c106 = c100->buffer->f;
HXDLIN(1517)							Float c107 = c106->__get((c100->fPos + (int)3));
HXDLIN(1517)							::Array< Float > c108 = c100->buffer->f;
HXDLIN(1517)							_hx_tmp21->drawRoundRect(c101,c103,c105,c107,c108->__get((c100->fPos + (int)4)),c100->buffer->o->__get(c100->oPos));
HXLINE(1519)							if (hasLineStyle) {
HXLINE(1521)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1521)								Float c109 = c100->buffer->f->__get(c100->fPos);
HXDLIN(1521)								::Array< Float > c110 = c100->buffer->f;
HXDLIN(1521)								Float c111 = c110->__get((c100->fPos + (int)1));
HXDLIN(1521)								::Array< Float > c112 = c100->buffer->f;
HXDLIN(1521)								Float c113 = c112->__get((c100->fPos + (int)2));
HXDLIN(1521)								::Array< Float > c114 = c100->buffer->f;
HXDLIN(1521)								Float c115 = c114->__get((c100->fPos + (int)3));
HXDLIN(1521)								::Array< Float > c116 = c100->buffer->f;
HXDLIN(1521)								_hx_tmp22->drawRoundRect(c109,c111,c113,c115,c116->__get((c100->fPos + (int)4)),c100->buffer->o->__get(c100->oPos));
            							}
            						}
            						break;
            						case (int)12: {
HXLINE(1532)							{
HXLINE(1532)								 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN(1532)								switch((int)(_hx_getEnumValueIndex(_g13))){
            									case (int)0: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN(1532)										data342->oPos = (data342->oPos + (int)2);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN(1532)										data343->bPos = (data343->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN(1532)										data344->iPos = (data344->iPos + (int)1);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN(1532)										data345->fPos = (data345->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN(1532)										data346->oPos = (data346->oPos + (int)4);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN(1532)										data347->iiPos = (data347->iiPos + (int)2);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN(1532)										data348->ffPos = (data348->ffPos + (int)1);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN(1532)										data349->fPos = (data349->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN(1532)										data350->oPos = (data350->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN(1532)										data351->fPos = (data351->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN(1532)										data352->fPos = (data352->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN(1532)										data353->fPos = (data353->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN(1532)										data354->fPos = (data354->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN(1532)										data355->oPos = (data355->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN(1532)										data356->fPos = (data356->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN(1532)										data357->fPos = (data357->fPos + (int)5);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN(1532)										data358->oPos = (data358->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN(1532)										data359->oPos = (data359->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN(1532)										data360->oPos = (data360->oPos + (int)2);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN(1532)										data361->bPos = (data361->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN(1532)										data362->oPos = (data362->oPos + (int)4);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN(1532)										data363->iiPos = (data363->iiPos + (int)2);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN(1532)										data364->ffPos = (data364->ffPos + (int)1);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN(1532)										data365->fPos = (data365->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN(1532)										data366->oPos = (data366->oPos + (int)4);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN(1532)										data367->iPos = (data367->iPos + (int)1);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN(1532)										data368->fPos = (data368->fPos + (int)2);
HXDLIN(1532)										 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN(1532)										data369->bPos = (data369->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN(1532)										data370->fPos = (data370->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN(1532)										data371->fPos = (data371->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1532)										 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN(1532)										data372->oPos = (data372->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1532)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN(1532)							 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN(1532)							 ::openfl::_internal::renderer::DrawCommandReader c117 = this12;
HXLINE(1533)							::cpp::VirtualArray c118 = c117->buffer->o;
HXDLIN(1533)							::cpp::VirtualArray c119 = c117->buffer->o;
HXDLIN(1533)							::cpp::VirtualArray c120 = c117->buffer->o;
HXDLIN(1533)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->drawTriangles(( ( ::openfl::_Vector::FloatVector)(c117->buffer->o->__get(c117->oPos)) ),( ( ::openfl::_Vector::IntVector)(c118->__get((c117->oPos + (int)1))) ),( ( ::openfl::_Vector::FloatVector)(c119->__get((c117->oPos + (int)2))) ),c120->__get((c117->oPos + (int)3)));
            						}
            						break;
            						case (int)13: {
HXLINE(1392)							{
HXLINE(1392)								{
HXLINE(1392)									 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN(1392)									switch((int)(_hx_getEnumValueIndex(_g14))){
            										case (int)0: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN(1392)											data373->oPos = (data373->oPos + (int)2);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN(1392)											data374->bPos = (data374->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN(1392)											data375->iPos = (data375->iPos + (int)1);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN(1392)											data376->fPos = (data376->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN(1392)											data377->oPos = (data377->oPos + (int)4);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN(1392)											data378->iiPos = (data378->iiPos + (int)2);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN(1392)											data379->ffPos = (data379->ffPos + (int)1);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN(1392)											data380->fPos = (data380->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN(1392)											data381->oPos = (data381->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN(1392)											data382->fPos = (data382->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN(1392)											data383->fPos = (data383->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN(1392)											data384->fPos = (data384->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN(1392)											data385->fPos = (data385->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN(1392)											data386->oPos = (data386->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN(1392)											data387->fPos = (data387->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN(1392)											data388->fPos = (data388->fPos + (int)5);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN(1392)											data389->oPos = (data389->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN(1392)											data390->oPos = (data390->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN(1392)											data391->oPos = (data391->oPos + (int)2);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN(1392)											data392->bPos = (data392->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN(1392)											data393->oPos = (data393->oPos + (int)4);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN(1392)											data394->iiPos = (data394->iiPos + (int)2);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN(1392)											data395->ffPos = (data395->ffPos + (int)1);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN(1392)											data396->fPos = (data396->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN(1392)											data397->oPos = (data397->oPos + (int)4);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN(1392)											data398->iPos = (data398->iPos + (int)1);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN(1392)											data399->fPos = (data399->fPos + (int)2);
HXDLIN(1392)											 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN(1392)											data400->bPos = (data400->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN(1392)											data401->fPos = (data401->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN(1392)											data402->fPos = (data402->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1392)											 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN(1392)											data403->oPos = (data403->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1392)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN(1392)								 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
            							}
HXLINE(1393)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE(1394)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE(1395)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE(1396)							hasLineStyle = false;
HXLINE(1397)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
HXLINE(1398)							initStrokeX = (int)0;
HXLINE(1399)							initStrokeY = (int)0;
            						}
            						break;
            						case (int)14: {
HXLINE(1418)							{
HXLINE(1418)								 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN(1418)								switch((int)(_hx_getEnumValueIndex(_g15))){
            									case (int)0: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN(1418)										data404->oPos = (data404->oPos + (int)2);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN(1418)										data405->bPos = (data405->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN(1418)										data406->iPos = (data406->iPos + (int)1);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN(1418)										data407->fPos = (data407->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN(1418)										data408->oPos = (data408->oPos + (int)4);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN(1418)										data409->iiPos = (data409->iiPos + (int)2);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN(1418)										data410->ffPos = (data410->ffPos + (int)1);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN(1418)										data411->fPos = (data411->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN(1418)										data412->oPos = (data412->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN(1418)										data413->fPos = (data413->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN(1418)										data414->fPos = (data414->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN(1418)										data415->fPos = (data415->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN(1418)										data416->fPos = (data416->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN(1418)										data417->oPos = (data417->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN(1418)										data418->fPos = (data418->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN(1418)										data419->fPos = (data419->fPos + (int)5);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN(1418)										data420->oPos = (data420->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN(1418)										data421->oPos = (data421->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN(1418)										data422->oPos = (data422->oPos + (int)2);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN(1418)										data423->bPos = (data423->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN(1418)										data424->oPos = (data424->oPos + (int)4);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN(1418)										data425->iiPos = (data425->iiPos + (int)2);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN(1418)										data426->ffPos = (data426->ffPos + (int)1);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN(1418)										data427->fPos = (data427->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN(1418)										data428->oPos = (data428->oPos + (int)4);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN(1418)										data429->iPos = (data429->iPos + (int)1);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN(1418)										data430->fPos = (data430->fPos + (int)2);
HXDLIN(1418)										 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN(1418)										data431->bPos = (data431->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN(1418)										data432->fPos = (data432->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN(1418)										data433->fPos = (data433->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1418)										 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN(1418)										data434->oPos = (data434->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1418)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN(1418)							 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN(1418)							 ::openfl::_internal::renderer::DrawCommandReader c121 = this14;
HXLINE(1420)							bool _hx_tmp23;
HXDLIN(1420)							if (!(hasLineStyle)) {
HXLINE(1420)								if ((initStrokeX == (int)0)) {
HXLINE(1420)									_hx_tmp23 = (initStrokeY != (int)0);
            								}
            								else {
HXLINE(1420)									_hx_tmp23 = true;
            								}
            							}
            							else {
HXLINE(1420)								_hx_tmp23 = false;
            							}
HXDLIN(1420)							if (_hx_tmp23) {
HXLINE(1422)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1423)								initStrokeX = (int)0;
HXLINE(1424)								initStrokeY = (int)0;
            							}
HXLINE(1428)							hasLineStyle = true;
HXLINE(1429)							::cpp::VirtualArray c122 = c121->buffer->o;
HXDLIN(1429)							::Array< bool > c123 = c121->buffer->b;
HXDLIN(1429)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c121->buffer->o->__get(c121->oPos)) ),( ( ::openfl::geom::Matrix)(c122->__get((c121->oPos + (int)1))) ),c121->buffer->b->__get(c121->bPos),c123->__get((c121->bPos + (int)1)));
            						}
            						break;
            						case (int)15: {
HXLINE(1403)							{
HXLINE(1403)								 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN(1403)								switch((int)(_hx_getEnumValueIndex(_g16))){
            									case (int)0: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN(1403)										data435->oPos = (data435->oPos + (int)2);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN(1403)										data436->bPos = (data436->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN(1403)										data437->iPos = (data437->iPos + (int)1);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN(1403)										data438->fPos = (data438->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN(1403)										data439->oPos = (data439->oPos + (int)4);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN(1403)										data440->iiPos = (data440->iiPos + (int)2);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN(1403)										data441->ffPos = (data441->ffPos + (int)1);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN(1403)										data442->fPos = (data442->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN(1403)										data443->oPos = (data443->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN(1403)										data444->fPos = (data444->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN(1403)										data445->fPos = (data445->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN(1403)										data446->fPos = (data446->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN(1403)										data447->fPos = (data447->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN(1403)										data448->oPos = (data448->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN(1403)										data449->fPos = (data449->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN(1403)										data450->fPos = (data450->fPos + (int)5);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN(1403)										data451->oPos = (data451->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN(1403)										data452->oPos = (data452->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN(1403)										data453->oPos = (data453->oPos + (int)2);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN(1403)										data454->bPos = (data454->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN(1403)										data455->oPos = (data455->oPos + (int)4);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN(1403)										data456->iiPos = (data456->iiPos + (int)2);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN(1403)										data457->ffPos = (data457->ffPos + (int)1);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN(1403)										data458->fPos = (data458->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN(1403)										data459->oPos = (data459->oPos + (int)4);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN(1403)										data460->iPos = (data460->iPos + (int)1);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN(1403)										data461->fPos = (data461->fPos + (int)2);
HXDLIN(1403)										 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN(1403)										data462->bPos = (data462->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN(1403)										data463->fPos = (data463->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN(1403)										data464->fPos = (data464->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1403)										 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN(1403)										data465->oPos = (data465->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1403)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN(1403)							 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN(1403)							 ::openfl::_internal::renderer::DrawCommandReader c124 = this15;
HXLINE(1405)							bool _hx_tmp24;
HXDLIN(1405)							if (!(hasLineStyle)) {
HXLINE(1405)								if ((initStrokeX == (int)0)) {
HXLINE(1405)									_hx_tmp24 = (initStrokeY != (int)0);
            								}
            								else {
HXLINE(1405)									_hx_tmp24 = true;
            								}
            							}
            							else {
HXLINE(1405)								_hx_tmp24 = false;
            							}
HXDLIN(1405)							if (_hx_tmp24) {
HXLINE(1407)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1408)								initStrokeX = (int)0;
HXLINE(1409)								initStrokeY = (int)0;
            							}
HXLINE(1413)							hasLineStyle = true;
HXLINE(1414)							::Array< ::Dynamic> c125 = c124->buffer->ii;
HXDLIN(1414)							::cpp::VirtualArray c126 = c124->buffer->o;
HXDLIN(1414)							::cpp::VirtualArray c127 = c124->buffer->o;
HXDLIN(1414)							::cpp::VirtualArray c128 = c124->buffer->o;
HXDLIN(1414)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineGradientStyle(c124->buffer->o->__get(c124->oPos),c124->buffer->ii->__get(c124->iiPos).StaticCast< ::Array< int > >(),c124->buffer->ff->__get(c124->ffPos).StaticCast< ::Array< Float > >(),c125->__get((c124->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c126->__get((c124->oPos + (int)1))) ),c127->__get((c124->oPos + (int)2)),c128->__get((c124->oPos + (int)3)),c124->buffer->f->__get(c124->fPos));
            						}
            						break;
            						case (int)16: {
HXLINE(1433)							{
HXLINE(1433)								 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN(1433)								switch((int)(_hx_getEnumValueIndex(_g17))){
            									case (int)0: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN(1433)										data466->oPos = (data466->oPos + (int)2);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN(1433)										data467->bPos = (data467->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN(1433)										data468->iPos = (data468->iPos + (int)1);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN(1433)										data469->fPos = (data469->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN(1433)										data470->oPos = (data470->oPos + (int)4);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN(1433)										data471->iiPos = (data471->iiPos + (int)2);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN(1433)										data472->ffPos = (data472->ffPos + (int)1);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN(1433)										data473->fPos = (data473->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN(1433)										data474->oPos = (data474->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN(1433)										data475->fPos = (data475->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN(1433)										data476->fPos = (data476->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN(1433)										data477->fPos = (data477->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN(1433)										data478->fPos = (data478->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN(1433)										data479->oPos = (data479->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN(1433)										data480->fPos = (data480->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN(1433)										data481->fPos = (data481->fPos + (int)5);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN(1433)										data482->oPos = (data482->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN(1433)										data483->oPos = (data483->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN(1433)										data484->oPos = (data484->oPos + (int)2);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN(1433)										data485->bPos = (data485->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN(1433)										data486->oPos = (data486->oPos + (int)4);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN(1433)										data487->iiPos = (data487->iiPos + (int)2);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN(1433)										data488->ffPos = (data488->ffPos + (int)1);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN(1433)										data489->fPos = (data489->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN(1433)										data490->oPos = (data490->oPos + (int)4);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN(1433)										data491->iPos = (data491->iPos + (int)1);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN(1433)										data492->fPos = (data492->fPos + (int)2);
HXDLIN(1433)										 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN(1433)										data493->bPos = (data493->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN(1433)										data494->fPos = (data494->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN(1433)										data495->fPos = (data495->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1433)										 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN(1433)										data496->oPos = (data496->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1433)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN(1433)							 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN(1433)							 ::openfl::_internal::renderer::DrawCommandReader c129 = this16;
HXLINE(1435)							bool _hx_tmp25;
HXDLIN(1435)							if (!(hasLineStyle)) {
HXLINE(1435)								_hx_tmp25 = hx::IsNotNull( c129->buffer->o->__get(c129->oPos) );
            							}
            							else {
HXLINE(1435)								_hx_tmp25 = false;
            							}
HXDLIN(1435)							if (_hx_tmp25) {
HXLINE(1437)								bool _hx_tmp26;
HXDLIN(1437)								if ((initStrokeX == (int)0)) {
HXLINE(1437)									_hx_tmp26 = (initStrokeY != (int)0);
            								}
            								else {
HXLINE(1437)									_hx_tmp26 = true;
            								}
HXDLIN(1437)								if (_hx_tmp26) {
HXLINE(1439)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1440)									initStrokeX = (int)0;
HXLINE(1441)									initStrokeY = (int)0;
            								}
            							}
HXLINE(1447)							hasLineStyle = hx::IsNotNull( c129->buffer->o->__get(c129->oPos) );
HXLINE(1448)							::cpp::VirtualArray c130 = c129->buffer->o;
HXDLIN(1448)							::cpp::VirtualArray c131 = c129->buffer->o;
HXDLIN(1448)							::cpp::VirtualArray c132 = c129->buffer->o;
HXDLIN(1448)							::Array< Float > c133 = c129->buffer->f;
HXDLIN(1448)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineStyle(c129->buffer->o->__get(c129->oPos),c129->buffer->i->__get(c129->iPos),c129->buffer->f->__get(c129->fPos),c129->buffer->b->__get(c129->bPos),c130->__get((c129->oPos + (int)1)),c131->__get((c129->oPos + (int)2)),c132->__get((c129->oPos + (int)3)),c133->__get((c129->fPos + (int)1)));
            						}
            						break;
            						case (int)17: {
HXLINE(1360)							{
HXLINE(1360)								 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN(1360)								switch((int)(_hx_getEnumValueIndex(_g18))){
            									case (int)0: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN(1360)										data497->oPos = (data497->oPos + (int)2);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN(1360)										data498->bPos = (data498->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN(1360)										data499->iPos = (data499->iPos + (int)1);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN(1360)										data500->fPos = (data500->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN(1360)										data501->oPos = (data501->oPos + (int)4);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN(1360)										data502->iiPos = (data502->iiPos + (int)2);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN(1360)										data503->ffPos = (data503->ffPos + (int)1);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN(1360)										data504->fPos = (data504->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN(1360)										data505->oPos = (data505->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN(1360)										data506->fPos = (data506->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN(1360)										data507->fPos = (data507->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN(1360)										data508->fPos = (data508->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN(1360)										data509->fPos = (data509->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN(1360)										data510->oPos = (data510->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN(1360)										data511->fPos = (data511->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN(1360)										data512->fPos = (data512->fPos + (int)5);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN(1360)										data513->oPos = (data513->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN(1360)										data514->oPos = (data514->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN(1360)										data515->oPos = (data515->oPos + (int)2);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN(1360)										data516->bPos = (data516->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN(1360)										data517->oPos = (data517->oPos + (int)4);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN(1360)										data518->iiPos = (data518->iiPos + (int)2);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN(1360)										data519->ffPos = (data519->ffPos + (int)1);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN(1360)										data520->fPos = (data520->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN(1360)										data521->oPos = (data521->oPos + (int)4);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN(1360)										data522->iPos = (data522->iPos + (int)1);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN(1360)										data523->fPos = (data523->fPos + (int)2);
HXDLIN(1360)										 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN(1360)										data524->bPos = (data524->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN(1360)										data525->fPos = (data525->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN(1360)										data526->fPos = (data526->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1360)										 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN(1360)										data527->oPos = (data527->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1360)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1360)							 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
HXDLIN(1360)							 ::openfl::_internal::renderer::DrawCommandReader c134 = this17;
HXLINE(1361)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp27 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1361)							Float c135 = c134->buffer->f->__get(c134->fPos);
HXDLIN(1361)							::Array< Float > c136 = c134->buffer->f;
HXDLIN(1361)							_hx_tmp27->lineTo(c135,c136->__get((c134->fPos + (int)1)));
HXLINE(1363)							if (hasLineStyle) {
HXLINE(1365)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp28 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1365)								Float c137 = c134->buffer->f->__get(c134->fPos);
HXDLIN(1365)								::Array< Float > c138 = c134->buffer->f;
HXDLIN(1365)								_hx_tmp28->lineTo(c137,c138->__get((c134->fPos + (int)1)));
            							}
            							else {
HXLINE(1369)								initStrokeX = c134->buffer->f->__get(c134->fPos);
HXLINE(1370)								::Array< Float > c139 = c134->buffer->f;
HXDLIN(1370)								initStrokeY = c139->__get((c134->fPos + (int)1));
            							}
            						}
            						break;
            						case (int)18: {
HXLINE(1376)							{
HXLINE(1376)								 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN(1376)								switch((int)(_hx_getEnumValueIndex(_g19))){
            									case (int)0: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN(1376)										data528->oPos = (data528->oPos + (int)2);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN(1376)										data529->bPos = (data529->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN(1376)										data530->iPos = (data530->iPos + (int)1);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN(1376)										data531->fPos = (data531->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN(1376)										data532->oPos = (data532->oPos + (int)4);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN(1376)										data533->iiPos = (data533->iiPos + (int)2);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN(1376)										data534->ffPos = (data534->ffPos + (int)1);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN(1376)										data535->fPos = (data535->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN(1376)										data536->oPos = (data536->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN(1376)										data537->fPos = (data537->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN(1376)										data538->fPos = (data538->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN(1376)										data539->fPos = (data539->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN(1376)										data540->fPos = (data540->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN(1376)										data541->oPos = (data541->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN(1376)										data542->fPos = (data542->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN(1376)										data543->fPos = (data543->fPos + (int)5);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN(1376)										data544->oPos = (data544->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN(1376)										data545->oPos = (data545->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN(1376)										data546->oPos = (data546->oPos + (int)2);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN(1376)										data547->bPos = (data547->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN(1376)										data548->oPos = (data548->oPos + (int)4);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN(1376)										data549->iiPos = (data549->iiPos + (int)2);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN(1376)										data550->ffPos = (data550->ffPos + (int)1);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN(1376)										data551->fPos = (data551->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data552 = data;
HXDLIN(1376)										data552->oPos = (data552->oPos + (int)4);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data553 = data;
HXDLIN(1376)										data553->iPos = (data553->iPos + (int)1);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data554 = data;
HXDLIN(1376)										data554->fPos = (data554->fPos + (int)2);
HXDLIN(1376)										 ::openfl::_internal::renderer::DrawCommandReader data555 = data;
HXDLIN(1376)										data555->bPos = (data555->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data556 = data;
HXDLIN(1376)										data556->fPos = (data556->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data557 = data;
HXDLIN(1376)										data557->fPos = (data557->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1376)										 ::openfl::_internal::renderer::DrawCommandReader data558 = data;
HXDLIN(1376)										data558->oPos = (data558->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1376)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1376)							 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
HXDLIN(1376)							 ::openfl::_internal::renderer::DrawCommandReader c140 = this18;
HXLINE(1377)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp29 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1377)							Float c141 = c140->buffer->f->__get(c140->fPos);
HXDLIN(1377)							::Array< Float > c142 = c140->buffer->f;
HXDLIN(1377)							_hx_tmp29->moveTo(c141,c142->__get((c140->fPos + (int)1)));
HXLINE(1379)							if (hasLineStyle) {
HXLINE(1381)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp30 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1381)								Float c143 = c140->buffer->f->__get(c140->fPos);
HXDLIN(1381)								::Array< Float > c144 = c140->buffer->f;
HXDLIN(1381)								_hx_tmp30->moveTo(c143,c144->__get((c140->fPos + (int)1)));
            							}
            							else {
HXLINE(1385)								initStrokeX = c140->buffer->f->__get(c140->fPos);
HXLINE(1386)								::Array< Float > c145 = c140->buffer->f;
HXDLIN(1386)								initStrokeY = c145->__get((c140->fPos + (int)1));
            							}
            						}
            						break;
            						case (int)20: {
HXLINE(1537)							{
HXLINE(1537)								{
HXLINE(1537)									 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN(1537)									switch((int)(_hx_getEnumValueIndex(_g20))){
            										case (int)0: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data559 = data;
HXDLIN(1537)											data559->oPos = (data559->oPos + (int)2);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data560 = data;
HXDLIN(1537)											data560->bPos = (data560->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data561 = data;
HXDLIN(1537)											data561->iPos = (data561->iPos + (int)1);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data562 = data;
HXDLIN(1537)											data562->fPos = (data562->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data563 = data;
HXDLIN(1537)											data563->oPos = (data563->oPos + (int)4);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data564 = data;
HXDLIN(1537)											data564->iiPos = (data564->iiPos + (int)2);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data565 = data;
HXDLIN(1537)											data565->ffPos = (data565->ffPos + (int)1);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data566 = data;
HXDLIN(1537)											data566->fPos = (data566->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data567 = data;
HXDLIN(1537)											data567->oPos = (data567->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data568 = data;
HXDLIN(1537)											data568->fPos = (data568->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data569 = data;
HXDLIN(1537)											data569->fPos = (data569->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data570 = data;
HXDLIN(1537)											data570->fPos = (data570->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data571 = data;
HXDLIN(1537)											data571->fPos = (data571->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data572 = data;
HXDLIN(1537)											data572->oPos = (data572->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data573 = data;
HXDLIN(1537)											data573->fPos = (data573->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data574 = data;
HXDLIN(1537)											data574->fPos = (data574->fPos + (int)5);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data575 = data;
HXDLIN(1537)											data575->oPos = (data575->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data576 = data;
HXDLIN(1537)											data576->oPos = (data576->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data577 = data;
HXDLIN(1537)											data577->oPos = (data577->oPos + (int)2);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data578 = data;
HXDLIN(1537)											data578->bPos = (data578->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data579 = data;
HXDLIN(1537)											data579->oPos = (data579->oPos + (int)4);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data580 = data;
HXDLIN(1537)											data580->iiPos = (data580->iiPos + (int)2);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data581 = data;
HXDLIN(1537)											data581->ffPos = (data581->ffPos + (int)1);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data582 = data;
HXDLIN(1537)											data582->fPos = (data582->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data583 = data;
HXDLIN(1537)											data583->oPos = (data583->oPos + (int)4);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data584 = data;
HXDLIN(1537)											data584->iPos = (data584->iPos + (int)1);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data585 = data;
HXDLIN(1537)											data585->fPos = (data585->fPos + (int)2);
HXDLIN(1537)											 ::openfl::_internal::renderer::DrawCommandReader data586 = data;
HXDLIN(1537)											data586->bPos = (data586->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data587 = data;
HXDLIN(1537)											data587->fPos = (data587->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data588 = data;
HXDLIN(1537)											data588->fPos = (data588->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1537)											 ::openfl::_internal::renderer::DrawCommandReader data589 = data;
HXDLIN(1537)											data589->oPos = (data589->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1537)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN(1537)								 ::openfl::_internal::renderer::DrawCommandReader this19 = data;
            							}
HXLINE(1538)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->windingEvenOdd();
            						}
            						break;
            						case (int)21: {
HXLINE(1542)							{
HXLINE(1542)								{
HXLINE(1542)									 ::openfl::_internal::renderer::DrawCommandType _g21 = data->prev;
HXDLIN(1542)									switch((int)(_hx_getEnumValueIndex(_g21))){
            										case (int)0: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data590 = data;
HXDLIN(1542)											data590->oPos = (data590->oPos + (int)2);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data591 = data;
HXDLIN(1542)											data591->bPos = (data591->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data592 = data;
HXDLIN(1542)											data592->iPos = (data592->iPos + (int)1);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data593 = data;
HXDLIN(1542)											data593->fPos = (data593->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data594 = data;
HXDLIN(1542)											data594->oPos = (data594->oPos + (int)4);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data595 = data;
HXDLIN(1542)											data595->iiPos = (data595->iiPos + (int)2);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data596 = data;
HXDLIN(1542)											data596->ffPos = (data596->ffPos + (int)1);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data597 = data;
HXDLIN(1542)											data597->fPos = (data597->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data598 = data;
HXDLIN(1542)											data598->oPos = (data598->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data599 = data;
HXDLIN(1542)											data599->fPos = (data599->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data600 = data;
HXDLIN(1542)											data600->fPos = (data600->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data601 = data;
HXDLIN(1542)											data601->fPos = (data601->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data602 = data;
HXDLIN(1542)											data602->fPos = (data602->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data603 = data;
HXDLIN(1542)											data603->oPos = (data603->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data604 = data;
HXDLIN(1542)											data604->fPos = (data604->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data605 = data;
HXDLIN(1542)											data605->fPos = (data605->fPos + (int)5);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data606 = data;
HXDLIN(1542)											data606->oPos = (data606->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data607 = data;
HXDLIN(1542)											data607->oPos = (data607->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data608 = data;
HXDLIN(1542)											data608->oPos = (data608->oPos + (int)2);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data609 = data;
HXDLIN(1542)											data609->bPos = (data609->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data610 = data;
HXDLIN(1542)											data610->oPos = (data610->oPos + (int)4);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data611 = data;
HXDLIN(1542)											data611->iiPos = (data611->iiPos + (int)2);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data612 = data;
HXDLIN(1542)											data612->ffPos = (data612->ffPos + (int)1);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data613 = data;
HXDLIN(1542)											data613->fPos = (data613->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data614 = data;
HXDLIN(1542)											data614->oPos = (data614->oPos + (int)4);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data615 = data;
HXDLIN(1542)											data615->iPos = (data615->iPos + (int)1);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data616 = data;
HXDLIN(1542)											data616->fPos = (data616->fPos + (int)2);
HXDLIN(1542)											 ::openfl::_internal::renderer::DrawCommandReader data617 = data;
HXDLIN(1542)											data617->bPos = (data617->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data618 = data;
HXDLIN(1542)											data618->fPos = (data618->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data619 = data;
HXDLIN(1542)											data619->fPos = (data619->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1542)											 ::openfl::_internal::renderer::DrawCommandReader data620 = data;
HXDLIN(1542)											data620->oPos = (data620->oPos + (int)1);
            										}
            										break;
            										case (int)20: case (int)21: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1542)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN(1542)								 ::openfl::_internal::renderer::DrawCommandReader this20 = data;
            							}
HXLINE(1543)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->windingNonZero();
            						}
            						break;
            						default:{
HXLINE(1547)							{
HXLINE(1547)								 ::openfl::_internal::renderer::DrawCommandType _g22 = data->prev;
HXDLIN(1547)								switch((int)(_hx_getEnumValueIndex(_g22))){
            									case (int)0: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data621 = data;
HXDLIN(1547)										data621->oPos = (data621->oPos + (int)2);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data622 = data;
HXDLIN(1547)										data622->bPos = (data622->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data623 = data;
HXDLIN(1547)										data623->iPos = (data623->iPos + (int)1);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data624 = data;
HXDLIN(1547)										data624->fPos = (data624->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data625 = data;
HXDLIN(1547)										data625->oPos = (data625->oPos + (int)4);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data626 = data;
HXDLIN(1547)										data626->iiPos = (data626->iiPos + (int)2);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data627 = data;
HXDLIN(1547)										data627->ffPos = (data627->ffPos + (int)1);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data628 = data;
HXDLIN(1547)										data628->fPos = (data628->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data629 = data;
HXDLIN(1547)										data629->oPos = (data629->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data630 = data;
HXDLIN(1547)										data630->fPos = (data630->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data631 = data;
HXDLIN(1547)										data631->fPos = (data631->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data632 = data;
HXDLIN(1547)										data632->fPos = (data632->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data633 = data;
HXDLIN(1547)										data633->fPos = (data633->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data634 = data;
HXDLIN(1547)										data634->oPos = (data634->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data635 = data;
HXDLIN(1547)										data635->fPos = (data635->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data636 = data;
HXDLIN(1547)										data636->fPos = (data636->fPos + (int)5);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data637 = data;
HXDLIN(1547)										data637->oPos = (data637->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data638 = data;
HXDLIN(1547)										data638->oPos = (data638->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data639 = data;
HXDLIN(1547)										data639->oPos = (data639->oPos + (int)2);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data640 = data;
HXDLIN(1547)										data640->bPos = (data640->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data641 = data;
HXDLIN(1547)										data641->oPos = (data641->oPos + (int)4);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data642 = data;
HXDLIN(1547)										data642->iiPos = (data642->iiPos + (int)2);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data643 = data;
HXDLIN(1547)										data643->ffPos = (data643->ffPos + (int)1);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data644 = data;
HXDLIN(1547)										data644->fPos = (data644->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data645 = data;
HXDLIN(1547)										data645->oPos = (data645->oPos + (int)4);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data646 = data;
HXDLIN(1547)										data646->iPos = (data646->iPos + (int)1);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data647 = data;
HXDLIN(1547)										data647->fPos = (data647->fPos + (int)2);
HXDLIN(1547)										 ::openfl::_internal::renderer::DrawCommandReader data648 = data;
HXDLIN(1547)										data648->bPos = (data648->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data649 = data;
HXDLIN(1547)										data649->fPos = (data649->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data650 = data;
HXDLIN(1547)										data650->fPos = (data650->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1547)										 ::openfl::_internal::renderer::DrawCommandReader data651 = data;
HXDLIN(1547)										data651->oPos = (data651->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1547)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1553)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->get_length() > (int)0)) {
HXLINE(1555)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
            			}
HXLINE(1559)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->get_length() > (int)0)) {
HXLINE(1561)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
            			}
HXLINE(1565)			data->destroy();
HXLINE(1567)			graphics->_hx___bitmap->image->dirty = true;
HXLINE(1568)			graphics->_hx___bitmap->image->version++;
            		}
HXLINE(1572)		graphics->set___dirty(false);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,render,(void))

void CairoGraphics_obj::renderMask( ::openfl::display::Graphics graphics, ::openfl::display::CairoRenderer renderer){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1583_renderMask)
HXDLIN(1583)		if ((graphics->_hx___commands->get_length() != (int)0)) {
HXLINE(1585)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = renderer->cairo;
HXLINE(1587)			Float positionX = ((Float)0.0);
HXLINE(1588)			Float positionY = ((Float)0.0);
HXLINE(1590)			int offsetX = (int)0;
HXLINE(1591)			int offsetY = (int)0;
HXLINE(1593)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1595)			Float x;
HXDLIN(1595)			Float y;
HXDLIN(1595)			Float width;
HXDLIN(1595)			Float height;
HXDLIN(1595)			Float kappa = ((Float).5522848);
HXDLIN(1595)			Float ox;
HXDLIN(1595)			Float oy;
HXDLIN(1595)			Float xe;
HXDLIN(1595)			Float ye;
HXDLIN(1595)			Float xm;
HXDLIN(1595)			Float ym;
HXLINE(1597)			{
HXLINE(1597)				int _g = (int)0;
HXDLIN(1597)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1597)				while((_g < _g1->length)){
HXLINE(1597)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(1597)					_g = (_g + (int)1);
HXLINE(1599)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)4: {
HXLINE(1603)							{
HXLINE(1603)								 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(1603)								switch((int)(_hx_getEnumValueIndex(_g2))){
            									case (int)0: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(1603)										data1->oPos = (data1->oPos + (int)2);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(1603)										data2->bPos = (data2->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(1603)										data3->iPos = (data3->iPos + (int)1);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(1603)										data4->fPos = (data4->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(1603)										data5->oPos = (data5->oPos + (int)4);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(1603)										data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(1603)										data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(1603)										data8->fPos = (data8->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(1603)										data9->oPos = (data9->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(1603)										data10->fPos = (data10->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(1603)										data11->fPos = (data11->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(1603)										data12->fPos = (data12->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(1603)										data13->fPos = (data13->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(1603)										data14->oPos = (data14->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(1603)										data15->fPos = (data15->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(1603)										data16->fPos = (data16->fPos + (int)5);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(1603)										data17->oPos = (data17->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(1603)										data18->oPos = (data18->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(1603)										data19->oPos = (data19->oPos + (int)2);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(1603)										data20->bPos = (data20->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(1603)										data21->oPos = (data21->oPos + (int)4);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(1603)										data22->iiPos = (data22->iiPos + (int)2);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(1603)										data23->ffPos = (data23->ffPos + (int)1);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(1603)										data24->fPos = (data24->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(1603)										data25->oPos = (data25->oPos + (int)4);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(1603)										data26->iPos = (data26->iPos + (int)1);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(1603)										data27->fPos = (data27->fPos + (int)2);
HXDLIN(1603)										 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(1603)										data28->bPos = (data28->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(1603)										data29->fPos = (data29->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(1603)										data30->fPos = (data30->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1603)										 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(1603)										data31->oPos = (data31->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1603)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1603)							 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(1603)							 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE(1604)							 ::lime::graphics::cairo::Cairo _hx_tmp = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1604)							Float _hx_tmp1 = (c->buffer->f->__get(c->fPos) - offsetX);
HXDLIN(1604)							::Array< Float > c1 = c->buffer->f;
HXDLIN(1604)							Float _hx_tmp2 = (c1->__get((c->fPos + (int)1)) - offsetY);
HXDLIN(1604)							::Array< Float > c2 = c->buffer->f;
HXDLIN(1604)							Float _hx_tmp3 = (c2->__get((c->fPos + (int)2)) - offsetX);
HXDLIN(1604)							::Array< Float > c3 = c->buffer->f;
HXDLIN(1604)							Float _hx_tmp4 = (c3->__get((c->fPos + (int)3)) - offsetY);
HXDLIN(1604)							::Array< Float > c4 = c->buffer->f;
HXDLIN(1604)							Float _hx_tmp5 = (c4->__get((c->fPos + (int)4)) - offsetX);
HXDLIN(1604)							::Array< Float > c5 = c->buffer->f;
HXDLIN(1604)							_hx_tmp->curveTo(_hx_tmp1,_hx_tmp2,_hx_tmp3,_hx_tmp4,_hx_tmp5,(c5->__get((c->fPos + (int)5)) - offsetY));
HXLINE(1605)							::Array< Float > c6 = c->buffer->f;
HXDLIN(1605)							positionX = c6->__get((c->fPos + (int)4));
HXLINE(1606)							::Array< Float > c7 = c->buffer->f;
HXDLIN(1606)							positionY = c7->__get((c->fPos + (int)5));
            						}
            						break;
            						case (int)5: {
HXLINE(1610)							{
HXLINE(1610)								 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(1610)								switch((int)(_hx_getEnumValueIndex(_g3))){
            									case (int)0: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(1610)										data32->oPos = (data32->oPos + (int)2);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(1610)										data33->bPos = (data33->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(1610)										data34->iPos = (data34->iPos + (int)1);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(1610)										data35->fPos = (data35->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(1610)										data36->oPos = (data36->oPos + (int)4);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(1610)										data37->iiPos = (data37->iiPos + (int)2);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(1610)										data38->ffPos = (data38->ffPos + (int)1);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(1610)										data39->fPos = (data39->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(1610)										data40->oPos = (data40->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(1610)										data41->fPos = (data41->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(1610)										data42->fPos = (data42->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(1610)										data43->fPos = (data43->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(1610)										data44->fPos = (data44->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(1610)										data45->oPos = (data45->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(1610)										data46->fPos = (data46->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(1610)										data47->fPos = (data47->fPos + (int)5);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(1610)										data48->oPos = (data48->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(1610)										data49->oPos = (data49->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(1610)										data50->oPos = (data50->oPos + (int)2);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(1610)										data51->bPos = (data51->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(1610)										data52->oPos = (data52->oPos + (int)4);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(1610)										data53->iiPos = (data53->iiPos + (int)2);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(1610)										data54->ffPos = (data54->ffPos + (int)1);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(1610)										data55->fPos = (data55->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(1610)										data56->oPos = (data56->oPos + (int)4);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(1610)										data57->iPos = (data57->iPos + (int)1);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(1610)										data58->fPos = (data58->fPos + (int)2);
HXDLIN(1610)										 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(1610)										data59->bPos = (data59->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(1610)										data60->fPos = (data60->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(1610)										data61->fPos = (data61->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1610)										 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(1610)										data62->oPos = (data62->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1610)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1610)							 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(1610)							 ::openfl::_internal::renderer::DrawCommandReader c8 = this2;
HXLINE(1611)							Float _hx_tmp6 = (c8->buffer->f->__get(c8->fPos) - offsetX);
HXDLIN(1611)							::Array< Float > c9 = c8->buffer->f;
HXDLIN(1611)							Float _hx_tmp7 = (c9->__get((c8->fPos + (int)1)) - offsetY);
HXDLIN(1611)							::Array< Float > c10 = c8->buffer->f;
HXDLIN(1611)							Float _hx_tmp8 = (c10->__get((c8->fPos + (int)2)) - offsetX);
HXDLIN(1611)							::Array< Float > c11 = c8->buffer->f;
HXDLIN(1611)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(_hx_tmp6,_hx_tmp7,_hx_tmp8,(c11->__get((c8->fPos + (int)3)) - offsetY));
HXLINE(1612)							::Array< Float > c12 = c8->buffer->f;
HXDLIN(1612)							positionX = c12->__get((c8->fPos + (int)2));
HXLINE(1613)							::Array< Float > c13 = c8->buffer->f;
HXDLIN(1613)							positionY = c13->__get((c8->fPos + (int)3));
            						}
            						break;
            						case (int)6: {
HXLINE(1617)							{
HXLINE(1617)								 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(1617)								switch((int)(_hx_getEnumValueIndex(_g4))){
            									case (int)0: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(1617)										data63->oPos = (data63->oPos + (int)2);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(1617)										data64->bPos = (data64->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(1617)										data65->iPos = (data65->iPos + (int)1);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(1617)										data66->fPos = (data66->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(1617)										data67->oPos = (data67->oPos + (int)4);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(1617)										data68->iiPos = (data68->iiPos + (int)2);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(1617)										data69->ffPos = (data69->ffPos + (int)1);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(1617)										data70->fPos = (data70->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(1617)										data71->oPos = (data71->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(1617)										data72->fPos = (data72->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(1617)										data73->fPos = (data73->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(1617)										data74->fPos = (data74->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(1617)										data75->fPos = (data75->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(1617)										data76->oPos = (data76->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(1617)										data77->fPos = (data77->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(1617)										data78->fPos = (data78->fPos + (int)5);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(1617)										data79->oPos = (data79->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(1617)										data80->oPos = (data80->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(1617)										data81->oPos = (data81->oPos + (int)2);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(1617)										data82->bPos = (data82->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(1617)										data83->oPos = (data83->oPos + (int)4);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(1617)										data84->iiPos = (data84->iiPos + (int)2);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(1617)										data85->ffPos = (data85->ffPos + (int)1);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(1617)										data86->fPos = (data86->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(1617)										data87->oPos = (data87->oPos + (int)4);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(1617)										data88->iPos = (data88->iPos + (int)1);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(1617)										data89->fPos = (data89->fPos + (int)2);
HXDLIN(1617)										 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(1617)										data90->bPos = (data90->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(1617)										data91->fPos = (data91->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(1617)										data92->fPos = (data92->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1617)										 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(1617)										data93->oPos = (data93->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1617)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1617)							 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(1617)							 ::openfl::_internal::renderer::DrawCommandReader c14 = this3;
HXLINE(1618)							 ::lime::graphics::cairo::Cairo _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1618)							Float _hx_tmp10 = (c14->buffer->f->__get(c14->fPos) - offsetX);
HXDLIN(1618)							::Array< Float > c15 = c14->buffer->f;
HXDLIN(1618)							Float _hx_tmp11 = (c15->__get((c14->fPos + (int)1)) - offsetY);
HXDLIN(1618)							::Array< Float > c16 = c14->buffer->f;
HXDLIN(1618)							Float c17 = c16->__get((c14->fPos + (int)2));
HXDLIN(1618)							_hx_tmp9->arc(_hx_tmp10,_hx_tmp11,c17,(int)0,(::Math_obj::PI * (int)2));
            						}
            						break;
            						case (int)7: {
HXLINE(1622)							{
HXLINE(1622)								 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(1622)								switch((int)(_hx_getEnumValueIndex(_g5))){
            									case (int)0: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(1622)										data94->oPos = (data94->oPos + (int)2);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(1622)										data95->bPos = (data95->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(1622)										data96->iPos = (data96->iPos + (int)1);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(1622)										data97->fPos = (data97->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(1622)										data98->oPos = (data98->oPos + (int)4);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(1622)										data99->iiPos = (data99->iiPos + (int)2);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(1622)										data100->ffPos = (data100->ffPos + (int)1);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(1622)										data101->fPos = (data101->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(1622)										data102->oPos = (data102->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(1622)										data103->fPos = (data103->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(1622)										data104->fPos = (data104->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(1622)										data105->fPos = (data105->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(1622)										data106->fPos = (data106->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(1622)										data107->oPos = (data107->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(1622)										data108->fPos = (data108->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(1622)										data109->fPos = (data109->fPos + (int)5);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(1622)										data110->oPos = (data110->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(1622)										data111->oPos = (data111->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(1622)										data112->oPos = (data112->oPos + (int)2);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(1622)										data113->bPos = (data113->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(1622)										data114->oPos = (data114->oPos + (int)4);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(1622)										data115->iiPos = (data115->iiPos + (int)2);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(1622)										data116->ffPos = (data116->ffPos + (int)1);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(1622)										data117->fPos = (data117->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(1622)										data118->oPos = (data118->oPos + (int)4);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(1622)										data119->iPos = (data119->iPos + (int)1);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(1622)										data120->fPos = (data120->fPos + (int)2);
HXDLIN(1622)										 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(1622)										data121->bPos = (data121->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(1622)										data122->fPos = (data122->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(1622)										data123->fPos = (data123->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1622)										 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(1622)										data124->oPos = (data124->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1622)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1622)							 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(1622)							 ::openfl::_internal::renderer::DrawCommandReader c18 = this4;
HXLINE(1624)							x = c18->buffer->f->__get(c18->fPos);
HXLINE(1625)							::Array< Float > c19 = c18->buffer->f;
HXDLIN(1625)							y = c19->__get((c18->fPos + (int)1));
HXLINE(1626)							::Array< Float > c20 = c18->buffer->f;
HXDLIN(1626)							width = c20->__get((c18->fPos + (int)2));
HXLINE(1627)							::Array< Float > c21 = c18->buffer->f;
HXDLIN(1627)							height = c21->__get((c18->fPos + (int)3));
HXLINE(1629)							x = (x - offsetX);
HXLINE(1630)							y = (y - offsetY);
HXLINE(1632)							ox = (((Float)width / (Float)(int)2) * kappa);
HXLINE(1633)							oy = (((Float)height / (Float)(int)2) * kappa);
HXLINE(1634)							xe = (x + width);
HXLINE(1635)							ye = (y + height);
HXLINE(1636)							xm = (x + ((Float)width / (Float)(int)2));
HXLINE(1637)							ym = (y + ((Float)height / (Float)(int)2));
HXLINE(1641)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x,ym);
HXLINE(1642)							 ::lime::graphics::cairo::Cairo _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1642)							_hx_tmp12->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE(1643)							 ::lime::graphics::cairo::Cairo _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1643)							_hx_tmp13->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE(1644)							 ::lime::graphics::cairo::Cairo _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1644)							_hx_tmp14->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE(1645)							 ::lime::graphics::cairo::Cairo _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1645)							_hx_tmp15->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            						}
            						break;
            						case (int)9: {
HXLINE(1650)							{
HXLINE(1650)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(1650)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(1650)										data125->oPos = (data125->oPos + (int)2);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(1650)										data126->bPos = (data126->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(1650)										data127->iPos = (data127->iPos + (int)1);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(1650)										data128->fPos = (data128->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(1650)										data129->oPos = (data129->oPos + (int)4);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(1650)										data130->iiPos = (data130->iiPos + (int)2);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(1650)										data131->ffPos = (data131->ffPos + (int)1);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(1650)										data132->fPos = (data132->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(1650)										data133->oPos = (data133->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(1650)										data134->fPos = (data134->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(1650)										data135->fPos = (data135->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(1650)										data136->fPos = (data136->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(1650)										data137->fPos = (data137->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(1650)										data138->oPos = (data138->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(1650)										data139->fPos = (data139->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(1650)										data140->fPos = (data140->fPos + (int)5);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(1650)										data141->oPos = (data141->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(1650)										data142->oPos = (data142->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(1650)										data143->oPos = (data143->oPos + (int)2);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(1650)										data144->bPos = (data144->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(1650)										data145->oPos = (data145->oPos + (int)4);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(1650)										data146->iiPos = (data146->iiPos + (int)2);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(1650)										data147->ffPos = (data147->ffPos + (int)1);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(1650)										data148->fPos = (data148->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(1650)										data149->oPos = (data149->oPos + (int)4);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(1650)										data150->iPos = (data150->iPos + (int)1);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(1650)										data151->fPos = (data151->fPos + (int)2);
HXDLIN(1650)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(1650)										data152->bPos = (data152->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(1650)										data153->fPos = (data153->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(1650)										data154->fPos = (data154->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1650)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(1650)										data155->oPos = (data155->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1650)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1650)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(1650)							 ::openfl::_internal::renderer::DrawCommandReader c22 = this5;
HXLINE(1651)							 ::lime::graphics::cairo::Cairo _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1651)							Float _hx_tmp17 = (c22->buffer->f->__get(c22->fPos) - offsetX);
HXDLIN(1651)							::Array< Float > c23 = c22->buffer->f;
HXDLIN(1651)							Float _hx_tmp18 = (c23->__get((c22->fPos + (int)1)) - offsetY);
HXDLIN(1651)							::Array< Float > c24 = c22->buffer->f;
HXDLIN(1651)							Float c25 = c24->__get((c22->fPos + (int)2));
HXDLIN(1651)							::Array< Float > c26 = c22->buffer->f;
HXDLIN(1651)							_hx_tmp16->rectangle(_hx_tmp17,_hx_tmp18,c25,c26->__get((c22->fPos + (int)3)));
            						}
            						break;
            						case (int)10: {
HXLINE(1655)							{
HXLINE(1655)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(1655)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(1655)										data156->oPos = (data156->oPos + (int)2);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(1655)										data157->bPos = (data157->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(1655)										data158->iPos = (data158->iPos + (int)1);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(1655)										data159->fPos = (data159->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(1655)										data160->oPos = (data160->oPos + (int)4);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(1655)										data161->iiPos = (data161->iiPos + (int)2);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(1655)										data162->ffPos = (data162->ffPos + (int)1);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(1655)										data163->fPos = (data163->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(1655)										data164->oPos = (data164->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(1655)										data165->fPos = (data165->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(1655)										data166->fPos = (data166->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(1655)										data167->fPos = (data167->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(1655)										data168->fPos = (data168->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(1655)										data169->oPos = (data169->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(1655)										data170->fPos = (data170->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(1655)										data171->fPos = (data171->fPos + (int)5);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(1655)										data172->oPos = (data172->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(1655)										data173->oPos = (data173->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(1655)										data174->oPos = (data174->oPos + (int)2);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(1655)										data175->bPos = (data175->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(1655)										data176->oPos = (data176->oPos + (int)4);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(1655)										data177->iiPos = (data177->iiPos + (int)2);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(1655)										data178->ffPos = (data178->ffPos + (int)1);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(1655)										data179->fPos = (data179->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(1655)										data180->oPos = (data180->oPos + (int)4);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(1655)										data181->iPos = (data181->iPos + (int)1);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(1655)										data182->fPos = (data182->fPos + (int)2);
HXDLIN(1655)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(1655)										data183->bPos = (data183->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(1655)										data184->fPos = (data184->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(1655)										data185->fPos = (data185->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1655)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(1655)										data186->oPos = (data186->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1655)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1655)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(1655)							 ::openfl::_internal::renderer::DrawCommandReader c27 = this6;
HXLINE(1656)							Float _hx_tmp19 = (c27->buffer->f->__get(c27->fPos) - offsetX);
HXDLIN(1656)							::Array< Float > c28 = c27->buffer->f;
HXDLIN(1656)							Float _hx_tmp20 = (c28->__get((c27->fPos + (int)1)) - offsetY);
HXDLIN(1656)							::Array< Float > c29 = c27->buffer->f;
HXDLIN(1656)							Float c30 = c29->__get((c27->fPos + (int)2));
HXDLIN(1656)							::Array< Float > c31 = c27->buffer->f;
HXDLIN(1656)							Float c32 = c31->__get((c27->fPos + (int)3));
HXDLIN(1656)							::Array< Float > c33 = c27->buffer->f;
HXDLIN(1656)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::drawRoundRect(_hx_tmp19,_hx_tmp20,c30,c32,c33->__get((c27->fPos + (int)4)),c27->buffer->o->__get(c27->oPos));
            						}
            						break;
            						case (int)17: {
HXLINE(1660)							{
HXLINE(1660)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(1660)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(1660)										data187->oPos = (data187->oPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(1660)										data188->bPos = (data188->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(1660)										data189->iPos = (data189->iPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(1660)										data190->fPos = (data190->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(1660)										data191->oPos = (data191->oPos + (int)4);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(1660)										data192->iiPos = (data192->iiPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(1660)										data193->ffPos = (data193->ffPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(1660)										data194->fPos = (data194->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(1660)										data195->oPos = (data195->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(1660)										data196->fPos = (data196->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(1660)										data197->fPos = (data197->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(1660)										data198->fPos = (data198->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(1660)										data199->fPos = (data199->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(1660)										data200->oPos = (data200->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(1660)										data201->fPos = (data201->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(1660)										data202->fPos = (data202->fPos + (int)5);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(1660)										data203->oPos = (data203->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(1660)										data204->oPos = (data204->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(1660)										data205->oPos = (data205->oPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(1660)										data206->bPos = (data206->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(1660)										data207->oPos = (data207->oPos + (int)4);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(1660)										data208->iiPos = (data208->iiPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(1660)										data209->ffPos = (data209->ffPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(1660)										data210->fPos = (data210->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(1660)										data211->oPos = (data211->oPos + (int)4);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(1660)										data212->iPos = (data212->iPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(1660)										data213->fPos = (data213->fPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(1660)										data214->bPos = (data214->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(1660)										data215->fPos = (data215->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(1660)										data216->fPos = (data216->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(1660)										data217->oPos = (data217->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1660)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1660)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(1660)							 ::openfl::_internal::renderer::DrawCommandReader c34 = this7;
HXLINE(1661)							 ::lime::graphics::cairo::Cairo _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1661)							Float _hx_tmp22 = (c34->buffer->f->__get(c34->fPos) - offsetX);
HXDLIN(1661)							::Array< Float > c35 = c34->buffer->f;
HXDLIN(1661)							_hx_tmp21->lineTo(_hx_tmp22,(c35->__get((c34->fPos + (int)1)) - offsetY));
HXLINE(1662)							positionX = c34->buffer->f->__get(c34->fPos);
HXLINE(1663)							::Array< Float > c36 = c34->buffer->f;
HXDLIN(1663)							positionY = c36->__get((c34->fPos + (int)1));
            						}
            						break;
            						case (int)18: {
HXLINE(1667)							{
HXLINE(1667)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(1667)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(1667)										data218->oPos = (data218->oPos + (int)2);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(1667)										data219->bPos = (data219->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(1667)										data220->iPos = (data220->iPos + (int)1);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(1667)										data221->fPos = (data221->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(1667)										data222->oPos = (data222->oPos + (int)4);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(1667)										data223->iiPos = (data223->iiPos + (int)2);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(1667)										data224->ffPos = (data224->ffPos + (int)1);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(1667)										data225->fPos = (data225->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(1667)										data226->oPos = (data226->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(1667)										data227->fPos = (data227->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(1667)										data228->fPos = (data228->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(1667)										data229->fPos = (data229->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(1667)										data230->fPos = (data230->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(1667)										data231->oPos = (data231->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(1667)										data232->fPos = (data232->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(1667)										data233->fPos = (data233->fPos + (int)5);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(1667)										data234->oPos = (data234->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(1667)										data235->oPos = (data235->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(1667)										data236->oPos = (data236->oPos + (int)2);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(1667)										data237->bPos = (data237->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(1667)										data238->oPos = (data238->oPos + (int)4);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(1667)										data239->iiPos = (data239->iiPos + (int)2);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(1667)										data240->ffPos = (data240->ffPos + (int)1);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(1667)										data241->fPos = (data241->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(1667)										data242->oPos = (data242->oPos + (int)4);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(1667)										data243->iPos = (data243->iPos + (int)1);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(1667)										data244->fPos = (data244->fPos + (int)2);
HXDLIN(1667)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(1667)										data245->bPos = (data245->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(1667)										data246->fPos = (data246->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(1667)										data247->fPos = (data247->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1667)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(1667)										data248->oPos = (data248->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1667)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1667)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(1667)							 ::openfl::_internal::renderer::DrawCommandReader c37 = this8;
HXLINE(1668)							 ::lime::graphics::cairo::Cairo _hx_tmp23 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1668)							Float _hx_tmp24 = (c37->buffer->f->__get(c37->fPos) - offsetX);
HXDLIN(1668)							::Array< Float > c38 = c37->buffer->f;
HXDLIN(1668)							_hx_tmp23->moveTo(_hx_tmp24,(c38->__get((c37->fPos + (int)1)) - offsetY));
HXLINE(1669)							positionX = c37->buffer->f->__get(c37->fPos);
HXLINE(1670)							::Array< Float > c39 = c37->buffer->f;
HXDLIN(1670)							positionY = c39->__get((c37->fPos + (int)1));
            						}
            						break;
            						default:{
HXLINE(1674)							{
HXLINE(1674)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(1674)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(1674)										data249->oPos = (data249->oPos + (int)2);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(1674)										data250->bPos = (data250->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(1674)										data251->iPos = (data251->iPos + (int)1);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(1674)										data252->fPos = (data252->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(1674)										data253->oPos = (data253->oPos + (int)4);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(1674)										data254->iiPos = (data254->iiPos + (int)2);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(1674)										data255->ffPos = (data255->ffPos + (int)1);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(1674)										data256->fPos = (data256->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(1674)										data257->oPos = (data257->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(1674)										data258->fPos = (data258->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(1674)										data259->fPos = (data259->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(1674)										data260->fPos = (data260->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(1674)										data261->fPos = (data261->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN(1674)										data262->oPos = (data262->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN(1674)										data263->fPos = (data263->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN(1674)										data264->fPos = (data264->fPos + (int)5);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN(1674)										data265->oPos = (data265->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN(1674)										data266->oPos = (data266->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN(1674)										data267->oPos = (data267->oPos + (int)2);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN(1674)										data268->bPos = (data268->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN(1674)										data269->oPos = (data269->oPos + (int)4);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN(1674)										data270->iiPos = (data270->iiPos + (int)2);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN(1674)										data271->ffPos = (data271->ffPos + (int)1);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN(1674)										data272->fPos = (data272->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN(1674)										data273->oPos = (data273->oPos + (int)4);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN(1674)										data274->iPos = (data274->iPos + (int)1);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN(1674)										data275->fPos = (data275->fPos + (int)2);
HXDLIN(1674)										 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN(1674)										data276->bPos = (data276->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN(1674)										data277->fPos = (data277->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN(1674)										data278->fPos = (data278->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1674)										 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN(1674)										data279->oPos = (data279->oPos + (int)1);
            									}
            									break;
            									case (int)20: case (int)21: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1674)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1680)			data->destroy();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,renderMask,(void))


CairoGraphics_obj::CairoGraphics_obj()
{
}

bool CairoGraphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { outValue = ( SIN45 ); return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { outValue = ( TAN22 ); return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { outValue = ( cairo ); return true; }
		if (HX_FIELD_EQ(inName,"isCCW") ) { outValue = isCCW_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { outValue = ( bounds ); return true; }
		if (HX_FIELD_EQ(inName,"render") ) { outValue = render_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { outValue = ( hasFill ); return true; }
		if (HX_FIELD_EQ(inName,"endFill") ) { outValue = endFill_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hitTest") ) { outValue = hitTest_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { outValue = ( graphics ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { outValue = ( hasStroke ); return true; }
		if (HX_FIELD_EQ(inName,"closePath") ) { outValue = closePath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"endStroke") ) { outValue = endStroke_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { outValue = ( bitmapFill ); return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { outValue = ( hitTesting ); return true; }
		if (HX_FIELD_EQ(inName,"worldAlpha") ) { outValue = ( worldAlpha ); return true; }
		if (HX_FIELD_EQ(inName,"renderMask") ) { outValue = renderMask_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { outValue = ( fillPattern ); return true; }
		if (HX_FIELD_EQ(inName,"tempMatrix3") ) { outValue = ( tempMatrix3 ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { outValue = ( bitmapRepeat ); return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { outValue = ( fillCommands ); return true; }
		if (HX_FIELD_EQ(inName,"normalizeUVT") ) { outValue = normalizeUVT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"playCommands") ) { outValue = playCommands_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { outValue = ( pendingMatrix ); return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { outValue = ( strokePattern ); return true; }
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { outValue = drawRoundRect_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { outValue = ( allowSmoothing ); return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { outValue = ( strokeCommands ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"quadraticCurveTo") ) { outValue = quadraticCurveTo_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { outValue = ( fillPatternMatrix ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createImagePattern") ) { outValue = createImagePattern_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { outValue = ( inversePendingMatrix ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"createGradientPattern") ) { outValue = createGradientPattern_dyn(); return true; }
	}
	return false;
}

bool CairoGraphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { SIN45=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { TAN22=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { cairo=ioValue.Cast<  ::lime::graphics::cairo::Cairo >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { bounds=ioValue.Cast<  ::openfl::geom::Rectangle >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { hasFill=ioValue.Cast< bool >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { graphics=ioValue.Cast<  ::openfl::display::Graphics >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { hasStroke=ioValue.Cast< bool >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { bitmapFill=ioValue.Cast<  ::openfl::display::BitmapData >(); return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { hitTesting=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"worldAlpha") ) { worldAlpha=ioValue.Cast< Float >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { fillPattern=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"tempMatrix3") ) { tempMatrix3=ioValue.Cast<  ::lime::math::Matrix3 >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { bitmapRepeat=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { fillCommands=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { pendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { strokePattern=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { allowSmoothing=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { strokeCommands=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { fillPatternMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { inversePendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CairoGraphics_obj_sMemberStorageInfo = 0;
static hx::StaticInfo CairoGraphics_obj_sStaticStorageInfo[] = {
	{hx::fsFloat,(void *) &CairoGraphics_obj::SIN45,HX_HCSTRING("SIN45","\x79","\x16","\xbe","\xfa")},
	{hx::fsFloat,(void *) &CairoGraphics_obj::TAN22,HX_HCSTRING("TAN22","\x41","\xf4","\xda","\x88")},
	{hx::fsBool,(void *) &CairoGraphics_obj::allowSmoothing,HX_HCSTRING("allowSmoothing","\xab","\xb7","\x66","\x68")},
	{hx::fsObject /*::openfl::display::BitmapData*/ ,(void *) &CairoGraphics_obj::bitmapFill,HX_HCSTRING("bitmapFill","\x12","\x2e","\x19","\x35")},
	{hx::fsBool,(void *) &CairoGraphics_obj::bitmapRepeat,HX_HCSTRING("bitmapRepeat","\xaa","\x38","\x9c","\x11")},
	{hx::fsObject /*::openfl::geom::Rectangle*/ ,(void *) &CairoGraphics_obj::bounds,HX_HCSTRING("bounds","\x75","\x86","\x1d","\x66")},
	{hx::fsObject /*::lime::graphics::cairo::Cairo*/ ,(void *) &CairoGraphics_obj::cairo,HX_HCSTRING("cairo","\x88","\x30","\x19","\x41")},
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &CairoGraphics_obj::fillCommands,HX_HCSTRING("fillCommands","\x6b","\xf6","\xc9","\xc2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CairoGraphics_obj::fillPattern,HX_HCSTRING("fillPattern","\x0d","\x86","\x12","\x35")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::fillPatternMatrix,HX_HCSTRING("fillPatternMatrix","\x2e","\xb8","\xae","\x97")},
	{hx::fsObject /*::openfl::display::Graphics*/ ,(void *) &CairoGraphics_obj::graphics,HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hasFill,HX_HCSTRING("hasFill","\xfd","\xee","\xff","\x12")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hasStroke,HX_HCSTRING("hasStroke","\xb2","\x66","\x1d","\x52")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hitTesting,HX_HCSTRING("hitTesting","\xbd","\x65","\x48","\x19")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::inversePendingMatrix,HX_HCSTRING("inversePendingMatrix","\x28","\x14","\x8c","\xbb")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::pendingMatrix,HX_HCSTRING("pendingMatrix","\xf8","\x9d","\x96","\xb5")},
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &CairoGraphics_obj::strokeCommands,HX_HCSTRING("strokeCommands","\xa0","\x98","\x2a","\x67")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CairoGraphics_obj::strokePattern,HX_HCSTRING("strokePattern","\x78","\xe1","\x21","\x7e")},
	{hx::fsObject /*::lime::math::Matrix3*/ ,(void *) &CairoGraphics_obj::tempMatrix3,HX_HCSTRING("tempMatrix3","\x1e","\xf2","\xbd","\x79")},
	{hx::fsFloat,(void *) &CairoGraphics_obj::worldAlpha,HX_HCSTRING("worldAlpha","\xac","\x57","\x43","\x8d")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void CairoGraphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::tempMatrix3,"tempMatrix3");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::worldAlpha,"worldAlpha");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CairoGraphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::tempMatrix3,"tempMatrix3");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::worldAlpha,"worldAlpha");
};

#endif

hx::Class CairoGraphics_obj::__mClass;

static ::String CairoGraphics_obj_sStaticFields[] = {
	HX_HCSTRING("SIN45","\x79","\x16","\xbe","\xfa"),
	HX_HCSTRING("TAN22","\x41","\xf4","\xda","\x88"),
	HX_HCSTRING("allowSmoothing","\xab","\xb7","\x66","\x68"),
	HX_HCSTRING("bitmapFill","\x12","\x2e","\x19","\x35"),
	HX_HCSTRING("bitmapRepeat","\xaa","\x38","\x9c","\x11"),
	HX_HCSTRING("bounds","\x75","\x86","\x1d","\x66"),
	HX_HCSTRING("cairo","\x88","\x30","\x19","\x41"),
	HX_HCSTRING("fillCommands","\x6b","\xf6","\xc9","\xc2"),
	HX_HCSTRING("fillPattern","\x0d","\x86","\x12","\x35"),
	HX_HCSTRING("fillPatternMatrix","\x2e","\xb8","\xae","\x97"),
	HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12"),
	HX_HCSTRING("hasFill","\xfd","\xee","\xff","\x12"),
	HX_HCSTRING("hasStroke","\xb2","\x66","\x1d","\x52"),
	HX_HCSTRING("hitTesting","\xbd","\x65","\x48","\x19"),
	HX_HCSTRING("inversePendingMatrix","\x28","\x14","\x8c","\xbb"),
	HX_HCSTRING("pendingMatrix","\xf8","\x9d","\x96","\xb5"),
	HX_HCSTRING("strokeCommands","\xa0","\x98","\x2a","\x67"),
	HX_HCSTRING("strokePattern","\x78","\xe1","\x21","\x7e"),
	HX_HCSTRING("tempMatrix3","\x1e","\xf2","\xbd","\x79"),
	HX_HCSTRING("worldAlpha","\xac","\x57","\x43","\x8d"),
	HX_HCSTRING("closePath","\x7d","\x65","\x20","\x14"),
	HX_HCSTRING("createGradientPattern","\xa4","\xee","\x44","\xf6"),
	HX_HCSTRING("createImagePattern","\x51","\xbd","\x5d","\xfb"),
	HX_HCSTRING("drawRoundRect","\xee","\xc3","\xaa","\xe2"),
	HX_HCSTRING("endFill","\xfe","\x87","\xe0","\x25"),
	HX_HCSTRING("endStroke","\xf3","\x01","\x17","\x51"),
	HX_HCSTRING("hitTest","\x45","\x60","\x7f","\xe2"),
	HX_HCSTRING("isCCW","\x0d","\x84","\x49","\xc1"),
	HX_HCSTRING("normalizeUVT","\x66","\x09","\x2f","\x47"),
	HX_HCSTRING("playCommands","\xdc","\xae","\xee","\x49"),
	HX_HCSTRING("quadraticCurveTo","\x12","\x48","\xc3","\x82"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	HX_HCSTRING("renderMask","\x62","\x3b","\x60","\xe5"),
	::String(null())
};

void CairoGraphics_obj::__register()
{
	hx::Object *dummy = new CairoGraphics_obj;
	CairoGraphics_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.cairo.CairoGraphics","\x72","\x72","\xef","\x3c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CairoGraphics_obj::__GetStatic;
	__mClass->mSetStaticField = &CairoGraphics_obj::__SetStatic;
	__mClass->mMarkFunc = CairoGraphics_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CairoGraphics_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CairoGraphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CairoGraphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CairoGraphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CairoGraphics_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CairoGraphics_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_46_boot)
HXDLIN(  46)		SIN45 = ((Float)0.70710678118654752440084436210485);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_47_boot)
HXDLIN(  47)		TAN22 = ((Float)0.4142135623730950488016887242097);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_54_boot)
HXDLIN(  54)		fillCommands =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_63_boot)
HXDLIN(  63)		strokeCommands =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_65_boot)
HXDLIN(  65)		tempMatrix3 =  ::lime::math::Matrix3_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
            	}
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace cairo
