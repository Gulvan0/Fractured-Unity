// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandType
#include <openfl/_internal/renderer/DrawCommandType.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_ShaderBuffer
#include <openfl/_internal/renderer/ShaderBuffer.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_44_new,"openfl._internal.renderer.DrawCommandBuffer","new",0xdc2c151e,"openfl._internal.renderer.DrawCommandBuffer.new","openfl/_internal/renderer/DrawCommandBuffer.hx",44,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_66_append,"openfl._internal.renderer.DrawCommandBuffer","append",0x1b14a7dc,"openfl._internal.renderer.DrawCommandBuffer.append","openfl/_internal/renderer/DrawCommandBuffer.hx",66,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_122_beginBitmapFill,"openfl._internal.renderer.DrawCommandBuffer","beginBitmapFill",0x90133359,"openfl._internal.renderer.DrawCommandBuffer.beginBitmapFill","openfl/_internal/renderer/DrawCommandBuffer.hx",122,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_134_beginFill,"openfl._internal.renderer.DrawCommandBuffer","beginFill",0x6ae7148a,"openfl._internal.renderer.DrawCommandBuffer.beginFill","openfl/_internal/renderer/DrawCommandBuffer.hx",134,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_145_beginGradientFill,"openfl._internal.renderer.DrawCommandBuffer","beginGradientFill",0x7d0b119a,"openfl._internal.renderer.DrawCommandBuffer.beginGradientFill","openfl/_internal/renderer/DrawCommandBuffer.hx",145,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_162_beginShaderFill,"openfl._internal.renderer.DrawCommandBuffer","beginShaderFill",0x8d4eb58f,"openfl._internal.renderer.DrawCommandBuffer.beginShaderFill","openfl/_internal/renderer/DrawCommandBuffer.hx",162,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_172_clear,"openfl._internal.renderer.DrawCommandBuffer","clear",0xfe5ce1cb,"openfl._internal.renderer.DrawCommandBuffer.clear","openfl/_internal/renderer/DrawCommandBuffer.hx",172,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_188_copy,"openfl._internal.renderer.DrawCommandBuffer","copy",0xc3289d37,"openfl._internal.renderer.DrawCommandBuffer.copy","openfl/_internal/renderer/DrawCommandBuffer.hx",188,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_197_cubicCurveTo,"openfl._internal.renderer.DrawCommandBuffer","cubicCurveTo",0x96d43b62,"openfl._internal.renderer.DrawCommandBuffer.cubicCurveTo","openfl/_internal/renderer/DrawCommandBuffer.hx",197,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_211_curveTo,"openfl._internal.renderer.DrawCommandBuffer","curveTo",0x1bf4dbc8,"openfl._internal.renderer.DrawCommandBuffer.curveTo","openfl/_internal/renderer/DrawCommandBuffer.hx",211,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_224_destroy,"openfl._internal.renderer.DrawCommandBuffer","destroy",0x71f2a8b8,"openfl._internal.renderer.DrawCommandBuffer.destroy","openfl/_internal/renderer/DrawCommandBuffer.hx",224,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_240_drawCircle,"openfl._internal.renderer.DrawCommandBuffer","drawCircle",0x40b9dc36,"openfl._internal.renderer.DrawCommandBuffer.drawCircle","openfl/_internal/renderer/DrawCommandBuffer.hx",240,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_252_drawEllipse,"openfl._internal.renderer.DrawCommandBuffer","drawEllipse",0x77b6b7f8,"openfl._internal.renderer.DrawCommandBuffer.drawEllipse","openfl/_internal/renderer/DrawCommandBuffer.hx",252,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_265_drawQuads,"openfl._internal.renderer.DrawCommandBuffer","drawQuads",0x04441266,"openfl._internal.renderer.DrawCommandBuffer.drawQuads","openfl/_internal/renderer/DrawCommandBuffer.hx",265,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_277_drawRect,"openfl._internal.renderer.DrawCommandBuffer","drawRect",0xd190c1ca,"openfl._internal.renderer.DrawCommandBuffer.drawRect","openfl/_internal/renderer/DrawCommandBuffer.hx",277,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_289_drawRoundRect,"openfl._internal.renderer.DrawCommandBuffer","drawRoundRect",0xb613a22c,"openfl._internal.renderer.DrawCommandBuffer.drawRoundRect","openfl/_internal/renderer/DrawCommandBuffer.hx",289,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_304_drawTriangles,"openfl._internal.renderer.DrawCommandBuffer","drawTriangles",0xb1d12245,"openfl._internal.renderer.DrawCommandBuffer.drawTriangles","openfl/_internal/renderer/DrawCommandBuffer.hx",304,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_317_endFill,"openfl._internal.renderer.DrawCommandBuffer","endFill",0x734d03bc,"openfl._internal.renderer.DrawCommandBuffer.endFill","openfl/_internal/renderer/DrawCommandBuffer.hx",317,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_326_lineBitmapStyle,"openfl._internal.renderer.DrawCommandBuffer","lineBitmapStyle",0x6b2ca8ec,"openfl._internal.renderer.DrawCommandBuffer.lineBitmapStyle","openfl/_internal/renderer/DrawCommandBuffer.hx",326,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_339_lineGradientStyle,"openfl._internal.renderer.DrawCommandBuffer","lineGradientStyle",0x10f9f9cb,"openfl._internal.renderer.DrawCommandBuffer.lineGradientStyle","openfl/_internal/renderer/DrawCommandBuffer.hx",339,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_356_lineStyle,"openfl._internal.renderer.DrawCommandBuffer","lineStyle",0xa96a0fdb,"openfl._internal.renderer.DrawCommandBuffer.lineStyle","openfl/_internal/renderer/DrawCommandBuffer.hx",356,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_373_lineTo,"openfl._internal.renderer.DrawCommandBuffer","lineTo",0x77e10c91,"openfl._internal.renderer.DrawCommandBuffer.lineTo","openfl/_internal/renderer/DrawCommandBuffer.hx",373,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_384_moveTo,"openfl._internal.renderer.DrawCommandBuffer","moveTo",0x57ed98ee,"openfl._internal.renderer.DrawCommandBuffer.moveTo","openfl/_internal/renderer/DrawCommandBuffer.hx",384,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_397_prepareWrite,"openfl._internal.renderer.DrawCommandBuffer","prepareWrite",0xac4d955a,"openfl._internal.renderer.DrawCommandBuffer.prepareWrite","openfl/_internal/renderer/DrawCommandBuffer.hx",397,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_414_overrideMatrix,"openfl._internal.renderer.DrawCommandBuffer","overrideMatrix",0xe20325af,"openfl._internal.renderer.DrawCommandBuffer.overrideMatrix","openfl/_internal/renderer/DrawCommandBuffer.hx",414,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_424_windingEvenOdd,"openfl._internal.renderer.DrawCommandBuffer","windingEvenOdd",0x3363f4bd,"openfl._internal.renderer.DrawCommandBuffer.windingEvenOdd","openfl/_internal/renderer/DrawCommandBuffer.hx",424,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_433_windingNonZero,"openfl._internal.renderer.DrawCommandBuffer","windingNonZero",0xfe994cdd,"openfl._internal.renderer.DrawCommandBuffer.windingNonZero","openfl/_internal/renderer/DrawCommandBuffer.hx",433,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_451_get_length,"openfl._internal.renderer.DrawCommandBuffer","get_length",0x3877f3b1,"openfl._internal.renderer.DrawCommandBuffer.get_length","openfl/_internal/renderer/DrawCommandBuffer.hx",451,0xbc8e6e11)
HX_LOCAL_STACK_FRAME(_hx_pos_d2863eb1aba9f5f0_28_boot,"openfl._internal.renderer.DrawCommandBuffer","boot",0xc27f65b4,"openfl._internal.renderer.DrawCommandBuffer.boot","openfl/_internal/renderer/DrawCommandBuffer.hx",28,0xbc8e6e11)
namespace openfl{
namespace _internal{
namespace renderer{

void DrawCommandBuffer_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_44_new)
HXDLIN(  44)		if (hx::IsNull( ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty )) {
HXLINE(  46)			this->types = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  48)			this->b = ::Array_obj< bool >::__new(0);
HXLINE(  49)			this->i = ::Array_obj< int >::__new(0);
HXLINE(  50)			this->f = ::Array_obj< Float >::__new(0);
HXLINE(  51)			this->o = ::cpp::VirtualArray_obj::__new(0);
HXLINE(  52)			this->ff = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  53)			this->ii = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  55)			this->copyOnWrite = true;
            		}
            		else {
HXLINE(  59)			this->clear();
            		}
            	}

Dynamic DrawCommandBuffer_obj::__CreateEmpty() { return new DrawCommandBuffer_obj; }

void *DrawCommandBuffer_obj::_hx_vtable = 0;

Dynamic DrawCommandBuffer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DrawCommandBuffer_obj > _hx_result = new DrawCommandBuffer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DrawCommandBuffer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5daef738;
}

 ::openfl::_internal::renderer::DrawCommandBuffer DrawCommandBuffer_obj::append( ::openfl::_internal::renderer::DrawCommandBuffer other){
            	HX_GC_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_66_append)
HXLINE(  68)		if ((this->get_length() == (int)0)) {
HXLINE(  70)			this->types = other->types;
HXLINE(  71)			this->b = other->b;
HXLINE(  72)			this->i = other->i;
HXLINE(  73)			this->f = other->f;
HXLINE(  74)			this->o = other->o;
HXLINE(  75)			this->ff = other->ff;
HXLINE(  76)			this->ii = other->ii;
HXLINE(  77)			this->copyOnWrite = (other->copyOnWrite = true);
HXLINE(  79)			return other;
            		}
HXLINE(  83)		 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,other);
HXLINE(  85)		{
HXLINE(  85)			int _g = (int)0;
HXDLIN(  85)			::Array< ::Dynamic> _g1 = other->types;
HXDLIN(  85)			while((_g < _g1->length)){
HXLINE(  85)				 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(  85)				_g = (_g + (int)1);
HXLINE(  87)				switch((int)(_hx_getEnumValueIndex(type))){
            					case (int)0: {
HXLINE(  89)						{
HXLINE(  89)							 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(  89)							switch((int)(_hx_getEnumValueIndex(_g2))){
            								case (int)0: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(  89)									data1->oPos = (data1->oPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(  89)									data2->bPos = (data2->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(  89)									data3->iPos = (data3->iPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(  89)									data4->fPos = (data4->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(  89)									data5->oPos = (data5->oPos + (int)4);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(  89)									data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(  89)									data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(  89)									data8->fPos = (data8->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(  89)									data9->oPos = (data9->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(  89)									data10->fPos = (data10->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(  89)									data11->fPos = (data11->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(  89)									data12->fPos = (data12->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(  89)									data13->fPos = (data13->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(  89)									data14->oPos = (data14->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(  89)									data15->fPos = (data15->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(  89)									data16->fPos = (data16->fPos + (int)5);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(  89)									data17->oPos = (data17->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(  89)									data18->oPos = (data18->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(  89)									data19->oPos = (data19->oPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(  89)									data20->bPos = (data20->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(  89)									data21->oPos = (data21->oPos + (int)4);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(  89)									data22->iiPos = (data22->iiPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(  89)									data23->ffPos = (data23->ffPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(  89)									data24->fPos = (data24->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(  89)									data25->oPos = (data25->oPos + (int)4);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(  89)									data26->iPos = (data26->iPos + (int)1);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(  89)									data27->fPos = (data27->fPos + (int)2);
HXDLIN(  89)									 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(  89)									data28->bPos = (data28->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(  89)									data29->fPos = (data29->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(  89)									data30->fPos = (data30->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  89)									 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(  89)									data31->oPos = (data31->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  89)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN(  89)						 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(  89)						 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXDLIN(  89)						 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(  89)						::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN(  89)						 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN(  89)						bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN(  89)						::Array< bool > c5 = c->buffer->b;
HXDLIN(  89)						this->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
            					}
            					break;
            					case (int)1: {
HXLINE(  90)						{
HXLINE(  90)							 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(  90)							switch((int)(_hx_getEnumValueIndex(_g3))){
            								case (int)0: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(  90)									data32->oPos = (data32->oPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(  90)									data33->bPos = (data33->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(  90)									data34->iPos = (data34->iPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(  90)									data35->fPos = (data35->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(  90)									data36->oPos = (data36->oPos + (int)4);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(  90)									data37->iiPos = (data37->iiPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(  90)									data38->ffPos = (data38->ffPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(  90)									data39->fPos = (data39->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(  90)									data40->oPos = (data40->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(  90)									data41->fPos = (data41->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(  90)									data42->fPos = (data42->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(  90)									data43->fPos = (data43->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(  90)									data44->fPos = (data44->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(  90)									data45->oPos = (data45->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(  90)									data46->fPos = (data46->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(  90)									data47->fPos = (data47->fPos + (int)5);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(  90)									data48->oPos = (data48->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(  90)									data49->oPos = (data49->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(  90)									data50->oPos = (data50->oPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(  90)									data51->bPos = (data51->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(  90)									data52->oPos = (data52->oPos + (int)4);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(  90)									data53->iiPos = (data53->iiPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(  90)									data54->ffPos = (data54->ffPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(  90)									data55->fPos = (data55->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(  90)									data56->oPos = (data56->oPos + (int)4);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(  90)									data57->iPos = (data57->iPos + (int)1);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(  90)									data58->fPos = (data58->fPos + (int)2);
HXDLIN(  90)									 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(  90)									data59->bPos = (data59->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(  90)									data60->fPos = (data60->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(  90)									data61->fPos = (data61->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  90)									 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(  90)									data62->oPos = (data62->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  90)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN(  90)						 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(  90)						 ::openfl::_internal::renderer::DrawCommandReader c6 = this2;
HXDLIN(  90)						int c7 = c6->buffer->i->__get(c6->iPos);
HXDLIN(  90)						this->beginFill(c7,c6->buffer->f->__get(c6->fPos));
            					}
            					break;
            					case (int)2: {
HXLINE(  91)						{
HXLINE(  91)							 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(  91)							switch((int)(_hx_getEnumValueIndex(_g4))){
            								case (int)0: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(  91)									data63->oPos = (data63->oPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(  91)									data64->bPos = (data64->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(  91)									data65->iPos = (data65->iPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(  91)									data66->fPos = (data66->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(  91)									data67->oPos = (data67->oPos + (int)4);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(  91)									data68->iiPos = (data68->iiPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(  91)									data69->ffPos = (data69->ffPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(  91)									data70->fPos = (data70->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(  91)									data71->oPos = (data71->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(  91)									data72->fPos = (data72->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(  91)									data73->fPos = (data73->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(  91)									data74->fPos = (data74->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(  91)									data75->fPos = (data75->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(  91)									data76->oPos = (data76->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(  91)									data77->fPos = (data77->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(  91)									data78->fPos = (data78->fPos + (int)5);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(  91)									data79->oPos = (data79->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(  91)									data80->oPos = (data80->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(  91)									data81->oPos = (data81->oPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(  91)									data82->bPos = (data82->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(  91)									data83->oPos = (data83->oPos + (int)4);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(  91)									data84->iiPos = (data84->iiPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(  91)									data85->ffPos = (data85->ffPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(  91)									data86->fPos = (data86->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(  91)									data87->oPos = (data87->oPos + (int)4);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(  91)									data88->iPos = (data88->iPos + (int)1);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(  91)									data89->fPos = (data89->fPos + (int)2);
HXDLIN(  91)									 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(  91)									data90->bPos = (data90->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(  91)									data91->fPos = (data91->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(  91)									data92->fPos = (data92->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  91)									 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(  91)									data93->oPos = (data93->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  91)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN(  91)						 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(  91)						 ::openfl::_internal::renderer::DrawCommandReader c8 = this3;
HXDLIN(  91)						::Array< ::Dynamic> c9 = c8->buffer->ii;
HXDLIN(  91)						::cpp::VirtualArray c10 = c8->buffer->o;
HXDLIN(  91)						::cpp::VirtualArray c11 = c8->buffer->o;
HXDLIN(  91)						::cpp::VirtualArray c12 = c8->buffer->o;
HXDLIN(  91)						this->beginGradientFill(c8->buffer->o->__get(c8->oPos),c8->buffer->ii->__get(c8->iiPos).StaticCast< ::Array< int > >(),c8->buffer->ff->__get(c8->ffPos).StaticCast< ::Array< Float > >(),c9->__get((c8->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c10->__get((c8->oPos + (int)1))) ),c11->__get((c8->oPos + (int)2)),c12->__get((c8->oPos + (int)3)),c8->buffer->f->__get(c8->fPos));
            					}
            					break;
            					case (int)3: {
HXLINE(  92)						{
HXLINE(  92)							 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(  92)							switch((int)(_hx_getEnumValueIndex(_g5))){
            								case (int)0: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(  92)									data94->oPos = (data94->oPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(  92)									data95->bPos = (data95->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(  92)									data96->iPos = (data96->iPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(  92)									data97->fPos = (data97->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(  92)									data98->oPos = (data98->oPos + (int)4);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(  92)									data99->iiPos = (data99->iiPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(  92)									data100->ffPos = (data100->ffPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(  92)									data101->fPos = (data101->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(  92)									data102->oPos = (data102->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(  92)									data103->fPos = (data103->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(  92)									data104->fPos = (data104->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(  92)									data105->fPos = (data105->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(  92)									data106->fPos = (data106->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(  92)									data107->oPos = (data107->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(  92)									data108->fPos = (data108->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(  92)									data109->fPos = (data109->fPos + (int)5);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(  92)									data110->oPos = (data110->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(  92)									data111->oPos = (data111->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(  92)									data112->oPos = (data112->oPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(  92)									data113->bPos = (data113->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(  92)									data114->oPos = (data114->oPos + (int)4);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(  92)									data115->iiPos = (data115->iiPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(  92)									data116->ffPos = (data116->ffPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(  92)									data117->fPos = (data117->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(  92)									data118->oPos = (data118->oPos + (int)4);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(  92)									data119->iPos = (data119->iPos + (int)1);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(  92)									data120->fPos = (data120->fPos + (int)2);
HXDLIN(  92)									 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(  92)									data121->bPos = (data121->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(  92)									data122->fPos = (data122->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(  92)									data123->fPos = (data123->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  92)									 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(  92)									data124->oPos = (data124->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  92)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN(  92)						 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(  92)						 ::openfl::_internal::renderer::DrawCommandReader c13 = this4;
HXDLIN(  92)						this->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c13->buffer->o->__get(c13->oPos)) ));
            					}
            					break;
            					case (int)4: {
HXLINE(  93)						{
HXLINE(  93)							 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(  93)							switch((int)(_hx_getEnumValueIndex(_g6))){
            								case (int)0: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(  93)									data125->oPos = (data125->oPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(  93)									data126->bPos = (data126->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(  93)									data127->iPos = (data127->iPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(  93)									data128->fPos = (data128->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(  93)									data129->oPos = (data129->oPos + (int)4);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(  93)									data130->iiPos = (data130->iiPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(  93)									data131->ffPos = (data131->ffPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(  93)									data132->fPos = (data132->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(  93)									data133->oPos = (data133->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(  93)									data134->fPos = (data134->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(  93)									data135->fPos = (data135->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(  93)									data136->fPos = (data136->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(  93)									data137->fPos = (data137->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(  93)									data138->oPos = (data138->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(  93)									data139->fPos = (data139->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(  93)									data140->fPos = (data140->fPos + (int)5);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(  93)									data141->oPos = (data141->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(  93)									data142->oPos = (data142->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(  93)									data143->oPos = (data143->oPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(  93)									data144->bPos = (data144->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(  93)									data145->oPos = (data145->oPos + (int)4);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(  93)									data146->iiPos = (data146->iiPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(  93)									data147->ffPos = (data147->ffPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(  93)									data148->fPos = (data148->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(  93)									data149->oPos = (data149->oPos + (int)4);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(  93)									data150->iPos = (data150->iPos + (int)1);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(  93)									data151->fPos = (data151->fPos + (int)2);
HXDLIN(  93)									 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(  93)									data152->bPos = (data152->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(  93)									data153->fPos = (data153->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(  93)									data154->fPos = (data154->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  93)									 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(  93)									data155->oPos = (data155->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  93)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(  93)						 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(  93)						 ::openfl::_internal::renderer::DrawCommandReader c14 = this5;
HXDLIN(  93)						Float c15 = c14->buffer->f->__get(c14->fPos);
HXDLIN(  93)						::Array< Float > c16 = c14->buffer->f;
HXDLIN(  93)						Float c17 = c16->__get((c14->fPos + (int)1));
HXDLIN(  93)						::Array< Float > c18 = c14->buffer->f;
HXDLIN(  93)						Float c19 = c18->__get((c14->fPos + (int)2));
HXDLIN(  93)						::Array< Float > c20 = c14->buffer->f;
HXDLIN(  93)						Float c21 = c20->__get((c14->fPos + (int)3));
HXDLIN(  93)						::Array< Float > c22 = c14->buffer->f;
HXDLIN(  93)						Float c23 = c22->__get((c14->fPos + (int)4));
HXDLIN(  93)						::Array< Float > c24 = c14->buffer->f;
HXDLIN(  93)						this->cubicCurveTo(c15,c17,c19,c21,c23,c24->__get((c14->fPos + (int)5)));
            					}
            					break;
            					case (int)5: {
HXLINE(  94)						{
HXLINE(  94)							 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(  94)							switch((int)(_hx_getEnumValueIndex(_g7))){
            								case (int)0: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(  94)									data156->oPos = (data156->oPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(  94)									data157->bPos = (data157->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(  94)									data158->iPos = (data158->iPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(  94)									data159->fPos = (data159->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(  94)									data160->oPos = (data160->oPos + (int)4);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(  94)									data161->iiPos = (data161->iiPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(  94)									data162->ffPos = (data162->ffPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(  94)									data163->fPos = (data163->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(  94)									data164->oPos = (data164->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(  94)									data165->fPos = (data165->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(  94)									data166->fPos = (data166->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(  94)									data167->fPos = (data167->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(  94)									data168->fPos = (data168->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(  94)									data169->oPos = (data169->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(  94)									data170->fPos = (data170->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(  94)									data171->fPos = (data171->fPos + (int)5);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(  94)									data172->oPos = (data172->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(  94)									data173->oPos = (data173->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(  94)									data174->oPos = (data174->oPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(  94)									data175->bPos = (data175->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(  94)									data176->oPos = (data176->oPos + (int)4);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(  94)									data177->iiPos = (data177->iiPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(  94)									data178->ffPos = (data178->ffPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(  94)									data179->fPos = (data179->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(  94)									data180->oPos = (data180->oPos + (int)4);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(  94)									data181->iPos = (data181->iPos + (int)1);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(  94)									data182->fPos = (data182->fPos + (int)2);
HXDLIN(  94)									 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(  94)									data183->bPos = (data183->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(  94)									data184->fPos = (data184->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(  94)									data185->fPos = (data185->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  94)									 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(  94)									data186->oPos = (data186->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  94)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(  94)						 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(  94)						 ::openfl::_internal::renderer::DrawCommandReader c25 = this6;
HXDLIN(  94)						Float c26 = c25->buffer->f->__get(c25->fPos);
HXDLIN(  94)						::Array< Float > c27 = c25->buffer->f;
HXDLIN(  94)						Float c28 = c27->__get((c25->fPos + (int)1));
HXDLIN(  94)						::Array< Float > c29 = c25->buffer->f;
HXDLIN(  94)						Float c30 = c29->__get((c25->fPos + (int)2));
HXDLIN(  94)						::Array< Float > c31 = c25->buffer->f;
HXDLIN(  94)						this->curveTo(c26,c28,c30,c31->__get((c25->fPos + (int)3)));
            					}
            					break;
            					case (int)6: {
HXLINE(  95)						{
HXLINE(  95)							 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(  95)							switch((int)(_hx_getEnumValueIndex(_g8))){
            								case (int)0: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(  95)									data187->oPos = (data187->oPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(  95)									data188->bPos = (data188->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(  95)									data189->iPos = (data189->iPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(  95)									data190->fPos = (data190->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(  95)									data191->oPos = (data191->oPos + (int)4);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(  95)									data192->iiPos = (data192->iiPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(  95)									data193->ffPos = (data193->ffPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(  95)									data194->fPos = (data194->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(  95)									data195->oPos = (data195->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(  95)									data196->fPos = (data196->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(  95)									data197->fPos = (data197->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(  95)									data198->fPos = (data198->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(  95)									data199->fPos = (data199->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(  95)									data200->oPos = (data200->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(  95)									data201->fPos = (data201->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(  95)									data202->fPos = (data202->fPos + (int)5);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(  95)									data203->oPos = (data203->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(  95)									data204->oPos = (data204->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(  95)									data205->oPos = (data205->oPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(  95)									data206->bPos = (data206->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(  95)									data207->oPos = (data207->oPos + (int)4);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(  95)									data208->iiPos = (data208->iiPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(  95)									data209->ffPos = (data209->ffPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(  95)									data210->fPos = (data210->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(  95)									data211->oPos = (data211->oPos + (int)4);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(  95)									data212->iPos = (data212->iPos + (int)1);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(  95)									data213->fPos = (data213->fPos + (int)2);
HXDLIN(  95)									 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(  95)									data214->bPos = (data214->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(  95)									data215->fPos = (data215->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(  95)									data216->fPos = (data216->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  95)									 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(  95)									data217->oPos = (data217->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  95)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(  95)						 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(  95)						 ::openfl::_internal::renderer::DrawCommandReader c32 = this7;
HXDLIN(  95)						Float c33 = c32->buffer->f->__get(c32->fPos);
HXDLIN(  95)						::Array< Float > c34 = c32->buffer->f;
HXDLIN(  95)						Float c35 = c34->__get((c32->fPos + (int)1));
HXDLIN(  95)						::Array< Float > c36 = c32->buffer->f;
HXDLIN(  95)						this->drawCircle(c33,c35,c36->__get((c32->fPos + (int)2)));
            					}
            					break;
            					case (int)7: {
HXLINE(  96)						{
HXLINE(  96)							 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(  96)							switch((int)(_hx_getEnumValueIndex(_g9))){
            								case (int)0: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(  96)									data218->oPos = (data218->oPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(  96)									data219->bPos = (data219->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(  96)									data220->iPos = (data220->iPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(  96)									data221->fPos = (data221->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(  96)									data222->oPos = (data222->oPos + (int)4);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(  96)									data223->iiPos = (data223->iiPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(  96)									data224->ffPos = (data224->ffPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(  96)									data225->fPos = (data225->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(  96)									data226->oPos = (data226->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(  96)									data227->fPos = (data227->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(  96)									data228->fPos = (data228->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(  96)									data229->fPos = (data229->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(  96)									data230->fPos = (data230->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(  96)									data231->oPos = (data231->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(  96)									data232->fPos = (data232->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(  96)									data233->fPos = (data233->fPos + (int)5);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(  96)									data234->oPos = (data234->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(  96)									data235->oPos = (data235->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(  96)									data236->oPos = (data236->oPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(  96)									data237->bPos = (data237->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(  96)									data238->oPos = (data238->oPos + (int)4);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(  96)									data239->iiPos = (data239->iiPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(  96)									data240->ffPos = (data240->ffPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(  96)									data241->fPos = (data241->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(  96)									data242->oPos = (data242->oPos + (int)4);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(  96)									data243->iPos = (data243->iPos + (int)1);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(  96)									data244->fPos = (data244->fPos + (int)2);
HXDLIN(  96)									 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(  96)									data245->bPos = (data245->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(  96)									data246->fPos = (data246->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(  96)									data247->fPos = (data247->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  96)									 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(  96)									data248->oPos = (data248->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  96)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(  96)						 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(  96)						 ::openfl::_internal::renderer::DrawCommandReader c37 = this8;
HXDLIN(  96)						Float c38 = c37->buffer->f->__get(c37->fPos);
HXDLIN(  96)						::Array< Float > c39 = c37->buffer->f;
HXDLIN(  96)						Float c40 = c39->__get((c37->fPos + (int)1));
HXDLIN(  96)						::Array< Float > c41 = c37->buffer->f;
HXDLIN(  96)						Float c42 = c41->__get((c37->fPos + (int)2));
HXDLIN(  96)						::Array< Float > c43 = c37->buffer->f;
HXDLIN(  96)						this->drawEllipse(c38,c40,c42,c43->__get((c37->fPos + (int)3)));
            					}
            					break;
            					case (int)8: {
HXLINE(  97)						{
HXLINE(  97)							 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(  97)							switch((int)(_hx_getEnumValueIndex(_g10))){
            								case (int)0: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(  97)									data249->oPos = (data249->oPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(  97)									data250->bPos = (data250->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(  97)									data251->iPos = (data251->iPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(  97)									data252->fPos = (data252->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(  97)									data253->oPos = (data253->oPos + (int)4);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(  97)									data254->iiPos = (data254->iiPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(  97)									data255->ffPos = (data255->ffPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(  97)									data256->fPos = (data256->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(  97)									data257->oPos = (data257->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(  97)									data258->fPos = (data258->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(  97)									data259->fPos = (data259->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(  97)									data260->fPos = (data260->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(  97)									data261->fPos = (data261->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN(  97)									data262->oPos = (data262->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN(  97)									data263->fPos = (data263->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN(  97)									data264->fPos = (data264->fPos + (int)5);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN(  97)									data265->oPos = (data265->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN(  97)									data266->oPos = (data266->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN(  97)									data267->oPos = (data267->oPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN(  97)									data268->bPos = (data268->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN(  97)									data269->oPos = (data269->oPos + (int)4);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN(  97)									data270->iiPos = (data270->iiPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN(  97)									data271->ffPos = (data271->ffPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN(  97)									data272->fPos = (data272->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN(  97)									data273->oPos = (data273->oPos + (int)4);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN(  97)									data274->iPos = (data274->iPos + (int)1);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN(  97)									data275->fPos = (data275->fPos + (int)2);
HXDLIN(  97)									 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN(  97)									data276->bPos = (data276->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN(  97)									data277->fPos = (data277->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN(  97)									data278->fPos = (data278->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  97)									 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN(  97)									data279->oPos = (data279->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  97)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN(  97)						 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN(  97)						 ::openfl::_internal::renderer::DrawCommandReader c44 = this9;
HXDLIN(  97)						::cpp::VirtualArray c45 = c44->buffer->o;
HXDLIN(  97)						::cpp::VirtualArray c46 = c44->buffer->o;
HXDLIN(  97)						this->drawQuads(( ( ::openfl::_Vector::FloatVector)(c44->buffer->o->__get(c44->oPos)) ),( ( ::openfl::_Vector::IntVector)(c45->__get((c44->oPos + (int)1))) ),( ( ::openfl::_Vector::FloatVector)(c46->__get((c44->oPos + (int)2))) ));
            					}
            					break;
            					case (int)9: {
HXLINE(  98)						{
HXLINE(  98)							 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN(  98)							switch((int)(_hx_getEnumValueIndex(_g11))){
            								case (int)0: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN(  98)									data280->oPos = (data280->oPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN(  98)									data281->bPos = (data281->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN(  98)									data282->iPos = (data282->iPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN(  98)									data283->fPos = (data283->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN(  98)									data284->oPos = (data284->oPos + (int)4);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN(  98)									data285->iiPos = (data285->iiPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN(  98)									data286->ffPos = (data286->ffPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN(  98)									data287->fPos = (data287->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN(  98)									data288->oPos = (data288->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN(  98)									data289->fPos = (data289->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN(  98)									data290->fPos = (data290->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN(  98)									data291->fPos = (data291->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN(  98)									data292->fPos = (data292->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN(  98)									data293->oPos = (data293->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN(  98)									data294->fPos = (data294->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN(  98)									data295->fPos = (data295->fPos + (int)5);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN(  98)									data296->oPos = (data296->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN(  98)									data297->oPos = (data297->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN(  98)									data298->oPos = (data298->oPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN(  98)									data299->bPos = (data299->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN(  98)									data300->oPos = (data300->oPos + (int)4);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN(  98)									data301->iiPos = (data301->iiPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN(  98)									data302->ffPos = (data302->ffPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN(  98)									data303->fPos = (data303->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN(  98)									data304->oPos = (data304->oPos + (int)4);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN(  98)									data305->iPos = (data305->iPos + (int)1);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN(  98)									data306->fPos = (data306->fPos + (int)2);
HXDLIN(  98)									 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN(  98)									data307->bPos = (data307->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN(  98)									data308->fPos = (data308->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN(  98)									data309->fPos = (data309->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  98)									 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN(  98)									data310->oPos = (data310->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  98)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(  98)						 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN(  98)						 ::openfl::_internal::renderer::DrawCommandReader c47 = this10;
HXDLIN(  98)						Float c48 = c47->buffer->f->__get(c47->fPos);
HXDLIN(  98)						::Array< Float > c49 = c47->buffer->f;
HXDLIN(  98)						Float c50 = c49->__get((c47->fPos + (int)1));
HXDLIN(  98)						::Array< Float > c51 = c47->buffer->f;
HXDLIN(  98)						Float c52 = c51->__get((c47->fPos + (int)2));
HXDLIN(  98)						::Array< Float > c53 = c47->buffer->f;
HXDLIN(  98)						this->drawRect(c48,c50,c52,c53->__get((c47->fPos + (int)3)));
            					}
            					break;
            					case (int)10: {
HXLINE(  99)						{
HXLINE(  99)							 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN(  99)							switch((int)(_hx_getEnumValueIndex(_g12))){
            								case (int)0: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN(  99)									data311->oPos = (data311->oPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN(  99)									data312->bPos = (data312->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN(  99)									data313->iPos = (data313->iPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN(  99)									data314->fPos = (data314->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN(  99)									data315->oPos = (data315->oPos + (int)4);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN(  99)									data316->iiPos = (data316->iiPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN(  99)									data317->ffPos = (data317->ffPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN(  99)									data318->fPos = (data318->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN(  99)									data319->oPos = (data319->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN(  99)									data320->fPos = (data320->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN(  99)									data321->fPos = (data321->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN(  99)									data322->fPos = (data322->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN(  99)									data323->fPos = (data323->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN(  99)									data324->oPos = (data324->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN(  99)									data325->fPos = (data325->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN(  99)									data326->fPos = (data326->fPos + (int)5);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN(  99)									data327->oPos = (data327->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN(  99)									data328->oPos = (data328->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN(  99)									data329->oPos = (data329->oPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN(  99)									data330->bPos = (data330->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN(  99)									data331->oPos = (data331->oPos + (int)4);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN(  99)									data332->iiPos = (data332->iiPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN(  99)									data333->ffPos = (data333->ffPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN(  99)									data334->fPos = (data334->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN(  99)									data335->oPos = (data335->oPos + (int)4);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN(  99)									data336->iPos = (data336->iPos + (int)1);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN(  99)									data337->fPos = (data337->fPos + (int)2);
HXDLIN(  99)									 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN(  99)									data338->bPos = (data338->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN(  99)									data339->fPos = (data339->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN(  99)									data340->fPos = (data340->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(  99)									 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN(  99)									data341->oPos = (data341->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(  99)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(  99)						 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN(  99)						 ::openfl::_internal::renderer::DrawCommandReader c54 = this11;
HXDLIN(  99)						Float c55 = c54->buffer->f->__get(c54->fPos);
HXDLIN(  99)						::Array< Float > c56 = c54->buffer->f;
HXDLIN(  99)						Float c57 = c56->__get((c54->fPos + (int)1));
HXDLIN(  99)						::Array< Float > c58 = c54->buffer->f;
HXDLIN(  99)						Float c59 = c58->__get((c54->fPos + (int)2));
HXDLIN(  99)						::Array< Float > c60 = c54->buffer->f;
HXDLIN(  99)						Float c61 = c60->__get((c54->fPos + (int)3));
HXDLIN(  99)						::Array< Float > c62 = c54->buffer->f;
HXDLIN(  99)						this->drawRoundRect(c55,c57,c59,c61,c62->__get((c54->fPos + (int)4)),c54->buffer->o->__get(c54->oPos));
            					}
            					break;
            					case (int)12: {
HXLINE( 100)						{
HXLINE( 100)							 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 100)							switch((int)(_hx_getEnumValueIndex(_g13))){
            								case (int)0: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 100)									data342->oPos = (data342->oPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 100)									data343->bPos = (data343->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 100)									data344->iPos = (data344->iPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 100)									data345->fPos = (data345->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 100)									data346->oPos = (data346->oPos + (int)4);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 100)									data347->iiPos = (data347->iiPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 100)									data348->ffPos = (data348->ffPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 100)									data349->fPos = (data349->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 100)									data350->oPos = (data350->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 100)									data351->fPos = (data351->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 100)									data352->fPos = (data352->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 100)									data353->fPos = (data353->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 100)									data354->fPos = (data354->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 100)									data355->oPos = (data355->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 100)									data356->fPos = (data356->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 100)									data357->fPos = (data357->fPos + (int)5);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 100)									data358->oPos = (data358->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 100)									data359->oPos = (data359->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 100)									data360->oPos = (data360->oPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 100)									data361->bPos = (data361->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 100)									data362->oPos = (data362->oPos + (int)4);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 100)									data363->iiPos = (data363->iiPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 100)									data364->ffPos = (data364->ffPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 100)									data365->fPos = (data365->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 100)									data366->oPos = (data366->oPos + (int)4);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 100)									data367->iPos = (data367->iPos + (int)1);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 100)									data368->fPos = (data368->fPos + (int)2);
HXDLIN( 100)									 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 100)									data369->bPos = (data369->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 100)									data370->fPos = (data370->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 100)									data371->fPos = (data371->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 100)									 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 100)									data372->oPos = (data372->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 100)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN( 100)						 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 100)						 ::openfl::_internal::renderer::DrawCommandReader c63 = this12;
HXDLIN( 100)						::cpp::VirtualArray c64 = c63->buffer->o;
HXDLIN( 100)						::cpp::VirtualArray c65 = c63->buffer->o;
HXDLIN( 100)						::cpp::VirtualArray c66 = c63->buffer->o;
HXDLIN( 100)						this->drawTriangles(( ( ::openfl::_Vector::FloatVector)(c63->buffer->o->__get(c63->oPos)) ),( ( ::openfl::_Vector::IntVector)(c64->__get((c63->oPos + (int)1))) ),( ( ::openfl::_Vector::FloatVector)(c65->__get((c63->oPos + (int)2))) ),c66->__get((c63->oPos + (int)3)));
            					}
            					break;
            					case (int)13: {
HXLINE( 101)						{
HXLINE( 101)							 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 101)							switch((int)(_hx_getEnumValueIndex(_g14))){
            								case (int)0: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 101)									data373->oPos = (data373->oPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 101)									data374->bPos = (data374->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 101)									data375->iPos = (data375->iPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 101)									data376->fPos = (data376->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 101)									data377->oPos = (data377->oPos + (int)4);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 101)									data378->iiPos = (data378->iiPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 101)									data379->ffPos = (data379->ffPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 101)									data380->fPos = (data380->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 101)									data381->oPos = (data381->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 101)									data382->fPos = (data382->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 101)									data383->fPos = (data383->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 101)									data384->fPos = (data384->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 101)									data385->fPos = (data385->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 101)									data386->oPos = (data386->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 101)									data387->fPos = (data387->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 101)									data388->fPos = (data388->fPos + (int)5);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 101)									data389->oPos = (data389->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 101)									data390->oPos = (data390->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 101)									data391->oPos = (data391->oPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 101)									data392->bPos = (data392->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 101)									data393->oPos = (data393->oPos + (int)4);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 101)									data394->iiPos = (data394->iiPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 101)									data395->ffPos = (data395->ffPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 101)									data396->fPos = (data396->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 101)									data397->oPos = (data397->oPos + (int)4);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 101)									data398->iPos = (data398->iPos + (int)1);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 101)									data399->fPos = (data399->fPos + (int)2);
HXDLIN( 101)									 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 101)									data400->bPos = (data400->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 101)									data401->fPos = (data401->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 101)									data402->fPos = (data402->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 101)									 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 101)									data403->oPos = (data403->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 101)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN( 101)						 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 101)						 ::openfl::_internal::renderer::DrawCommandReader c67 = this13;
HXDLIN( 101)						this->endFill();
            					}
            					break;
            					case (int)14: {
HXLINE( 102)						{
HXLINE( 102)							 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 102)							switch((int)(_hx_getEnumValueIndex(_g15))){
            								case (int)0: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 102)									data404->oPos = (data404->oPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 102)									data405->bPos = (data405->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 102)									data406->iPos = (data406->iPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 102)									data407->fPos = (data407->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 102)									data408->oPos = (data408->oPos + (int)4);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 102)									data409->iiPos = (data409->iiPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 102)									data410->ffPos = (data410->ffPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 102)									data411->fPos = (data411->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 102)									data412->oPos = (data412->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 102)									data413->fPos = (data413->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 102)									data414->fPos = (data414->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 102)									data415->fPos = (data415->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 102)									data416->fPos = (data416->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 102)									data417->oPos = (data417->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 102)									data418->fPos = (data418->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 102)									data419->fPos = (data419->fPos + (int)5);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 102)									data420->oPos = (data420->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 102)									data421->oPos = (data421->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 102)									data422->oPos = (data422->oPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 102)									data423->bPos = (data423->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 102)									data424->oPos = (data424->oPos + (int)4);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 102)									data425->iiPos = (data425->iiPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 102)									data426->ffPos = (data426->ffPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 102)									data427->fPos = (data427->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 102)									data428->oPos = (data428->oPos + (int)4);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 102)									data429->iPos = (data429->iPos + (int)1);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 102)									data430->fPos = (data430->fPos + (int)2);
HXDLIN( 102)									 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 102)									data431->bPos = (data431->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 102)									data432->fPos = (data432->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 102)									data433->fPos = (data433->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 102)									 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 102)									data434->oPos = (data434->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 102)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 102)						 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 102)						 ::openfl::_internal::renderer::DrawCommandReader c68 = this14;
HXDLIN( 102)						::cpp::VirtualArray c69 = c68->buffer->o;
HXDLIN( 102)						::Array< bool > c70 = c68->buffer->b;
HXDLIN( 102)						this->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c68->buffer->o->__get(c68->oPos)) ),( ( ::openfl::geom::Matrix)(c69->__get((c68->oPos + (int)1))) ),c68->buffer->b->__get(c68->bPos),c70->__get((c68->bPos + (int)1)));
            					}
            					break;
            					case (int)15: {
HXLINE( 103)						{
HXLINE( 103)							 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 103)							switch((int)(_hx_getEnumValueIndex(_g16))){
            								case (int)0: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 103)									data435->oPos = (data435->oPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 103)									data436->bPos = (data436->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 103)									data437->iPos = (data437->iPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 103)									data438->fPos = (data438->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 103)									data439->oPos = (data439->oPos + (int)4);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 103)									data440->iiPos = (data440->iiPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 103)									data441->ffPos = (data441->ffPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 103)									data442->fPos = (data442->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 103)									data443->oPos = (data443->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 103)									data444->fPos = (data444->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 103)									data445->fPos = (data445->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 103)									data446->fPos = (data446->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 103)									data447->fPos = (data447->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 103)									data448->oPos = (data448->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 103)									data449->fPos = (data449->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 103)									data450->fPos = (data450->fPos + (int)5);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 103)									data451->oPos = (data451->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 103)									data452->oPos = (data452->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 103)									data453->oPos = (data453->oPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 103)									data454->bPos = (data454->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 103)									data455->oPos = (data455->oPos + (int)4);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 103)									data456->iiPos = (data456->iiPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 103)									data457->ffPos = (data457->ffPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 103)									data458->fPos = (data458->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 103)									data459->oPos = (data459->oPos + (int)4);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 103)									data460->iPos = (data460->iPos + (int)1);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 103)									data461->fPos = (data461->fPos + (int)2);
HXDLIN( 103)									 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 103)									data462->bPos = (data462->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 103)									data463->fPos = (data463->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 103)									data464->fPos = (data464->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 103)									 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN( 103)									data465->oPos = (data465->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 103)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 103)						 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 103)						 ::openfl::_internal::renderer::DrawCommandReader c71 = this15;
HXDLIN( 103)						::Array< ::Dynamic> c72 = c71->buffer->ii;
HXDLIN( 103)						::cpp::VirtualArray c73 = c71->buffer->o;
HXDLIN( 103)						::cpp::VirtualArray c74 = c71->buffer->o;
HXDLIN( 103)						::cpp::VirtualArray c75 = c71->buffer->o;
HXDLIN( 103)						this->lineGradientStyle(c71->buffer->o->__get(c71->oPos),c71->buffer->ii->__get(c71->iiPos).StaticCast< ::Array< int > >(),c71->buffer->ff->__get(c71->ffPos).StaticCast< ::Array< Float > >(),c72->__get((c71->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c73->__get((c71->oPos + (int)1))) ),c74->__get((c71->oPos + (int)2)),c75->__get((c71->oPos + (int)3)),c71->buffer->f->__get(c71->fPos));
            					}
            					break;
            					case (int)16: {
HXLINE( 104)						{
HXLINE( 104)							 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 104)							switch((int)(_hx_getEnumValueIndex(_g17))){
            								case (int)0: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN( 104)									data466->oPos = (data466->oPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN( 104)									data467->bPos = (data467->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN( 104)									data468->iPos = (data468->iPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN( 104)									data469->fPos = (data469->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN( 104)									data470->oPos = (data470->oPos + (int)4);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN( 104)									data471->iiPos = (data471->iiPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN( 104)									data472->ffPos = (data472->ffPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN( 104)									data473->fPos = (data473->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN( 104)									data474->oPos = (data474->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN( 104)									data475->fPos = (data475->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN( 104)									data476->fPos = (data476->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN( 104)									data477->fPos = (data477->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN( 104)									data478->fPos = (data478->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN( 104)									data479->oPos = (data479->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN( 104)									data480->fPos = (data480->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN( 104)									data481->fPos = (data481->fPos + (int)5);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN( 104)									data482->oPos = (data482->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN( 104)									data483->oPos = (data483->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN( 104)									data484->oPos = (data484->oPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN( 104)									data485->bPos = (data485->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN( 104)									data486->oPos = (data486->oPos + (int)4);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN( 104)									data487->iiPos = (data487->iiPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN( 104)									data488->ffPos = (data488->ffPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN( 104)									data489->fPos = (data489->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN( 104)									data490->oPos = (data490->oPos + (int)4);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN( 104)									data491->iPos = (data491->iPos + (int)1);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN( 104)									data492->fPos = (data492->fPos + (int)2);
HXDLIN( 104)									 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN( 104)									data493->bPos = (data493->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN( 104)									data494->fPos = (data494->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN( 104)									data495->fPos = (data495->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 104)									 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN( 104)									data496->oPos = (data496->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 104)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 104)						 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN( 104)						 ::openfl::_internal::renderer::DrawCommandReader c76 = this16;
HXDLIN( 104)						::cpp::VirtualArray c77 = c76->buffer->o;
HXDLIN( 104)						::cpp::VirtualArray c78 = c76->buffer->o;
HXDLIN( 104)						::cpp::VirtualArray c79 = c76->buffer->o;
HXDLIN( 104)						::Array< Float > c80 = c76->buffer->f;
HXDLIN( 104)						this->lineStyle(c76->buffer->o->__get(c76->oPos),c76->buffer->i->__get(c76->iPos),c76->buffer->f->__get(c76->fPos),c76->buffer->b->__get(c76->bPos),c77->__get((c76->oPos + (int)1)),c78->__get((c76->oPos + (int)2)),c79->__get((c76->oPos + (int)3)),c80->__get((c76->fPos + (int)1)));
            					}
            					break;
            					case (int)17: {
HXLINE( 105)						{
HXLINE( 105)							 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN( 105)							switch((int)(_hx_getEnumValueIndex(_g18))){
            								case (int)0: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN( 105)									data497->oPos = (data497->oPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN( 105)									data498->bPos = (data498->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN( 105)									data499->iPos = (data499->iPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN( 105)									data500->fPos = (data500->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN( 105)									data501->oPos = (data501->oPos + (int)4);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN( 105)									data502->iiPos = (data502->iiPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN( 105)									data503->ffPos = (data503->ffPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN( 105)									data504->fPos = (data504->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN( 105)									data505->oPos = (data505->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN( 105)									data506->fPos = (data506->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN( 105)									data507->fPos = (data507->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN( 105)									data508->fPos = (data508->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN( 105)									data509->fPos = (data509->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN( 105)									data510->oPos = (data510->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN( 105)									data511->fPos = (data511->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN( 105)									data512->fPos = (data512->fPos + (int)5);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN( 105)									data513->oPos = (data513->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN( 105)									data514->oPos = (data514->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN( 105)									data515->oPos = (data515->oPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN( 105)									data516->bPos = (data516->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN( 105)									data517->oPos = (data517->oPos + (int)4);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN( 105)									data518->iiPos = (data518->iiPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN( 105)									data519->ffPos = (data519->ffPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN( 105)									data520->fPos = (data520->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN( 105)									data521->oPos = (data521->oPos + (int)4);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN( 105)									data522->iPos = (data522->iPos + (int)1);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN( 105)									data523->fPos = (data523->fPos + (int)2);
HXDLIN( 105)									 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN( 105)									data524->bPos = (data524->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN( 105)									data525->fPos = (data525->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN( 105)									data526->fPos = (data526->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 105)									 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN( 105)									data527->oPos = (data527->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 105)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 105)						 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
HXDLIN( 105)						 ::openfl::_internal::renderer::DrawCommandReader c81 = this17;
HXDLIN( 105)						Float c82 = c81->buffer->f->__get(c81->fPos);
HXDLIN( 105)						::Array< Float > c83 = c81->buffer->f;
HXDLIN( 105)						this->lineTo(c82,c83->__get((c81->fPos + (int)1)));
            					}
            					break;
            					case (int)18: {
HXLINE( 106)						{
HXLINE( 106)							 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN( 106)							switch((int)(_hx_getEnumValueIndex(_g19))){
            								case (int)0: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN( 106)									data528->oPos = (data528->oPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN( 106)									data529->bPos = (data529->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN( 106)									data530->iPos = (data530->iPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN( 106)									data531->fPos = (data531->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN( 106)									data532->oPos = (data532->oPos + (int)4);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN( 106)									data533->iiPos = (data533->iiPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN( 106)									data534->ffPos = (data534->ffPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN( 106)									data535->fPos = (data535->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN( 106)									data536->oPos = (data536->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN( 106)									data537->fPos = (data537->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN( 106)									data538->fPos = (data538->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN( 106)									data539->fPos = (data539->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN( 106)									data540->fPos = (data540->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN( 106)									data541->oPos = (data541->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN( 106)									data542->fPos = (data542->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN( 106)									data543->fPos = (data543->fPos + (int)5);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN( 106)									data544->oPos = (data544->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN( 106)									data545->oPos = (data545->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN( 106)									data546->oPos = (data546->oPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN( 106)									data547->bPos = (data547->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN( 106)									data548->oPos = (data548->oPos + (int)4);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN( 106)									data549->iiPos = (data549->iiPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN( 106)									data550->ffPos = (data550->ffPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN( 106)									data551->fPos = (data551->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data552 = data;
HXDLIN( 106)									data552->oPos = (data552->oPos + (int)4);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data553 = data;
HXDLIN( 106)									data553->iPos = (data553->iPos + (int)1);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data554 = data;
HXDLIN( 106)									data554->fPos = (data554->fPos + (int)2);
HXDLIN( 106)									 ::openfl::_internal::renderer::DrawCommandReader data555 = data;
HXDLIN( 106)									data555->bPos = (data555->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data556 = data;
HXDLIN( 106)									data556->fPos = (data556->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data557 = data;
HXDLIN( 106)									data557->fPos = (data557->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 106)									 ::openfl::_internal::renderer::DrawCommandReader data558 = data;
HXDLIN( 106)									data558->oPos = (data558->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 106)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 106)						 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
HXDLIN( 106)						 ::openfl::_internal::renderer::DrawCommandReader c84 = this18;
HXDLIN( 106)						Float c85 = c84->buffer->f->__get(c84->fPos);
HXDLIN( 106)						::Array< Float > c86 = c84->buffer->f;
HXDLIN( 106)						this->moveTo(c85,c86->__get((c84->fPos + (int)1)));
            					}
            					break;
            					case (int)19: {
HXLINE( 107)						{
HXLINE( 107)							 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN( 107)							switch((int)(_hx_getEnumValueIndex(_g20))){
            								case (int)0: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data559 = data;
HXDLIN( 107)									data559->oPos = (data559->oPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data560 = data;
HXDLIN( 107)									data560->bPos = (data560->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data561 = data;
HXDLIN( 107)									data561->iPos = (data561->iPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data562 = data;
HXDLIN( 107)									data562->fPos = (data562->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data563 = data;
HXDLIN( 107)									data563->oPos = (data563->oPos + (int)4);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data564 = data;
HXDLIN( 107)									data564->iiPos = (data564->iiPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data565 = data;
HXDLIN( 107)									data565->ffPos = (data565->ffPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data566 = data;
HXDLIN( 107)									data566->fPos = (data566->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data567 = data;
HXDLIN( 107)									data567->oPos = (data567->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data568 = data;
HXDLIN( 107)									data568->fPos = (data568->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data569 = data;
HXDLIN( 107)									data569->fPos = (data569->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data570 = data;
HXDLIN( 107)									data570->fPos = (data570->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data571 = data;
HXDLIN( 107)									data571->fPos = (data571->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data572 = data;
HXDLIN( 107)									data572->oPos = (data572->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data573 = data;
HXDLIN( 107)									data573->fPos = (data573->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data574 = data;
HXDLIN( 107)									data574->fPos = (data574->fPos + (int)5);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data575 = data;
HXDLIN( 107)									data575->oPos = (data575->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data576 = data;
HXDLIN( 107)									data576->oPos = (data576->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data577 = data;
HXDLIN( 107)									data577->oPos = (data577->oPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data578 = data;
HXDLIN( 107)									data578->bPos = (data578->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data579 = data;
HXDLIN( 107)									data579->oPos = (data579->oPos + (int)4);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data580 = data;
HXDLIN( 107)									data580->iiPos = (data580->iiPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data581 = data;
HXDLIN( 107)									data581->ffPos = (data581->ffPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data582 = data;
HXDLIN( 107)									data582->fPos = (data582->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data583 = data;
HXDLIN( 107)									data583->oPos = (data583->oPos + (int)4);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data584 = data;
HXDLIN( 107)									data584->iPos = (data584->iPos + (int)1);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data585 = data;
HXDLIN( 107)									data585->fPos = (data585->fPos + (int)2);
HXDLIN( 107)									 ::openfl::_internal::renderer::DrawCommandReader data586 = data;
HXDLIN( 107)									data586->bPos = (data586->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data587 = data;
HXDLIN( 107)									data587->fPos = (data587->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data588 = data;
HXDLIN( 107)									data588->fPos = (data588->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 107)									 ::openfl::_internal::renderer::DrawCommandReader data589 = data;
HXDLIN( 107)									data589->oPos = (data589->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 107)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::OVERRIDE_MATRIX_dyn();
HXDLIN( 107)						 ::openfl::_internal::renderer::DrawCommandReader this19 = data;
HXDLIN( 107)						 ::openfl::_internal::renderer::DrawCommandReader c87 = this19;
HXDLIN( 107)						this->overrideMatrix(( ( ::openfl::geom::Matrix)(c87->buffer->o->__get(c87->oPos)) ));
            					}
            					break;
            					case (int)20: {
HXLINE( 108)						{
HXLINE( 108)							 ::openfl::_internal::renderer::DrawCommandType _g21 = data->prev;
HXDLIN( 108)							switch((int)(_hx_getEnumValueIndex(_g21))){
            								case (int)0: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data590 = data;
HXDLIN( 108)									data590->oPos = (data590->oPos + (int)2);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data591 = data;
HXDLIN( 108)									data591->bPos = (data591->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data592 = data;
HXDLIN( 108)									data592->iPos = (data592->iPos + (int)1);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data593 = data;
HXDLIN( 108)									data593->fPos = (data593->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data594 = data;
HXDLIN( 108)									data594->oPos = (data594->oPos + (int)4);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data595 = data;
HXDLIN( 108)									data595->iiPos = (data595->iiPos + (int)2);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data596 = data;
HXDLIN( 108)									data596->ffPos = (data596->ffPos + (int)1);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data597 = data;
HXDLIN( 108)									data597->fPos = (data597->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data598 = data;
HXDLIN( 108)									data598->oPos = (data598->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data599 = data;
HXDLIN( 108)									data599->fPos = (data599->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data600 = data;
HXDLIN( 108)									data600->fPos = (data600->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data601 = data;
HXDLIN( 108)									data601->fPos = (data601->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data602 = data;
HXDLIN( 108)									data602->fPos = (data602->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data603 = data;
HXDLIN( 108)									data603->oPos = (data603->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data604 = data;
HXDLIN( 108)									data604->fPos = (data604->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data605 = data;
HXDLIN( 108)									data605->fPos = (data605->fPos + (int)5);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data606 = data;
HXDLIN( 108)									data606->oPos = (data606->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data607 = data;
HXDLIN( 108)									data607->oPos = (data607->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data608 = data;
HXDLIN( 108)									data608->oPos = (data608->oPos + (int)2);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data609 = data;
HXDLIN( 108)									data609->bPos = (data609->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data610 = data;
HXDLIN( 108)									data610->oPos = (data610->oPos + (int)4);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data611 = data;
HXDLIN( 108)									data611->iiPos = (data611->iiPos + (int)2);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data612 = data;
HXDLIN( 108)									data612->ffPos = (data612->ffPos + (int)1);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data613 = data;
HXDLIN( 108)									data613->fPos = (data613->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data614 = data;
HXDLIN( 108)									data614->oPos = (data614->oPos + (int)4);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data615 = data;
HXDLIN( 108)									data615->iPos = (data615->iPos + (int)1);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data616 = data;
HXDLIN( 108)									data616->fPos = (data616->fPos + (int)2);
HXDLIN( 108)									 ::openfl::_internal::renderer::DrawCommandReader data617 = data;
HXDLIN( 108)									data617->bPos = (data617->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data618 = data;
HXDLIN( 108)									data618->fPos = (data618->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data619 = data;
HXDLIN( 108)									data619->fPos = (data619->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 108)									 ::openfl::_internal::renderer::DrawCommandReader data620 = data;
HXDLIN( 108)									data620->oPos = (data620->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 108)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN( 108)						 ::openfl::_internal::renderer::DrawCommandReader this20 = data;
HXDLIN( 108)						 ::openfl::_internal::renderer::DrawCommandReader c88 = this20;
HXDLIN( 108)						this->windingEvenOdd();
            					}
            					break;
            					case (int)21: {
HXLINE( 109)						{
HXLINE( 109)							 ::openfl::_internal::renderer::DrawCommandType _g22 = data->prev;
HXDLIN( 109)							switch((int)(_hx_getEnumValueIndex(_g22))){
            								case (int)0: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data621 = data;
HXDLIN( 109)									data621->oPos = (data621->oPos + (int)2);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data622 = data;
HXDLIN( 109)									data622->bPos = (data622->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data623 = data;
HXDLIN( 109)									data623->iPos = (data623->iPos + (int)1);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data624 = data;
HXDLIN( 109)									data624->fPos = (data624->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data625 = data;
HXDLIN( 109)									data625->oPos = (data625->oPos + (int)4);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data626 = data;
HXDLIN( 109)									data626->iiPos = (data626->iiPos + (int)2);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data627 = data;
HXDLIN( 109)									data627->ffPos = (data627->ffPos + (int)1);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data628 = data;
HXDLIN( 109)									data628->fPos = (data628->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data629 = data;
HXDLIN( 109)									data629->oPos = (data629->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data630 = data;
HXDLIN( 109)									data630->fPos = (data630->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data631 = data;
HXDLIN( 109)									data631->fPos = (data631->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data632 = data;
HXDLIN( 109)									data632->fPos = (data632->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data633 = data;
HXDLIN( 109)									data633->fPos = (data633->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data634 = data;
HXDLIN( 109)									data634->oPos = (data634->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data635 = data;
HXDLIN( 109)									data635->fPos = (data635->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data636 = data;
HXDLIN( 109)									data636->fPos = (data636->fPos + (int)5);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data637 = data;
HXDLIN( 109)									data637->oPos = (data637->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data638 = data;
HXDLIN( 109)									data638->oPos = (data638->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data639 = data;
HXDLIN( 109)									data639->oPos = (data639->oPos + (int)2);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data640 = data;
HXDLIN( 109)									data640->bPos = (data640->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data641 = data;
HXDLIN( 109)									data641->oPos = (data641->oPos + (int)4);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data642 = data;
HXDLIN( 109)									data642->iiPos = (data642->iiPos + (int)2);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data643 = data;
HXDLIN( 109)									data643->ffPos = (data643->ffPos + (int)1);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data644 = data;
HXDLIN( 109)									data644->fPos = (data644->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data645 = data;
HXDLIN( 109)									data645->oPos = (data645->oPos + (int)4);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data646 = data;
HXDLIN( 109)									data646->iPos = (data646->iPos + (int)1);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data647 = data;
HXDLIN( 109)									data647->fPos = (data647->fPos + (int)2);
HXDLIN( 109)									 ::openfl::_internal::renderer::DrawCommandReader data648 = data;
HXDLIN( 109)									data648->bPos = (data648->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data649 = data;
HXDLIN( 109)									data649->fPos = (data649->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data650 = data;
HXDLIN( 109)									data650->fPos = (data650->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 109)									 ::openfl::_internal::renderer::DrawCommandReader data651 = data;
HXDLIN( 109)									data651->oPos = (data651->oPos + (int)1);
            								}
            								break;
            								case (int)20: case (int)21: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 109)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN( 109)						 ::openfl::_internal::renderer::DrawCommandReader this21 = data;
HXDLIN( 109)						 ::openfl::_internal::renderer::DrawCommandReader c89 = this21;
HXDLIN( 109)						this->windingNonZero();
            					}
            					break;
            					default:{
            					}
            				}
            			}
            		}
HXLINE( 116)		data->destroy();
HXLINE( 117)		return other;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,append,return )

void DrawCommandBuffer_obj::beginBitmapFill( ::openfl::display::BitmapData bitmap, ::openfl::geom::Matrix matrix,bool repeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_122_beginBitmapFill)
HXLINE( 124)		this->prepareWrite();
HXLINE( 126)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn());
HXLINE( 127)		this->o->push(bitmap);
HXLINE( 128)		this->o->push(matrix);
HXLINE( 129)		this->b->push(repeat);
HXLINE( 130)		this->b->push(smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,beginBitmapFill,(void))

void DrawCommandBuffer_obj::beginFill(int color,Float alpha){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_134_beginFill)
HXLINE( 136)		this->prepareWrite();
HXLINE( 138)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn());
HXLINE( 139)		this->i->push(color);
HXLINE( 140)		this->f->push(alpha);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,beginFill,(void))

void DrawCommandBuffer_obj::beginGradientFill( ::Dynamic type,::Array< int > colors,::Array< Float > alphas,::Array< int > ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_145_beginGradientFill)
HXLINE( 147)		this->prepareWrite();
HXLINE( 149)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn());
HXLINE( 150)		this->o->push(type);
HXLINE( 151)		this->ii->push(colors);
HXLINE( 152)		this->ff->push(alphas);
HXLINE( 153)		this->ii->push(ratios);
HXLINE( 154)		this->o->push(matrix);
HXLINE( 155)		this->o->push(spreadMethod);
HXLINE( 156)		this->o->push(interpolationMethod);
HXLINE( 157)		this->f->push(focalPointRatio);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,beginGradientFill,(void))

void DrawCommandBuffer_obj::beginShaderFill( ::openfl::_internal::renderer::ShaderBuffer shaderBuffer){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_162_beginShaderFill)
HXLINE( 164)		this->prepareWrite();
HXLINE( 166)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn());
HXLINE( 167)		this->o->push(shaderBuffer);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,beginShaderFill,(void))

void DrawCommandBuffer_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_172_clear)
HXLINE( 174)		this->types = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->types;
HXLINE( 176)		this->b = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->b;
HXLINE( 177)		this->i = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->i;
HXLINE( 178)		this->f = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->f;
HXLINE( 179)		this->o = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->o;
HXLINE( 180)		this->ff = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->ff;
HXLINE( 181)		this->ii = ::openfl::_internal::renderer::DrawCommandBuffer_obj::empty->ii;
HXLINE( 183)		this->copyOnWrite = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,clear,(void))

 ::openfl::_internal::renderer::DrawCommandBuffer DrawCommandBuffer_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_188_copy)
HXLINE( 190)		 ::openfl::_internal::renderer::DrawCommandBuffer copy =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
HXLINE( 191)		copy->append(hx::ObjectPtr<OBJ_>(this));
HXLINE( 192)		return copy;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,copy,return )

void DrawCommandBuffer_obj::cubicCurveTo(Float controlX1,Float controlY1,Float controlX2,Float controlY2,Float anchorX,Float anchorY){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_197_cubicCurveTo)
HXLINE( 199)		this->prepareWrite();
HXLINE( 201)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn());
HXLINE( 202)		this->f->push(controlX1);
HXLINE( 203)		this->f->push(controlY1);
HXLINE( 204)		this->f->push(controlX2);
HXLINE( 205)		this->f->push(controlY2);
HXLINE( 206)		this->f->push(anchorX);
HXLINE( 207)		this->f->push(anchorY);
            	}


HX_DEFINE_DYNAMIC_FUNC6(DrawCommandBuffer_obj,cubicCurveTo,(void))

void DrawCommandBuffer_obj::curveTo(Float controlX,Float controlY,Float anchorX,Float anchorY){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_211_curveTo)
HXLINE( 213)		this->prepareWrite();
HXLINE( 215)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn());
HXLINE( 216)		this->f->push(controlX);
HXLINE( 217)		this->f->push(controlY);
HXLINE( 218)		this->f->push(anchorX);
HXLINE( 219)		this->f->push(anchorY);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,curveTo,(void))

void DrawCommandBuffer_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_224_destroy)
HXLINE( 226)		this->clear();
HXLINE( 228)		this->types = null();
HXLINE( 230)		this->b = null();
HXLINE( 231)		this->i = null();
HXLINE( 232)		this->f = null();
HXLINE( 233)		this->o = null();
HXLINE( 234)		this->ff = null();
HXLINE( 235)		this->ii = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,destroy,(void))

void DrawCommandBuffer_obj::drawCircle(Float x,Float y,Float radius){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_240_drawCircle)
HXLINE( 242)		this->prepareWrite();
HXLINE( 244)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn());
HXLINE( 245)		this->f->push(x);
HXLINE( 246)		this->f->push(y);
HXLINE( 247)		this->f->push(radius);
            	}


HX_DEFINE_DYNAMIC_FUNC3(DrawCommandBuffer_obj,drawCircle,(void))

void DrawCommandBuffer_obj::drawEllipse(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_252_drawEllipse)
HXLINE( 254)		this->prepareWrite();
HXLINE( 256)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn());
HXLINE( 257)		this->f->push(x);
HXLINE( 258)		this->f->push(y);
HXLINE( 259)		this->f->push(width);
HXLINE( 260)		this->f->push(height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawEllipse,(void))

void DrawCommandBuffer_obj::drawQuads( ::openfl::_Vector::FloatVector rects, ::openfl::_Vector::IntVector indices, ::openfl::_Vector::FloatVector transforms){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_265_drawQuads)
HXLINE( 267)		this->prepareWrite();
HXLINE( 269)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_QUADS_dyn());
HXLINE( 270)		this->o->push(rects);
HXLINE( 271)		this->o->push(indices);
HXLINE( 272)		this->o->push(transforms);
            	}


HX_DEFINE_DYNAMIC_FUNC3(DrawCommandBuffer_obj,drawQuads,(void))

void DrawCommandBuffer_obj::drawRect(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_277_drawRect)
HXLINE( 279)		this->prepareWrite();
HXLINE( 281)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn());
HXLINE( 282)		this->f->push(x);
HXLINE( 283)		this->f->push(y);
HXLINE( 284)		this->f->push(width);
HXLINE( 285)		this->f->push(height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawRect,(void))

void DrawCommandBuffer_obj::drawRoundRect(Float x,Float y,Float width,Float height,Float ellipseWidth, ::Dynamic ellipseHeight){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_289_drawRoundRect)
HXLINE( 291)		this->prepareWrite();
HXLINE( 293)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn());
HXLINE( 294)		this->f->push(x);
HXLINE( 295)		this->f->push(y);
HXLINE( 296)		this->f->push(width);
HXLINE( 297)		this->f->push(height);
HXLINE( 298)		this->f->push(ellipseWidth);
HXLINE( 299)		this->o->push(ellipseHeight);
            	}


HX_DEFINE_DYNAMIC_FUNC6(DrawCommandBuffer_obj,drawRoundRect,(void))

void DrawCommandBuffer_obj::drawTriangles( ::openfl::_Vector::FloatVector vertices, ::openfl::_Vector::IntVector indices, ::openfl::_Vector::FloatVector uvtData, ::Dynamic culling){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_304_drawTriangles)
HXLINE( 306)		this->prepareWrite();
HXLINE( 308)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn());
HXLINE( 309)		this->o->push(vertices);
HXLINE( 310)		this->o->push(indices);
HXLINE( 311)		this->o->push(uvtData);
HXLINE( 312)		this->o->push(culling);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawTriangles,(void))

void DrawCommandBuffer_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_317_endFill)
HXLINE( 319)		this->prepareWrite();
HXLINE( 321)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,endFill,(void))

void DrawCommandBuffer_obj::lineBitmapStyle( ::openfl::display::BitmapData bitmap, ::openfl::geom::Matrix matrix,bool repeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_326_lineBitmapStyle)
HXLINE( 328)		this->prepareWrite();
HXLINE( 330)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn());
HXLINE( 331)		this->o->push(bitmap);
HXLINE( 332)		this->o->push(matrix);
HXLINE( 333)		this->b->push(repeat);
HXLINE( 334)		this->b->push(smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,lineBitmapStyle,(void))

void DrawCommandBuffer_obj::lineGradientStyle( ::Dynamic type,::Array< int > colors,::Array< Float > alphas,::Array< int > ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_339_lineGradientStyle)
HXLINE( 341)		this->prepareWrite();
HXLINE( 343)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn());
HXLINE( 344)		this->o->push(type);
HXLINE( 345)		this->ii->push(colors);
HXLINE( 346)		this->ff->push(alphas);
HXLINE( 347)		this->ii->push(ratios);
HXLINE( 348)		this->o->push(matrix);
HXLINE( 349)		this->o->push(spreadMethod);
HXLINE( 350)		this->o->push(interpolationMethod);
HXLINE( 351)		this->f->push(focalPointRatio);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,lineGradientStyle,(void))

void DrawCommandBuffer_obj::lineStyle( ::Dynamic thickness,int color,Float alpha,bool pixelHinting, ::Dynamic scaleMode, ::Dynamic caps, ::Dynamic joints,Float miterLimit){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_356_lineStyle)
HXLINE( 358)		this->prepareWrite();
HXLINE( 360)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn());
HXLINE( 361)		this->o->push(thickness);
HXLINE( 362)		this->i->push(color);
HXLINE( 363)		this->f->push(alpha);
HXLINE( 364)		this->b->push(pixelHinting);
HXLINE( 365)		this->o->push(scaleMode);
HXLINE( 366)		this->o->push(caps);
HXLINE( 367)		this->o->push(joints);
HXLINE( 368)		this->f->push(miterLimit);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,lineStyle,(void))

void DrawCommandBuffer_obj::lineTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_373_lineTo)
HXLINE( 375)		this->prepareWrite();
HXLINE( 377)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn());
HXLINE( 378)		this->f->push(x);
HXLINE( 379)		this->f->push(y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,lineTo,(void))

void DrawCommandBuffer_obj::moveTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_384_moveTo)
HXLINE( 386)		this->prepareWrite();
HXLINE( 388)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn());
HXLINE( 389)		this->f->push(x);
HXLINE( 390)		this->f->push(y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,moveTo,(void))

void DrawCommandBuffer_obj::prepareWrite(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_397_prepareWrite)
HXDLIN( 397)		if (this->copyOnWrite) {
HXLINE( 399)			this->types = this->types->copy();
HXLINE( 400)			this->b = this->b->copy();
HXLINE( 401)			this->i = this->i->copy();
HXLINE( 402)			this->f = this->f->copy();
HXLINE( 403)			this->o = this->o->copy();
HXLINE( 404)			this->ff = this->ff->copy();
HXLINE( 405)			this->ii = this->ii->copy();
HXLINE( 407)			this->copyOnWrite = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,prepareWrite,(void))

void DrawCommandBuffer_obj::overrideMatrix( ::openfl::geom::Matrix matrix){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_414_overrideMatrix)
HXLINE( 416)		this->prepareWrite();
HXLINE( 418)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::OVERRIDE_MATRIX_dyn());
HXLINE( 419)		this->o->push(matrix);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,overrideMatrix,(void))

void DrawCommandBuffer_obj::windingEvenOdd(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_424_windingEvenOdd)
HXLINE( 426)		this->prepareWrite();
HXLINE( 428)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,windingEvenOdd,(void))

void DrawCommandBuffer_obj::windingNonZero(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_433_windingNonZero)
HXLINE( 435)		this->prepareWrite();
HXLINE( 437)		this->types->push(::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,windingNonZero,(void))

int DrawCommandBuffer_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_451_get_length)
HXDLIN( 451)		return this->types->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,get_length,return )

 ::openfl::_internal::renderer::DrawCommandBuffer DrawCommandBuffer_obj::empty;


hx::ObjectPtr< DrawCommandBuffer_obj > DrawCommandBuffer_obj::__new() {
	hx::ObjectPtr< DrawCommandBuffer_obj > __this = new DrawCommandBuffer_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< DrawCommandBuffer_obj > DrawCommandBuffer_obj::__alloc(hx::Ctx *_hx_ctx) {
	DrawCommandBuffer_obj *__this = (DrawCommandBuffer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DrawCommandBuffer_obj), true, "openfl._internal.renderer.DrawCommandBuffer"));
	*(void **)__this = DrawCommandBuffer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DrawCommandBuffer_obj::DrawCommandBuffer_obj()
{
}

void DrawCommandBuffer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DrawCommandBuffer);
	HX_MARK_MEMBER_NAME(types,"types");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_MEMBER_NAME(copyOnWrite,"copyOnWrite");
	HX_MARK_MEMBER_NAME(f,"f");
	HX_MARK_MEMBER_NAME(ff,"ff");
	HX_MARK_MEMBER_NAME(i,"i");
	HX_MARK_MEMBER_NAME(ii,"ii");
	HX_MARK_MEMBER_NAME(o,"o");
	HX_MARK_END_CLASS();
}

void DrawCommandBuffer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(types,"types");
	HX_VISIT_MEMBER_NAME(b,"b");
	HX_VISIT_MEMBER_NAME(copyOnWrite,"copyOnWrite");
	HX_VISIT_MEMBER_NAME(f,"f");
	HX_VISIT_MEMBER_NAME(ff,"ff");
	HX_VISIT_MEMBER_NAME(i,"i");
	HX_VISIT_MEMBER_NAME(ii,"ii");
	HX_VISIT_MEMBER_NAME(o,"o");
}

hx::Val DrawCommandBuffer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b ); }
		if (HX_FIELD_EQ(inName,"f") ) { return hx::Val( f ); }
		if (HX_FIELD_EQ(inName,"i") ) { return hx::Val( i ); }
		if (HX_FIELD_EQ(inName,"o") ) { return hx::Val( o ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"ff") ) { return hx::Val( ff ); }
		if (HX_FIELD_EQ(inName,"ii") ) { return hx::Val( ii ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"types") ) { return hx::Val( types ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_length() ); }
		if (HX_FIELD_EQ(inName,"append") ) { return hx::Val( append_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return hx::Val( lineTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"moveTo") ) { return hx::Val( moveTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curveTo") ) { return hx::Val( curveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		if (HX_FIELD_EQ(inName,"endFill") ) { return hx::Val( endFill_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawRect") ) { return hx::Val( drawRect_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"beginFill") ) { return hx::Val( beginFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawQuads") ) { return hx::Val( drawQuads_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { return hx::Val( lineStyle_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawCircle") ) { return hx::Val( drawCircle_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"copyOnWrite") ) { return hx::Val( copyOnWrite ); }
		if (HX_FIELD_EQ(inName,"drawEllipse") ) { return hx::Val( drawEllipse_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"cubicCurveTo") ) { return hx::Val( cubicCurveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"prepareWrite") ) { return hx::Val( prepareWrite_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { return hx::Val( drawRoundRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawTriangles") ) { return hx::Val( drawTriangles_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"overrideMatrix") ) { return hx::Val( overrideMatrix_dyn() ); }
		if (HX_FIELD_EQ(inName,"windingEvenOdd") ) { return hx::Val( windingEvenOdd_dyn() ); }
		if (HX_FIELD_EQ(inName,"windingNonZero") ) { return hx::Val( windingNonZero_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"beginBitmapFill") ) { return hx::Val( beginBitmapFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"beginShaderFill") ) { return hx::Val( beginShaderFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineBitmapStyle") ) { return hx::Val( lineBitmapStyle_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"beginGradientFill") ) { return hx::Val( beginGradientFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineGradientStyle") ) { return hx::Val( lineGradientStyle_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool DrawCommandBuffer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = ( empty ); return true; }
	}
	return false;
}

hx::Val DrawCommandBuffer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"f") ) { f=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"i") ) { i=inValue.Cast< ::Array< int > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"o") ) { o=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"ff") ) { ff=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ii") ) { ii=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"types") ) { types=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"copyOnWrite") ) { copyOnWrite=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool DrawCommandBuffer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { empty=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
	}
	return false;
}

void DrawCommandBuffer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	outFields->push(HX_HCSTRING("types","\x79","\x70","\xcb","\x1a"));
	outFields->push(HX_HCSTRING("b","\x62","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("copyOnWrite","\x0b","\x88","\xab","\xbc"));
	outFields->push(HX_HCSTRING("f","\x66","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("ff","\x40","\x59","\x00","\x00"));
	outFields->push(HX_HCSTRING("i","\x69","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("ii","\xe0","\x5b","\x00","\x00"));
	outFields->push(HX_HCSTRING("o","\x6f","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DrawCommandBuffer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(DrawCommandBuffer_obj,types),HX_HCSTRING("types","\x79","\x70","\xcb","\x1a")},
	{hx::fsObject /*Array< bool >*/ ,(int)offsetof(DrawCommandBuffer_obj,b),HX_HCSTRING("b","\x62","\x00","\x00","\x00")},
	{hx::fsBool,(int)offsetof(DrawCommandBuffer_obj,copyOnWrite),HX_HCSTRING("copyOnWrite","\x0b","\x88","\xab","\xbc")},
	{hx::fsObject /*Array< Float >*/ ,(int)offsetof(DrawCommandBuffer_obj,f),HX_HCSTRING("f","\x66","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(DrawCommandBuffer_obj,ff),HX_HCSTRING("ff","\x40","\x59","\x00","\x00")},
	{hx::fsObject /*Array< int >*/ ,(int)offsetof(DrawCommandBuffer_obj,i),HX_HCSTRING("i","\x69","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(DrawCommandBuffer_obj,ii),HX_HCSTRING("ii","\xe0","\x5b","\x00","\x00")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(DrawCommandBuffer_obj,o),HX_HCSTRING("o","\x6f","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo DrawCommandBuffer_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &DrawCommandBuffer_obj::empty,HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String DrawCommandBuffer_obj_sMemberFields[] = {
	HX_HCSTRING("types","\x79","\x70","\xcb","\x1a"),
	HX_HCSTRING("b","\x62","\x00","\x00","\x00"),
	HX_HCSTRING("copyOnWrite","\x0b","\x88","\xab","\xbc"),
	HX_HCSTRING("f","\x66","\x00","\x00","\x00"),
	HX_HCSTRING("ff","\x40","\x59","\x00","\x00"),
	HX_HCSTRING("i","\x69","\x00","\x00","\x00"),
	HX_HCSTRING("ii","\xe0","\x5b","\x00","\x00"),
	HX_HCSTRING("o","\x6f","\x00","\x00","\x00"),
	HX_HCSTRING("append","\xda","\xe1","\xd3","\x8f"),
	HX_HCSTRING("beginBitmapFill","\x9b","\xc9","\x07","\x6a"),
	HX_HCSTRING("beginFill","\x4c","\xad","\x95","\x8c"),
	HX_HCSTRING("beginGradientFill","\x5c","\x3c","\x03","\x2e"),
	HX_HCSTRING("beginShaderFill","\xd1","\x4b","\x43","\x67"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("cubicCurveTo","\xe0","\x07","\x90","\x2e"),
	HX_HCSTRING("curveTo","\x0a","\x60","\x88","\xce"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("drawCircle","\x34","\xed","\xd0","\x97"),
	HX_HCSTRING("drawEllipse","\x3a","\x85","\xce","\x54"),
	HX_HCSTRING("drawQuads","\x28","\xab","\xf2","\x25"),
	HX_HCSTRING("drawRect","\x48","\xf7","\x10","\x60"),
	HX_HCSTRING("drawRoundRect","\xee","\xc3","\xaa","\xe2"),
	HX_HCSTRING("drawTriangles","\x07","\x44","\x68","\xde"),
	HX_HCSTRING("endFill","\xfe","\x87","\xe0","\x25"),
	HX_HCSTRING("lineBitmapStyle","\x2e","\x3f","\x21","\x45"),
	HX_HCSTRING("lineGradientStyle","\x8d","\x24","\xf2","\xc1"),
	HX_HCSTRING("lineStyle","\x9d","\xa8","\x18","\xcb"),
	HX_HCSTRING("lineTo","\x8f","\x46","\xa0","\xec"),
	HX_HCSTRING("moveTo","\xec","\xd2","\xac","\xcc"),
	HX_HCSTRING("prepareWrite","\xd8","\x61","\x09","\x44"),
	HX_HCSTRING("overrideMatrix","\xad","\x8d","\xa9","\xb9"),
	HX_HCSTRING("windingEvenOdd","\xbb","\x5c","\x0a","\x0b"),
	HX_HCSTRING("windingNonZero","\xdb","\xb4","\x3f","\xd6"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	::String(null()) };

static void DrawCommandBuffer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DrawCommandBuffer_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(DrawCommandBuffer_obj::empty,"empty");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DrawCommandBuffer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DrawCommandBuffer_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(DrawCommandBuffer_obj::empty,"empty");
};

#endif

hx::Class DrawCommandBuffer_obj::__mClass;

static ::String DrawCommandBuffer_obj_sStaticFields[] = {
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	::String(null())
};

void DrawCommandBuffer_obj::__register()
{
	hx::Object *dummy = new DrawCommandBuffer_obj;
	DrawCommandBuffer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.DrawCommandBuffer","\x2c","\xee","\x3f","\x7e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DrawCommandBuffer_obj::__GetStatic;
	__mClass->mSetStaticField = &DrawCommandBuffer_obj::__SetStatic;
	__mClass->mMarkFunc = DrawCommandBuffer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DrawCommandBuffer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DrawCommandBuffer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DrawCommandBuffer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DrawCommandBuffer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DrawCommandBuffer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DrawCommandBuffer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DrawCommandBuffer_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_d2863eb1aba9f5f0_28_boot)
HXDLIN(  28)		empty =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
