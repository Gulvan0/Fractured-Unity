// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_battle_IObservableModel
#include <battle/IObservableModel.h>
#endif
#ifndef INCLUDED_battle_enums_InputMode
#include <battle/enums/InputMode.h>
#endif
#ifndef INCLUDED_battle_struct_UnitCoords
#include <battle/struct/UnitCoords.h>
#endif

namespace battle{


static ::String IObservableModel_obj_sMemberFields[] = {
	HX_HCSTRING("getInputMode","\x17","\x2d","\xe2","\x1e"),
	HX_HCSTRING("targetAvaibility","\x17","\xce","\x73","\x80"),
	HX_HCSTRING("choose","\xd7","\x5a","\xb4","\xc0"),
	HX_HCSTRING("targetAndUse","\xe1","\x43","\x90","\x1d"),
	HX_HCSTRING("skipTurn","\x9c","\xd9","\x5a","\xc3"),
	HX_HCSTRING("quit","\xcf","\x3f","\x0a","\x4b"),
	HX_HCSTRING("respond","\x55","\x89","\x0b","\x68"),
	::String(null()) };

static void IObservableModel_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IObservableModel_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IObservableModel_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IObservableModel_obj::__mClass,"__mClass");
};

#endif

hx::Class IObservableModel_obj::__mClass;

void IObservableModel_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("battle.IObservableModel","\xd3","\xc4","\xa2","\xbe");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mMarkFunc = IObservableModel_obj_sMarkStatics;
	__mClass->mMembers = hx::Class_obj::dupFunctions(IObservableModel_obj_sMemberFields);
	__mClass->mCanCast = hx::TIsInterface< (int)0xf5b152d5 >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IObservableModel_obj_sVisitStatics;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace battle
