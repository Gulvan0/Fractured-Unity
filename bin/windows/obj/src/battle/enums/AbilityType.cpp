// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_battle_enums_AbilityType
#include <battle/enums/AbilityType.h>
#endif
namespace battle{
namespace enums{

::battle::enums::AbilityType AbilityType_obj::Active;

::battle::enums::AbilityType AbilityType_obj::Passive;

bool AbilityType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Active",e6,b5,da,4a)) { outValue = AbilityType_obj::Active; return true; }
	if (inName==HX_("Passive",87,6f,bb,4a)) { outValue = AbilityType_obj::Passive; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(AbilityType_obj)

int AbilityType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Active",e6,b5,da,4a)) return 0;
	if (inName==HX_("Passive",87,6f,bb,4a)) return 1;
	return super::__FindIndex(inName);
}

int AbilityType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Active",e6,b5,da,4a)) return 0;
	if (inName==HX_("Passive",87,6f,bb,4a)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val AbilityType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Active",e6,b5,da,4a)) return Active;
	if (inName==HX_("Passive",87,6f,bb,4a)) return Passive;
	return super::__Field(inName,inCallProp);
}

static ::String AbilityType_obj_sStaticFields[] = {
	HX_("Active",e6,b5,da,4a),
	HX_("Passive",87,6f,bb,4a),
	::String(null())
};

static void AbilityType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AbilityType_obj::Active,"Active");
	HX_MARK_MEMBER_NAME(AbilityType_obj::Passive,"Passive");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AbilityType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AbilityType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(AbilityType_obj::Active,"Active");
	HX_VISIT_MEMBER_NAME(AbilityType_obj::Passive,"Passive");
};
#endif

hx::Class AbilityType_obj::__mClass;

Dynamic __Create_AbilityType_obj() { return new AbilityType_obj; }

void AbilityType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("battle.enums.AbilityType","\x92","\xb0","\x2a","\x26"), hx::TCanCast< AbilityType_obj >,AbilityType_obj_sStaticFields,0,
	&__Create_AbilityType_obj, &__Create,
	&super::__SGetClass(), &CreateAbilityType_obj, AbilityType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , AbilityType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &AbilityType_obj::__GetStatic;
}

void AbilityType_obj::__boot()
{
Active = hx::CreateEnum< AbilityType_obj >(HX_HCSTRING("Active","\xe6","\xb5","\xda","\x4a"),0,0);
Passive = hx::CreateEnum< AbilityType_obj >(HX_HCSTRING("Passive","\x87","\x6f","\xbb","\x4a"),1,0);
}


} // end namespace battle
} // end namespace enums
