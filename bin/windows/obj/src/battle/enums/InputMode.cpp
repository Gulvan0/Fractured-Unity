// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_battle_enums_InputMode
#include <battle/enums/InputMode.h>
#endif
namespace battle{
namespace enums{

::battle::enums::InputMode InputMode_obj::Choosing;

::battle::enums::InputMode InputMode_obj::None;

::battle::enums::InputMode InputMode_obj::Targeting;

bool InputMode_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Choosing",f4,23,57,74)) { outValue = InputMode_obj::Choosing; return true; }
	if (inName==HX_("None",d8,3e,e3,33)) { outValue = InputMode_obj::None; return true; }
	if (inName==HX_("Targeting",11,22,1a,0b)) { outValue = InputMode_obj::Targeting; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(InputMode_obj)

int InputMode_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Choosing",f4,23,57,74)) return 0;
	if (inName==HX_("None",d8,3e,e3,33)) return 2;
	if (inName==HX_("Targeting",11,22,1a,0b)) return 1;
	return super::__FindIndex(inName);
}

int InputMode_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Choosing",f4,23,57,74)) return 0;
	if (inName==HX_("None",d8,3e,e3,33)) return 0;
	if (inName==HX_("Targeting",11,22,1a,0b)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val InputMode_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Choosing",f4,23,57,74)) return Choosing;
	if (inName==HX_("None",d8,3e,e3,33)) return None;
	if (inName==HX_("Targeting",11,22,1a,0b)) return Targeting;
	return super::__Field(inName,inCallProp);
}

static ::String InputMode_obj_sStaticFields[] = {
	HX_("Choosing",f4,23,57,74),
	HX_("Targeting",11,22,1a,0b),
	HX_("None",d8,3e,e3,33),
	::String(null())
};

static void InputMode_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(InputMode_obj::Choosing,"Choosing");
	HX_MARK_MEMBER_NAME(InputMode_obj::None,"None");
	HX_MARK_MEMBER_NAME(InputMode_obj::Targeting,"Targeting");
};

#ifdef HXCPP_VISIT_ALLOCS
static void InputMode_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(InputMode_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(InputMode_obj::Choosing,"Choosing");
	HX_VISIT_MEMBER_NAME(InputMode_obj::None,"None");
	HX_VISIT_MEMBER_NAME(InputMode_obj::Targeting,"Targeting");
};
#endif

hx::Class InputMode_obj::__mClass;

Dynamic __Create_InputMode_obj() { return new InputMode_obj; }

void InputMode_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("battle.enums.InputMode","\x1b","\x24","\x59","\x4e"), hx::TCanCast< InputMode_obj >,InputMode_obj_sStaticFields,0,
	&__Create_InputMode_obj, &__Create,
	&super::__SGetClass(), &CreateInputMode_obj, InputMode_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , InputMode_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &InputMode_obj::__GetStatic;
}

void InputMode_obj::__boot()
{
Choosing = hx::CreateEnum< InputMode_obj >(HX_HCSTRING("Choosing","\xf4","\x23","\x57","\x74"),0,0);
None = hx::CreateEnum< InputMode_obj >(HX_HCSTRING("None","\xd8","\x3e","\xe3","\x33"),2,0);
Targeting = hx::CreateEnum< InputMode_obj >(HX_HCSTRING("Targeting","\x11","\x22","\x1a","\x0b"),1,0);
}


} // end namespace battle
} // end namespace enums
