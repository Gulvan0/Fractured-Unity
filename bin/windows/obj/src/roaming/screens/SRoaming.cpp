// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_AbilityScreenButton
#include <AbilityScreenButton.h>
#endif
#ifndef INCLUDED_Assets
#include <Assets.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_NextBattle
#include <NextBattle.h>
#endif
#ifndef INCLUDED_Progress
#include <Progress.h>
#endif
#ifndef INCLUDED_SSprite
#include <SSprite.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_roaming_screens_ICanvas
#include <roaming/screens/ICanvas.h>
#endif
#ifndef INCLUDED_roaming_screens_IScreen
#include <roaming/screens/IScreen.h>
#endif
#ifndef INCLUDED_roaming_screens_SRoaming
#include <roaming/screens/SRoaming.h>
#endif
#ifndef INCLUDED_roaming_screens_Screen
#include <roaming/screens/Screen.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_eeaa99615da22b48_28_new,"roaming.screens.SRoaming","new",0x36db03b4,"roaming.screens.SRoaming.new","roaming/screens/SRoaming.hx",28,0x4ffe007a)
HX_LOCAL_STACK_FRAME(_hx_pos_eeaa99615da22b48_22_abScreenRequest,"roaming.screens.SRoaming","abScreenRequest",0xc480f4f6,"roaming.screens.SRoaming.abScreenRequest","roaming/screens/SRoaming.hx",22,0x4ffe007a)
HX_LOCAL_STACK_FRAME(_hx_pos_eeaa99615da22b48_45_init,"roaming.screens.SRoaming","init",0xc580f13c,"roaming.screens.SRoaming.init","roaming/screens/SRoaming.hx",45,0x4ffe007a)
HX_LOCAL_STACK_FRAME(_hx_pos_eeaa99615da22b48_54_bgX,"roaming.screens.SRoaming","bgX",0x36d1ea47,"roaming.screens.SRoaming.bgX","roaming/screens/SRoaming.hx",54,0x4ffe007a)
HX_LOCAL_STACK_FRAME(_hx_pos_eeaa99615da22b48_62_bgY,"roaming.screens.SRoaming","bgY",0x36d1ea48,"roaming.screens.SRoaming.bgY","roaming/screens/SRoaming.hx",62,0x4ffe007a)
HX_LOCAL_STACK_FRAME(_hx_pos_eeaa99615da22b48_70_arrowX,"roaming.screens.SRoaming","arrowX",0xfd3baf9b,"roaming.screens.SRoaming.arrowX","roaming/screens/SRoaming.hx",70,0x4ffe007a)
HX_LOCAL_STACK_FRAME(_hx_pos_eeaa99615da22b48_78_arrowY,"roaming.screens.SRoaming","arrowY",0xfd3baf9c,"roaming.screens.SRoaming.arrowY","roaming/screens/SRoaming.hx",78,0x4ffe007a)
HX_LOCAL_STACK_FRAME(_hx_pos_eeaa99615da22b48_50_boot,"roaming.screens.SRoaming","boot",0xc0e13a5e,"roaming.screens.SRoaming.boot","roaming/screens/SRoaming.hx",50,0x4ffe007a)
namespace roaming{
namespace screens{

void SRoaming_obj::__construct(::Dynamic canvas){
            	HX_GC_STACKFRAME(&_hx_pos_eeaa99615da22b48_28_new)
HXLINE(  29)		super::__construct();
HXLINE(  30)		this->canvas = canvas;
HXLINE(  32)		int zone = ::Main_obj::progress->zone;
HXLINE(  34)		this->background = ::Assets_obj::getRoamingBG(zone);
HXLINE(  35)		this->nextBattle =  ::NextBattle_obj::__alloc( HX_CTX );
HXLINE(  36)		this->abilityScreenBtn =  ::AbilityScreenButton_obj::__alloc( HX_CTX );
HXLINE(  38)		Float _hx_tmp;
HXDLIN(  38)		if ((zone == (int)0)) {
HXLINE(  38)			_hx_tmp = ((Float)-25.35);
            		}
            		else {
HXLINE(  38)			_hx_tmp = (int)-1;
            		}
HXDLIN(  38)		Float _hx_tmp1;
HXDLIN(  38)		if ((zone == (int)0)) {
HXLINE(  38)			_hx_tmp1 = ((Float)-21.45);
            		}
            		else {
HXLINE(  38)			_hx_tmp1 = (int)-1;
            		}
HXDLIN(  38)		this->add(this->background,_hx_tmp,_hx_tmp1);
HXLINE(  39)		Float _hx_tmp2;
HXDLIN(  39)		if ((zone == (int)0)) {
HXLINE(  39)			_hx_tmp2 = ((Float)436.35);
            		}
            		else {
HXLINE(  39)			_hx_tmp2 = (int)-1;
            		}
HXDLIN(  39)		Float _hx_tmp3;
HXDLIN(  39)		if ((zone == (int)0)) {
HXLINE(  39)			_hx_tmp3 = ((Float)398.15);
            		}
            		else {
HXLINE(  39)			_hx_tmp3 = (int)-1;
            		}
HXDLIN(  39)		this->add(this->nextBattle,_hx_tmp2,_hx_tmp3);
HXLINE(  40)		this->add(this->abilityScreenBtn,::roaming::screens::SRoaming_obj::abScrBtn->x,::roaming::screens::SRoaming_obj::abScrBtn->y);
            	}

Dynamic SRoaming_obj::__CreateEmpty() { return new SRoaming_obj; }

void *SRoaming_obj::_hx_vtable = 0;

Dynamic SRoaming_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SRoaming_obj > _hx_result = new SRoaming_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool SRoaming_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x14f84e00) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x14f84e00;
			}
		} else {
			return inClassId==(int)0x17120186 || inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x3f2b00af) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x3f2b00af;
		} else {
			return inClassId==(int)0x739fd0b8;
		}
	}
}

static ::roaming::screens::IScreen_obj _hx_roaming_screens_SRoaming__hx_roaming_screens_IScreen= {
	( void (hx::Object::*)())&::roaming::screens::SRoaming_obj::init,
};

void *SRoaming_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xb0301507: return &_hx_roaming_screens_SRoaming__hx_roaming_screens_IScreen;
	}
	return super::_hx_getInterface(inHash);
}

void SRoaming_obj::abScreenRequest( ::openfl::events::MouseEvent e){
            	HX_STACKFRAME(&_hx_pos_eeaa99615da22b48_22_abScreenRequest)
HXLINE(  23)		this->abilityScreenBtn->removeEventListener(HX_("click",48,7c,5e,48),this->abScreenRequest_dyn(),null());
HXLINE(  24)		::roaming::screens::ICanvas_obj::switchTo(this->canvas,::roaming::screens::Screen_obj::Ability_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC1(SRoaming_obj,abScreenRequest,(void))

void SRoaming_obj::init(){
            	HX_STACKFRAME(&_hx_pos_eeaa99615da22b48_45_init)
HXDLIN(  45)		this->abilityScreenBtn->addEventListener(HX_("click",48,7c,5e,48),this->abScreenRequest_dyn(),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(SRoaming_obj,init,(void))

 ::openfl::geom::Point SRoaming_obj::abScrBtn;

Float SRoaming_obj::bgX(int zone){
            	HX_STACKFRAME(&_hx_pos_eeaa99615da22b48_54_bgX)
HXDLIN(  54)		if ((zone == (int)0)) {
HXLINE(  55)			return ((Float)-25.35);
            		}
            		else {
HXLINE(  57)			return (int)-1;
            		}
HXLINE(  54)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SRoaming_obj,bgX,return )

Float SRoaming_obj::bgY(int zone){
            	HX_STACKFRAME(&_hx_pos_eeaa99615da22b48_62_bgY)
HXDLIN(  62)		if ((zone == (int)0)) {
HXLINE(  63)			return ((Float)-21.45);
            		}
            		else {
HXLINE(  65)			return (int)-1;
            		}
HXLINE(  62)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SRoaming_obj,bgY,return )

Float SRoaming_obj::arrowX(int zone){
            	HX_STACKFRAME(&_hx_pos_eeaa99615da22b48_70_arrowX)
HXDLIN(  70)		if ((zone == (int)0)) {
HXLINE(  71)			return ((Float)436.35);
            		}
            		else {
HXLINE(  73)			return (int)-1;
            		}
HXLINE(  70)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SRoaming_obj,arrowX,return )

Float SRoaming_obj::arrowY(int zone){
            	HX_STACKFRAME(&_hx_pos_eeaa99615da22b48_78_arrowY)
HXDLIN(  78)		if ((zone == (int)0)) {
HXLINE(  79)			return ((Float)398.15);
            		}
            		else {
HXLINE(  81)			return (int)-1;
            		}
HXLINE(  78)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SRoaming_obj,arrowY,return )


hx::ObjectPtr< SRoaming_obj > SRoaming_obj::__new(::Dynamic canvas) {
	hx::ObjectPtr< SRoaming_obj > __this = new SRoaming_obj();
	__this->__construct(canvas);
	return __this;
}

hx::ObjectPtr< SRoaming_obj > SRoaming_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic canvas) {
	SRoaming_obj *__this = (SRoaming_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SRoaming_obj), true, "roaming.screens.SRoaming"));
	*(void **)__this = SRoaming_obj::_hx_vtable;
	__this->__construct(canvas);
	return __this;
}

SRoaming_obj::SRoaming_obj()
{
}

void SRoaming_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SRoaming);
	HX_MARK_MEMBER_NAME(canvas,"canvas");
	HX_MARK_MEMBER_NAME(background,"background");
	HX_MARK_MEMBER_NAME(nextBattle,"nextBattle");
	HX_MARK_MEMBER_NAME(abilityScreenBtn,"abilityScreenBtn");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void SRoaming_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(canvas,"canvas");
	HX_VISIT_MEMBER_NAME(background,"background");
	HX_VISIT_MEMBER_NAME(nextBattle,"nextBattle");
	HX_VISIT_MEMBER_NAME(abilityScreenBtn,"abilityScreenBtn");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val SRoaming_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"canvas") ) { return hx::Val( canvas ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { return hx::Val( background ); }
		if (HX_FIELD_EQ(inName,"nextBattle") ) { return hx::Val( nextBattle ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"abScreenRequest") ) { return hx::Val( abScreenRequest_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"abilityScreenBtn") ) { return hx::Val( abilityScreenBtn ); }
	}
	return super::__Field(inName,inCallProp);
}

bool SRoaming_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bgX") ) { outValue = bgX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bgY") ) { outValue = bgY_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"arrowX") ) { outValue = arrowX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"arrowY") ) { outValue = arrowY_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"abScrBtn") ) { outValue = ( abScrBtn ); return true; }
	}
	return false;
}

hx::Val SRoaming_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"canvas") ) { canvas=inValue.Cast< ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"background") ) { background=inValue.Cast<  ::openfl::display::MovieClip >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nextBattle") ) { nextBattle=inValue.Cast<  ::openfl::display::MovieClip >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"abilityScreenBtn") ) { abilityScreenBtn=inValue.Cast<  ::openfl::display::MovieClip >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool SRoaming_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"abScrBtn") ) { abScrBtn=ioValue.Cast<  ::openfl::geom::Point >(); return true; }
	}
	return false;
}

void SRoaming_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("canvas","\xd8","\x54","\x42","\xb8"));
	outFields->push(HX_HCSTRING("background","\xee","\x93","\x1d","\x26"));
	outFields->push(HX_HCSTRING("nextBattle","\x8b","\x76","\x0e","\x0b"));
	outFields->push(HX_HCSTRING("abilityScreenBtn","\x46","\x23","\x20","\xe1"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo SRoaming_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::roaming::screens::ICanvas*/ ,(int)offsetof(SRoaming_obj,canvas),HX_HCSTRING("canvas","\xd8","\x54","\x42","\xb8")},
	{hx::fsObject /*::openfl::display::MovieClip*/ ,(int)offsetof(SRoaming_obj,background),HX_HCSTRING("background","\xee","\x93","\x1d","\x26")},
	{hx::fsObject /*::openfl::display::MovieClip*/ ,(int)offsetof(SRoaming_obj,nextBattle),HX_HCSTRING("nextBattle","\x8b","\x76","\x0e","\x0b")},
	{hx::fsObject /*::openfl::display::MovieClip*/ ,(int)offsetof(SRoaming_obj,abilityScreenBtn),HX_HCSTRING("abilityScreenBtn","\x46","\x23","\x20","\xe1")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo SRoaming_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::openfl::geom::Point*/ ,(void *) &SRoaming_obj::abScrBtn,HX_HCSTRING("abScrBtn","\x5b","\xe1","\x2b","\x13")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String SRoaming_obj_sMemberFields[] = {
	HX_HCSTRING("canvas","\xd8","\x54","\x42","\xb8"),
	HX_HCSTRING("background","\xee","\x93","\x1d","\x26"),
	HX_HCSTRING("nextBattle","\x8b","\x76","\x0e","\x0b"),
	HX_HCSTRING("abilityScreenBtn","\x46","\x23","\x20","\xe1"),
	HX_HCSTRING("abScreenRequest","\xa2","\x13","\x50","\x23"),
	HX_HCSTRING("init","\x10","\x3b","\xbb","\x45"),
	::String(null()) };

static void SRoaming_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SRoaming_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(SRoaming_obj::abScrBtn,"abScrBtn");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SRoaming_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SRoaming_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(SRoaming_obj::abScrBtn,"abScrBtn");
};

#endif

hx::Class SRoaming_obj::__mClass;

static ::String SRoaming_obj_sStaticFields[] = {
	HX_HCSTRING("abScrBtn","\x5b","\xe1","\x2b","\x13"),
	HX_HCSTRING("bgX","\xf3","\xb6","\x4a","\x00"),
	HX_HCSTRING("bgY","\xf4","\xb6","\x4a","\x00"),
	HX_HCSTRING("arrowX","\x6f","\x16","\xfb","\xb7"),
	HX_HCSTRING("arrowY","\x70","\x16","\xfb","\xb7"),
	::String(null())
};

void SRoaming_obj::__register()
{
	hx::Object *dummy = new SRoaming_obj;
	SRoaming_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("roaming.screens.SRoaming","\xc2","\x59","\xc2","\xb1");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SRoaming_obj::__GetStatic;
	__mClass->mSetStaticField = &SRoaming_obj::__SetStatic;
	__mClass->mMarkFunc = SRoaming_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(SRoaming_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SRoaming_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SRoaming_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SRoaming_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SRoaming_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SRoaming_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void SRoaming_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_eeaa99615da22b48_50_boot)
HXDLIN(  50)		abScrBtn =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,((Float)68.45),(int)-21);
            	}
}

} // end namespace roaming
} // end namespace screens
