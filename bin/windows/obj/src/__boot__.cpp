// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_roaming_screens_Screen
#include <roaming/screens/Screen.h>
#endif
#ifndef INCLUDED_roaming_enums_Attribute
#include <roaming/enums/Attribute.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsFillType
#include <openfl/display/GraphicsFillType.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsDataType
#include <openfl/display/GraphicsDataType.h>
#endif
#ifndef INCLUDED_openfl__internal_timeline_FrameObjectType
#include <openfl/_internal/timeline/FrameObjectType.h>
#endif
#ifndef INCLUDED_openfl__internal_swf_ShapeCommand
#include <openfl/_internal/swf/ShapeCommand.h>
#endif
#ifndef INCLUDED_openfl__internal_swf_FilterType
#include <openfl/_internal/swf/FilterType.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_RegisterUsage
#include <openfl/_internal/stage3D/_AGALConverter/RegisterUsage.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_ProgramType
#include <openfl/_internal/stage3D/_AGALConverter/ProgramType.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandType
#include <openfl/_internal/renderer/DrawCommandType.h>
#endif
#ifndef INCLUDED_lime_ui_MouseCursor
#include <lime/ui/MouseCursor.h>
#endif
#ifndef INCLUDED_lime_system__ThreadPool_ThreadPoolMessageType
#include <lime/system/_ThreadPool/ThreadPoolMessageType.h>
#endif
#ifndef INCLUDED_lime_system_SensorType
#include <lime/system/SensorType.h>
#endif
#ifndef INCLUDED_lime_system_Endian
#include <lime/system/Endian.h>
#endif
#ifndef INCLUDED_lime_media_AudioContext
#include <lime/media/AudioContext.h>
#endif
#ifndef INCLUDED_lime_utils_TAError
#include <lime/utils/TAError.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLContextType
#include <lime/graphics/opengl/GLContextType.h>
#endif
#ifndef INCLUDED_lime_graphics_format_BMPType
#include <lime/graphics/format/BMPType.h>
#endif
#ifndef INCLUDED_lime_graphics_console_Primitive
#include <lime/graphics/console/Primitive.h>
#endif
#ifndef INCLUDED_lime_graphics_RendererType
#include <lime/graphics/RendererType.h>
#endif
#ifndef INCLUDED_lime_graphics_RenderContext
#include <lime/graphics/RenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageType
#include <lime/graphics/ImageType.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageChannel
#include <lime/graphics/ImageChannel.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_haxe_StackItem
#include <haxe/StackItem.h>
#endif
#ifndef INCLUDED_battle_vision_BarType
#include <battle/vision/BarType.h>
#endif
#ifndef INCLUDED_battle_vision_TextfieldType
#include <battle/vision/TextfieldType.h>
#endif
#ifndef INCLUDED_battle_enums_UnitType
#include <battle/enums/UnitType.h>
#endif
#ifndef INCLUDED_battle_enums_Team
#include <battle/enums/Team.h>
#endif
#ifndef INCLUDED_battle_enums_StrikeType
#include <battle/enums/StrikeType.h>
#endif
#ifndef INCLUDED_battle_enums_Source
#include <battle/enums/Source.h>
#endif
#ifndef INCLUDED_battle_enums_InputMode
#include <battle/enums/InputMode.h>
#endif
#ifndef INCLUDED_battle_enums_BuffMode
#include <battle/enums/BuffMode.h>
#endif
#ifndef INCLUDED_battle_enums_AbilityType
#include <battle/enums/AbilityType.h>
#endif
#ifndef INCLUDED_battle_enums_AbilityTarget
#include <battle/enums/AbilityTarget.h>
#endif
#ifndef INCLUDED_battle_data_BattleEvent
#include <battle/data/BattleEvent.h>
#endif
#ifndef INCLUDED_battle_TargetResult
#include <battle/TargetResult.h>
#endif
#ifndef INCLUDED_battle_ChooseResult
#include <battle/ChooseResult.h>
#endif
#ifndef INCLUDED_Zone
#include <Zone.h>
#endif
#ifndef INCLUDED_ValueType
#include <ValueType.h>
#endif
#ifndef INCLUDED_ID
#include <ID.h>
#endif
#ifndef INCLUDED_Element
#include <Element.h>
#endif
#ifndef INCLUDED_roaming_screens_SRoaming
#include <roaming/screens/SRoaming.h>
#endif
#ifndef INCLUDED_openfl_utils__Endian_Endian_Impl_
#include <openfl/utils/_Endian/Endian_Impl_.h>
#endif
#ifndef INCLUDED_openfl_utils__CompressionAlgorithm_CompressionAlgorithm_Impl_
#include <openfl/utils/_CompressionAlgorithm/CompressionAlgorithm_Impl_.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils__ByteArray_ByteArray_Impl_
#include <openfl/utils/_ByteArray/ByteArray_Impl_.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif
#ifndef INCLUDED_openfl_ui__MouseCursor_MouseCursor_Impl_
#include <openfl/ui/_MouseCursor/MouseCursor_Impl_.h>
#endif
#ifndef INCLUDED_openfl_ui_Mouse
#include <openfl/ui/Mouse.h>
#endif
#ifndef INCLUDED_openfl_ui_Keyboard
#include <openfl/ui/Keyboard.h>
#endif
#ifndef INCLUDED_openfl_ui_GameInputDevice
#include <openfl/ui/GameInputDevice.h>
#endif
#ifndef INCLUDED_openfl_ui_GameInput
#include <openfl/ui/GameInput.h>
#endif
#ifndef INCLUDED_openfl_text__TextFormatAlign_TextFormatAlign_Impl_
#include <openfl/text/_TextFormatAlign/TextFormatAlign_Impl_.h>
#endif
#ifndef INCLUDED_openfl_text__TextFieldType_TextFieldType_Impl_
#include <openfl/text/_TextFieldType/TextFieldType_Impl_.h>
#endif
#ifndef INCLUDED_openfl_text__TextFieldAutoSize_TextFieldAutoSize_Impl_
#include <openfl/text/_TextFieldAutoSize/TextFieldAutoSize_Impl_.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_openfl_text__GridFitType_GridFitType_Impl_
#include <openfl/text/_GridFitType/GridFitType_Impl_.h>
#endif
#ifndef INCLUDED_openfl_text__FontType_FontType_Impl_
#include <openfl/text/_FontType/FontType_Impl_.h>
#endif
#ifndef INCLUDED_openfl_text__FontStyle_FontStyle_Impl_
#include <openfl/text/_FontStyle/FontStyle_Impl_.h>
#endif
#ifndef INCLUDED_openfl_text__AntiAliasType_AntiAliasType_Impl_
#include <openfl/text/_AntiAliasType/AntiAliasType_Impl_.h>
#endif
#ifndef INCLUDED_openfl_system_System
#include <openfl/system/System.h>
#endif
#ifndef INCLUDED_openfl_system_SecurityDomain
#include <openfl/system/SecurityDomain.h>
#endif
#ifndef INCLUDED_openfl_system_ApplicationDomain
#include <openfl/system/ApplicationDomain.h>
#endif
#ifndef INCLUDED_openfl_net_URLRequestDefaults
#include <openfl/net/URLRequestDefaults.h>
#endif
#ifndef INCLUDED_openfl_net__URLLoaderDataFormat_URLLoaderDataFormat_Impl_
#include <openfl/net/_URLLoaderDataFormat/URLLoaderDataFormat_Impl_.h>
#endif
#ifndef INCLUDED_openfl_net_NetConnection
#include <openfl/net/NetConnection.h>
#endif
#ifndef INCLUDED_openfl_media_SoundMixer
#include <openfl/media/SoundMixer.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_geom__Orientation3D_Orientation3D_Impl_
#include <openfl/geom/_Orientation3D/Orientation3D_Impl_.h>
#endif
#ifndef INCLUDED_openfl_filters_GlowFilter
#include <openfl/filters/GlowFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_ConvolutionFilter
#include <openfl/filters/ConvolutionFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_ColorMatrixFilter
#include <openfl/filters/ColorMatrixFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_BlurFilter
#include <openfl/filters/BlurFilter.h>
#endif
#ifndef INCLUDED_openfl_events_UncaughtErrorEvent
#include <openfl/events/UncaughtErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_TouchEvent
#include <openfl/events/TouchEvent.h>
#endif
#ifndef INCLUDED_openfl_events_SecurityErrorEvent
#include <openfl/events/SecurityErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_RenderEvent
#include <openfl/events/RenderEvent.h>
#endif
#ifndef INCLUDED_openfl_events_ProgressEvent
#include <openfl/events/ProgressEvent.h>
#endif
#ifndef INCLUDED_openfl_events_NetStatusEvent
#include <openfl/events/NetStatusEvent.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_events_KeyboardEvent
#include <openfl/events/KeyboardEvent.h>
#endif
#ifndef INCLUDED_openfl_events_IOErrorEvent
#include <openfl/events/IOErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_HTTPStatusEvent
#include <openfl/events/HTTPStatusEvent.h>
#endif
#ifndef INCLUDED_openfl_events_GameInputEvent
#include <openfl/events/GameInputEvent.h>
#endif
#ifndef INCLUDED_openfl_events_FullScreenEvent
#include <openfl/events/FullScreenEvent.h>
#endif
#ifndef INCLUDED_openfl_events_FocusEvent
#include <openfl/events/FocusEvent.h>
#endif
#ifndef INCLUDED_openfl_events_ErrorEvent
#include <openfl/events/ErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_TextEvent
#include <openfl/events/TextEvent.h>
#endif
#ifndef INCLUDED_openfl_events_ActivityEvent
#include <openfl/events/ActivityEvent.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_display3D_textures_Texture
#include <openfl/display3D/textures/Texture.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DWrapMode_Context3DWrapMode_Impl_
#include <openfl/display3D/_Context3DWrapMode/Context3DWrapMode_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DVertexBufferFormat_Context3DVertexBufferFormat_Impl_
#include <openfl/display3D/_Context3DVertexBufferFormat/Context3DVertexBufferFormat_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DTriangleFace_Context3DTriangleFace_Impl_
#include <openfl/display3D/_Context3DTriangleFace/Context3DTriangleFace_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DTextureFormat_Context3DTextureFormat_Impl_
#include <openfl/display3D/_Context3DTextureFormat/Context3DTextureFormat_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DTextureFilter_Context3DTextureFilter_Impl_
#include <openfl/display3D/_Context3DTextureFilter/Context3DTextureFilter_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DStencilAction_Context3DStencilAction_Impl_
#include <openfl/display3D/_Context3DStencilAction/Context3DStencilAction_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DRenderMode_Context3DRenderMode_Impl_
#include <openfl/display3D/_Context3DRenderMode/Context3DRenderMode_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DProgramType_Context3DProgramType_Impl_
#include <openfl/display3D/_Context3DProgramType/Context3DProgramType_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DProfile_Context3DProfile_Impl_
#include <openfl/display3D/_Context3DProfile/Context3DProfile_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DMipFilter_Context3DMipFilter_Impl_
#include <openfl/display3D/_Context3DMipFilter/Context3DMipFilter_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DCompareMode_Context3DCompareMode_Impl_
#include <openfl/display3D/_Context3DCompareMode/Context3DCompareMode_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DBufferUsage_Context3DBufferUsage_Impl_
#include <openfl/display3D/_Context3DBufferUsage/Context3DBufferUsage_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3DBlendFactor_Context3DBlendFactor_Impl_
#include <openfl/display3D/_Context3DBlendFactor/Context3DBlendFactor_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D__Context3D_Context3DTelemetry_Impl_
#include <openfl/display3D/_Context3D/Context3DTelemetry_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display3D_Context3D
#include <openfl/display3D/Context3D.h>
#endif
#ifndef INCLUDED_openfl_display__TriangleCulling_TriangleCulling_Impl_
#include <openfl/display/_TriangleCulling/TriangleCulling_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__StageScaleMode_StageScaleMode_Impl_
#include <openfl/display/_StageScaleMode/StageScaleMode_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__StageQuality_StageQuality_Impl_
#include <openfl/display/_StageQuality/StageQuality_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__StageDisplayState_StageDisplayState_Impl_
#include <openfl/display/_StageDisplayState/StageDisplayState_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__StageAlign_StageAlign_Impl_
#include <openfl/display/_StageAlign/StageAlign_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__SpreadMethod_SpreadMethod_Impl_
#include <openfl/display/_SpreadMethod/SpreadMethod_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__ShaderPrecision_ShaderPrecision_Impl_
#include <openfl/display/_ShaderPrecision/ShaderPrecision_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__ShaderParameterType_ShaderParameterType_Impl_
#include <openfl/display/_ShaderParameterType/ShaderParameterType_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__PixelSnapping_PixelSnapping_Impl_
#include <openfl/display/_PixelSnapping/PixelSnapping_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display_OpenGLRenderer
#include <openfl/display/OpenGLRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_LoaderInfo
#include <openfl/display/LoaderInfo.h>
#endif
#ifndef INCLUDED_openfl_display__LineScaleMode_LineScaleMode_Impl_
#include <openfl/display/_LineScaleMode/LineScaleMode_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__JointStyle_JointStyle_Impl_
#include <openfl/display/_JointStyle/JointStyle_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__InterpolationMethod_InterpolationMethod_Impl_
#include <openfl/display/_InterpolationMethod/InterpolationMethod_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__GraphicsPathWinding_GraphicsPathWinding_Impl_
#include <openfl/display/_GraphicsPathWinding/GraphicsPathWinding_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsPath
#include <openfl/display/GraphicsPath.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display__GradientType_GradientType_Impl_
#include <openfl/display/_GradientType/GradientType_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__CapsStyle_CapsStyle_Impl_
#include <openfl/display/_CapsStyle/CapsStyle_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display__BlendMode_BlendMode_Impl_
#include <openfl/display/_BlendMode/BlendMode_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_utils_PerlinNoise
#include <openfl/_internal/utils/PerlinNoise.h>
#endif
#ifndef INCLUDED_openfl__internal_text_TextEngine
#include <openfl/_internal/text/TextEngine.h>
#endif
#ifndef INCLUDED_openfl__internal_text_HTMLParser
#include <openfl/_internal/text/HTMLParser.h>
#endif
#ifndef INCLUDED_openfl__internal_swf_SWFLite
#include <openfl/_internal/swf/SWFLite.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLTextureBase
#include <openfl/_internal/stage3D/opengl/GLTextureBase.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_GLUtils
#include <openfl/_internal/stage3D/GLUtils.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_Context3DStateCache
#include <openfl/_internal/stage3D/Context3DStateCache.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_opengl_GLMaskShader
#include <openfl/_internal/renderer/opengl/GLMaskShader.h>
#endif
#ifndef INCLUDED_openfl_display_Shader
#include <openfl/display/Shader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_opengl_GLGraphics
#include <openfl/_internal/renderer/opengl/GLGraphics.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_dom_DOMTextField
#include <openfl/_internal/renderer/dom/DOMTextField.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_canvas_CanvasGraphics
#include <openfl/_internal/renderer/canvas/CanvasGraphics.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoGraphics
#include <openfl/_internal/renderer/cairo/CairoGraphics.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_TouchData
#include <openfl/_internal/TouchData.h>
#endif
#ifndef INCLUDED_openfl__internal_Lib
#include <openfl/_internal/Lib.h>
#endif
#ifndef INCLUDED_openfl_Lib
#include <openfl/Lib.h>
#endif
#ifndef INCLUDED_motion_Actuate
#include <motion/Actuate.h>
#endif
#ifndef INCLUDED_motion_actuators_SimpleActuator
#include <motion/actuators/SimpleActuator.h>
#endif
#ifndef INCLUDED_lime_utils__UInt8ClampedArray_UInt8ClampedArray_Impl_
#include <lime/utils/_UInt8ClampedArray/UInt8ClampedArray_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__UInt8Array_UInt8Array_Impl_
#include <lime/utils/_UInt8Array/UInt8Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__UInt32Array_UInt32Array_Impl_
#include <lime/utils/_UInt32Array/UInt32Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__UInt16Array_UInt16Array_Impl_
#include <lime/utils/_UInt16Array/UInt16Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Log_LogLevel_Impl_
#include <lime/utils/_Log/LogLevel_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils_Log
#include <lime/utils/Log.h>
#endif
#ifndef INCLUDED_lime_utils__Int8Array_Int8Array_Impl_
#include <lime/utils/_Int8Array/Int8Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Int32Array_Int32Array_Impl_
#include <lime/utils/_Int32Array/Int32Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Int16Array_Int16Array_Impl_
#include <lime/utils/_Int16Array/Int16Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Float64Array_Float64Array_Impl_
#include <lime/utils/_Float64Array/Float64Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Float32Array_Float32Array_Impl_
#include <lime/utils/_Float32Array/Float32Array_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils_Assets
#include <lime/utils/Assets.h>
#endif
#ifndef INCLUDED_lime_ui_Touch
#include <lime/ui/Touch.h>
#endif
#ifndef INCLUDED_lime_ui__ScanCode_ScanCode_Impl_
#include <lime/ui/_ScanCode/ScanCode_Impl_.h>
#endif
#ifndef INCLUDED_lime_ui__KeyModifier_KeyModifier_Impl_
#include <lime/ui/_KeyModifier/KeyModifier_Impl_.h>
#endif
#ifndef INCLUDED_lime_ui__KeyCode_KeyCode_Impl_
#include <lime/ui/_KeyCode/KeyCode_Impl_.h>
#endif
#ifndef INCLUDED_lime_ui__JoystickHatPosition_JoystickHatPosition_Impl_
#include <lime/ui/_JoystickHatPosition/JoystickHatPosition_Impl_.h>
#endif
#ifndef INCLUDED_lime_ui_Joystick
#include <lime/ui/Joystick.h>
#endif
#ifndef INCLUDED_lime_ui__GamepadButton_GamepadButton_Impl_
#include <lime/ui/_GamepadButton/GamepadButton_Impl_.h>
#endif
#ifndef INCLUDED_lime_ui__GamepadAxis_GamepadAxis_Impl_
#include <lime/ui/_GamepadAxis/GamepadAxis_Impl_.h>
#endif
#ifndef INCLUDED_lime_ui_Gamepad
#include <lime/ui/Gamepad.h>
#endif
#ifndef INCLUDED_lime_text_unifill_Unicode
#include <lime/text/unifill/Unicode.h>
#endif
#ifndef INCLUDED_lime_text__TextScript_TextScript_Impl_
#include <lime/text/_TextScript/TextScript_Impl_.h>
#endif
#ifndef INCLUDED_lime_text__TextDirection_TextDirection_Impl_
#include <lime/text/_TextDirection/TextDirection_Impl_.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_lime_system_Sensor
#include <lime/system/Sensor.h>
#endif
#ifndef INCLUDED_lime_system_JNI
#include <lime/system/JNI.h>
#endif
#ifndef INCLUDED_lime_system_Clipboard
#include <lime/system/Clipboard.h>
#endif
#ifndef INCLUDED_lime_system_CFFI
#include <lime/system/CFFI.h>
#endif
#ifndef INCLUDED_lime_net_curl_CURL
#include <lime/net/curl/CURL.h>
#endif
#ifndef INCLUDED_lime_media_openal_ALC
#include <lime/media/openal/ALC.h>
#endif
#ifndef INCLUDED_lime_media_openal_AL
#include <lime/media/openal/AL.h>
#endif
#ifndef INCLUDED_lime_math_color__RGBA_RGBA_Impl_
#include <lime/math/color/_RGBA/RGBA_Impl_.h>
#endif
#ifndef INCLUDED_lime_math__Matrix4_Matrix4_Impl_
#include <lime/math/_Matrix4/Matrix4_Impl_.h>
#endif
#ifndef INCLUDED_lime_math_Matrix3
#include <lime/math/Matrix3.h>
#endif
#ifndef INCLUDED_lime_math__ColorMatrix_ColorMatrix_Impl_
#include <lime/math/_ColorMatrix/ColorMatrix_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__WebGL2Context_WebGL2Context_Impl_
#include <lime/graphics/opengl/_WebGL2Context/WebGL2Context_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GL
#include <lime/graphics/opengl/GL.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoFTFontFace_CairoFTFontFace_Impl_
#include <lime/graphics/cairo/_CairoFTFontFace/CairoFTFontFace_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeGLRenderContext
#include <lime/_backend/native/NativeGLRenderContext.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeAudioSource
#include <lime/_backend/native/NativeAudioSource.h>
#endif
#ifndef INCLUDED_hxassert_Assert
#include <hxassert/Assert.h>
#endif
#ifndef INCLUDED_haxe_xml_Parser
#include <haxe/xml/Parser.h>
#endif
#ifndef INCLUDED_haxe_crypto_Base64
#include <haxe/crypto/Base64.h>
#endif
#ifndef INCLUDED_haxe_Unserializer
#include <haxe/Unserializer.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe_Serializer
#include <haxe/Serializer.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_graphic_ProgressBar
#include <graphic/ProgressBar.h>
#endif
#ifndef INCLUDED_graphic__Fonts_Time
#include <graphic/_Fonts/Time.h>
#endif
#ifndef INCLUDED_graphic__Fonts_Buff
#include <graphic/_Fonts/Buff.h>
#endif
#ifndef INCLUDED_graphic__Fonts_Damage
#include <graphic/_Fonts/Damage.h>
#endif
#ifndef INCLUDED_graphic__Fonts_Mirror
#include <graphic/_Fonts/Mirror.h>
#endif
#ifndef INCLUDED_openfl_text_Font
#include <openfl/text/Font.h>
#endif
#ifndef INCLUDED_battle_vision_UnitStateBar
#include <battle/vision/UnitStateBar.h>
#endif
#ifndef INCLUDED_battle_vision_Common
#include <battle/vision/Common.h>
#endif
#ifndef INCLUDED_battle_data_Units
#include <battle/data/Units.h>
#endif
#ifndef INCLUDED_battle_data_Passives
#include <battle/data/Passives.h>
#endif
#ifndef INCLUDED_battle_data_Buffs
#include <battle/data/Buffs.h>
#endif
#ifndef INCLUDED_battle_data_Abilities
#include <battle/data/Abilities.h>
#endif
#ifndef INCLUDED_battle_EffectHandler
#include <battle/EffectHandler.h>
#endif
#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED___ASSET__manifest_default_json
#include <__ASSET__manifest_default_json.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_ApplicationMain
#include <ApplicationMain.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeApplication
#include <lime/_backend/native/NativeApplication.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeCFFI
#include <lime/_backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_sys_io_Process
#include <sys/io/Process.h>
#endif
#ifndef INCLUDED_sys_io__Process_Stdout
#include <sys/io/_Process/Stdout.h>
#endif
#ifndef INCLUDED_sys_io__Process_Stdin
#include <sys/io/_Process/Stdin.h>
#endif
#ifndef INCLUDED_sys_io_FileOutput
#include <sys/io/FileOutput.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_roaming_screens_components_WheelContainer
#include <roaming/screens/components/WheelContainer.h>
#endif
#ifndef INCLUDED_roaming_screens_components_TreeContainer
#include <roaming/screens/components/TreeContainer.h>
#endif
#ifndef INCLUDED_roaming_screens_components_PointsAndRespec
#include <roaming/screens/components/PointsAndRespec.h>
#endif
#ifndef INCLUDED_roaming_screens_components_AttributeContainer
#include <roaming/screens/components/AttributeContainer.h>
#endif
#ifndef INCLUDED_roaming_screens_Utils
#include <roaming/screens/Utils.h>
#endif
#ifndef INCLUDED_roaming_screens_SAbility
#include <roaming/screens/SAbility.h>
#endif
#ifndef INCLUDED_roaming_screens_ISAbility
#include <roaming/screens/ISAbility.h>
#endif
#ifndef INCLUDED_roaming_screens_IScreen
#include <roaming/screens/IScreen.h>
#endif
#ifndef INCLUDED_roaming_screens_Canvas
#include <roaming/screens/Canvas.h>
#endif
#ifndef INCLUDED_roaming_screens_ICanvas
#include <roaming/screens/ICanvas.h>
#endif
#ifndef INCLUDED_roaming_TreeIterator
#include <roaming/TreeIterator.h>
#endif
#ifndef INCLUDED_roaming_Tree
#include <roaming/Tree.h>
#endif
#ifndef INCLUDED_roaming_TreeAbility
#include <roaming/TreeAbility.h>
#endif
#ifndef INCLUDED_roaming_Player
#include <roaming/Player.h>
#endif
#ifndef INCLUDED_roaming_Unit
#include <roaming/Unit.h>
#endif
#ifndef INCLUDED_roaming_Ability
#include <roaming/Ability.h>
#endif
#ifndef INCLUDED_haxe_lang_Iterable
#include <haxe/lang/Iterable.h>
#endif
#ifndef INCLUDED_haxe_lang_Iterator
#include <haxe/lang/Iterator.h>
#endif
#ifndef INCLUDED_openfl_utils__Object_Object_Impl_
#include <openfl/utils/_Object/Object_Impl_.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_openfl_utils_AssetCache
#include <openfl/utils/AssetCache.h>
#endif
#ifndef INCLUDED_openfl_utils_IAssetCache
#include <openfl/utils/IAssetCache.h>
#endif
#ifndef INCLUDED_openfl_ui_GameInputControl
#include <openfl/ui/GameInputControl.h>
#endif
#ifndef INCLUDED_openfl_text_TextLineMetrics
#include <openfl/text/TextLineMetrics.h>
#endif
#ifndef INCLUDED_openfl_text_TextFormat
#include <openfl/text/TextFormat.h>
#endif
#ifndef INCLUDED_openfl_text_StaticText
#include <openfl/text/StaticText.h>
#endif
#ifndef INCLUDED_openfl_system_LoaderContext
#include <openfl/system/LoaderContext.h>
#endif
#ifndef INCLUDED_openfl_net__URLVariables_URLVariables_Impl_
#include <openfl/net/_URLVariables/URLVariables_Impl_.h>
#endif
#ifndef INCLUDED_openfl_net_URLRequestHeader
#include <openfl/net/URLRequestHeader.h>
#endif
#ifndef INCLUDED_openfl_net_URLRequest
#include <openfl/net/URLRequest.h>
#endif
#ifndef INCLUDED_openfl_net_URLLoader
#include <openfl/net/URLLoader.h>
#endif
#ifndef INCLUDED_openfl_net_NetStream
#include <openfl/net/NetStream.h>
#endif
#ifndef INCLUDED_openfl_media_SoundTransform
#include <openfl/media/SoundTransform.h>
#endif
#ifndef INCLUDED_openfl_media_SoundLoaderContext
#include <openfl/media/SoundLoaderContext.h>
#endif
#ifndef INCLUDED_openfl_media_SoundChannel
#include <openfl/media/SoundChannel.h>
#endif
#ifndef INCLUDED_openfl_media_Sound
#include <openfl/media/Sound.h>
#endif
#ifndef INCLUDED_openfl_media_ID3Info
#include <openfl/media/ID3Info.h>
#endif
#ifndef INCLUDED_openfl_geom_Vector3D
#include <openfl/geom/Vector3D.h>
#endif
#ifndef INCLUDED_openfl_geom_Transform
#include <openfl/geom/Transform.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix3D
#include <openfl/geom/Matrix3D.h>
#endif
#ifndef INCLUDED_openfl_filters__GlowFilter_GlowShader
#include <openfl/filters/_GlowFilter/GlowShader.h>
#endif
#ifndef INCLUDED_openfl_filters_DropShadowFilter
#include <openfl/filters/DropShadowFilter.h>
#endif
#ifndef INCLUDED_openfl_filters__ConvolutionFilter_ConvolutionShader
#include <openfl/filters/_ConvolutionFilter/ConvolutionShader.h>
#endif
#ifndef INCLUDED_openfl_filters__ColorMatrixFilter_ColorMatrixShader
#include <openfl/filters/_ColorMatrixFilter/ColorMatrixShader.h>
#endif
#ifndef INCLUDED_openfl_filters__BlurFilter_BlurShader
#include <openfl/filters/_BlurFilter/BlurShader.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilterShader
#include <openfl/filters/BitmapFilterShader.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_events_UncaughtErrorEvents
#include <openfl/events/UncaughtErrorEvents.h>
#endif
#ifndef INCLUDED_openfl_events__EventDispatcher_Listener
#include <openfl/events/_EventDispatcher/Listener.h>
#endif
#ifndef INCLUDED_openfl_events__EventDispatcher_DispatchIterator
#include <openfl/events/_EventDispatcher/DispatchIterator.h>
#endif
#ifndef INCLUDED_openfl_errors_TypeError
#include <openfl/errors/TypeError.h>
#endif
#ifndef INCLUDED_openfl_errors_RangeError
#include <openfl/errors/RangeError.h>
#endif
#ifndef INCLUDED_openfl_errors_IllegalOperationError
#include <openfl/errors/IllegalOperationError.h>
#endif
#ifndef INCLUDED_openfl_errors_EOFError
#include <openfl/errors/EOFError.h>
#endif
#ifndef INCLUDED_openfl_errors_IOError
#include <openfl/errors/IOError.h>
#endif
#ifndef INCLUDED_openfl_errors_ArgumentError
#include <openfl/errors/ArgumentError.h>
#endif
#ifndef INCLUDED_openfl_display3D_textures_VideoTexture
#include <openfl/display3D/textures/VideoTexture.h>
#endif
#ifndef INCLUDED_openfl_display3D_textures_RectangleTexture
#include <openfl/display3D/textures/RectangleTexture.h>
#endif
#ifndef INCLUDED_openfl_display3D_textures_CubeTexture
#include <openfl/display3D/textures/CubeTexture.h>
#endif
#ifndef INCLUDED_openfl_display3D_textures_TextureBase
#include <openfl/display3D/textures/TextureBase.h>
#endif
#ifndef INCLUDED_openfl_display3D_VertexBuffer3D
#include <openfl/display3D/VertexBuffer3D.h>
#endif
#ifndef INCLUDED_openfl_display3D_UniformMap
#include <openfl/display3D/UniformMap.h>
#endif
#ifndef INCLUDED_openfl_display3D_Uniform
#include <openfl/display3D/Uniform.h>
#endif
#ifndef INCLUDED_openfl_display3D_Program3D
#include <openfl/display3D/Program3D.h>
#endif
#ifndef INCLUDED_openfl_display3D_IndexBuffer3D
#include <openfl/display3D/IndexBuffer3D.h>
#endif
#ifndef INCLUDED_openfl_display_Window
#include <openfl/display/Window.h>
#endif
#ifndef INCLUDED_openfl_display_Stage3D
#include <openfl/display/Stage3D.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_display_SimpleButton
#include <openfl/display/SimpleButton.h>
#endif
#ifndef INCLUDED_openfl_display_ShaderParameter_Int
#include <openfl/display/ShaderParameter_Int.h>
#endif
#ifndef INCLUDED_openfl_display_ShaderParameter_Float
#include <openfl/display/ShaderParameter_Float.h>
#endif
#ifndef INCLUDED_openfl_display_ShaderParameter_Bool
#include <openfl/display/ShaderParameter_Bool.h>
#endif
#ifndef INCLUDED_openfl_display_ShaderParameter
#include <openfl/display/ShaderParameter.h>
#endif
#ifndef INCLUDED_openfl_display_ShaderInput_openfl_display_BitmapData
#include <openfl/display/ShaderInput_openfl_display_BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_ShaderInput
#include <openfl/display/ShaderInput.h>
#endif
#ifndef INCLUDED_openfl_display__ShaderData_ShaderData_Impl_
#include <openfl/display/_ShaderData/ShaderData_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display_DefaultPreloader
#include <openfl/display/DefaultPreloader.h>
#endif
#ifndef INCLUDED_openfl_display_Preloader
#include <openfl/display/Preloader.h>
#endif
#ifndef INCLUDED_openfl_display_PNGEncoderOptions
#include <openfl/display/PNGEncoderOptions.h>
#endif
#ifndef INCLUDED_openfl_display__MovieClip_FrameSymbolInstance
#include <openfl/display/_MovieClip/FrameSymbolInstance.h>
#endif
#ifndef INCLUDED_openfl_display_Loader
#include <openfl/display/Loader.h>
#endif
#ifndef INCLUDED_openfl_display_JPEGEncoderOptions
#include <openfl/display/JPEGEncoderOptions.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsTrianglePath
#include <openfl/display/GraphicsTrianglePath.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsStroke
#include <openfl/display/GraphicsStroke.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsStroke
#include <openfl/display/IGraphicsStroke.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsSolidFill
#include <openfl/display/GraphicsSolidFill.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsShaderFill
#include <openfl/display/GraphicsShaderFill.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsShader
#include <openfl/display/GraphicsShader.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsQuadPath
#include <openfl/display/GraphicsQuadPath.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsPath
#include <openfl/display/IGraphicsPath.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsGradientFill
#include <openfl/display/GraphicsGradientFill.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsEndFill
#include <openfl/display/GraphicsEndFill.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsBitmapFill
#include <openfl/display/GraphicsBitmapFill.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsData
#include <openfl/display/IGraphicsData.h>
#endif
#ifndef INCLUDED_openfl_display_IGraphicsFill
#include <openfl/display/IGraphicsFill.h>
#endif
#ifndef INCLUDED_openfl_display_FrameLabel
#include <openfl/display/FrameLabel.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectShader
#include <openfl/display/DisplayObjectShader.h>
#endif
#ifndef INCLUDED_openfl_display_DOMRenderer
#include <openfl/display/DOMRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_CanvasRenderer
#include <openfl/display/CanvasRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_CairoRenderer
#include <openfl/display/CairoRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectRenderer
#include <openfl/display/DisplayObjectRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_Bitmap
#include <openfl/display/Bitmap.h>
#endif
#ifndef INCLUDED_openfl_display_Application
#include <openfl/display/Application.h>
#endif
#ifndef INCLUDED_openfl__internal_timeline_FrameObject
#include <openfl/_internal/timeline/FrameObject.h>
#endif
#ifndef INCLUDED_openfl__internal_timeline_Frame
#include <openfl/_internal/timeline/Frame.h>
#endif
#ifndef INCLUDED_openfl__internal_text_TextLayoutGroup
#include <openfl/_internal/text/TextLayoutGroup.h>
#endif
#ifndef INCLUDED_openfl__internal_text_TextFormatRange
#include <openfl/_internal/text/TextFormatRange.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_StaticTextRecord
#include <openfl/_internal/symbols/StaticTextRecord.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_StaticTextSymbol
#include <openfl/_internal/symbols/StaticTextSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_SpriteSymbol
#include <openfl/_internal/symbols/SpriteSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_ShapeSymbol
#include <openfl/_internal/symbols/ShapeSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_FontSymbol
#include <openfl/_internal/symbols/FontSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_DynamicTextSymbol
#include <openfl/_internal/symbols/DynamicTextSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_ButtonSymbol
#include <openfl/_internal/symbols/ButtonSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_BitmapSymbol
#include <openfl/_internal/symbols/BitmapSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_symbols_SWFSymbol
#include <openfl/_internal/symbols/SWFSymbol.h>
#endif
#ifndef INCLUDED_openfl__internal_swf_SWFLiteLibrary
#include <openfl/_internal/swf/SWFLiteLibrary.h>
#endif
#ifndef INCLUDED_openfl_utils_AssetLibrary
#include <openfl/utils/AssetLibrary.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLVideoTexture
#include <openfl/_internal/stage3D/opengl/GLVideoTexture.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLVertexBuffer3D
#include <openfl/_internal/stage3D/opengl/GLVertexBuffer3D.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLTexture
#include <openfl/_internal/stage3D/opengl/GLTexture.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLStage3D
#include <openfl/_internal/stage3D/opengl/GLStage3D.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLRectangleTexture
#include <openfl/_internal/stage3D/opengl/GLRectangleTexture.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLProgram3D
#include <openfl/_internal/stage3D/opengl/GLProgram3D.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLIndexBuffer3D
#include <openfl/_internal/stage3D/opengl/GLIndexBuffer3D.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLCubeTexture
#include <openfl/_internal/stage3D/opengl/GLCubeTexture.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_opengl_GLContext3D
#include <openfl/_internal/stage3D/opengl/GLContext3D.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_atf_ATFReader
#include <openfl/_internal/stage3D/atf/ATFReader.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_SamplerState
#include <openfl/_internal/stage3D/SamplerState.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_GLCompressedTextureFormats
#include <openfl/_internal/stage3D/GLCompressedTextureFormats.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_SourceRegister
#include <openfl/_internal/stage3D/_AGALConverter/SourceRegister.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_SamplerRegister
#include <openfl/_internal/stage3D/_AGALConverter/SamplerRegister.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_RegisterMapEntry
#include <openfl/_internal/stage3D/_AGALConverter/RegisterMapEntry.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_RegisterMap
#include <openfl/_internal/stage3D/RegisterMap.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_DestRegister
#include <openfl/_internal/stage3D/_AGALConverter/DestRegister.h>
#endif
#ifndef INCLUDED_openfl__internal_stage3D_AGALConverter
#include <openfl/_internal/stage3D/AGALConverter.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_opengl_GLTextField
#include <openfl/_internal/renderer/opengl/GLTextField.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_opengl_GLShape
#include <openfl/_internal/renderer/opengl/GLShape.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_opengl_GLDisplayObject
#include <openfl/_internal/renderer/opengl/GLDisplayObject.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_opengl_GLBitmap
#include <openfl/_internal/renderer/opengl/GLBitmap.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_dom_DOMShape
#include <openfl/_internal/renderer/dom/DOMShape.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_dom_DOMDisplayObject
#include <openfl/_internal/renderer/dom/DOMDisplayObject.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_dom_DOMBitmap
#include <openfl/_internal/renderer/dom/DOMBitmap.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_canvas_CanvasTextField
#include <openfl/_internal/renderer/canvas/CanvasTextField.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_canvas_CanvasShape
#include <openfl/_internal/renderer/canvas/CanvasShape.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_canvas_CanvasDisplayObject
#include <openfl/_internal/renderer/canvas/CanvasDisplayObject.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_canvas_CanvasBitmap
#include <openfl/_internal/renderer/canvas/CanvasBitmap.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoTextField
#include <openfl/_internal/renderer/cairo/CairoTextField.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoShape
#include <openfl/_internal/renderer/cairo/CairoShape.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoDisplayObject
#include <openfl/_internal/renderer/cairo/CairoDisplayObject.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoBitmap
#include <openfl/_internal/renderer/cairo/CairoBitmap.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_ShaderBuffer
#include <openfl/_internal/renderer/ShaderBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_WindingNonZeroView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/WindingNonZeroView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_WindingEvenOddView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/WindingEvenOddView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_OverrideMatrixView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/OverrideMatrixView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_MoveToView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/MoveToView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_LineToView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/LineToView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_LineStyleView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/LineStyleView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_LineGradientStyleView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/LineGradientStyleView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_LineBitmapStyleView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/LineBitmapStyleView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_EndFillView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/EndFillView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_DrawTrianglesView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/DrawTrianglesView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_DrawRoundRectView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/DrawRoundRectView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_DrawRectView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/DrawRectView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_DrawQuadsView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/DrawQuadsView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_DrawEllipseView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/DrawEllipseView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_DrawCircleView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/DrawCircleView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_CurveToView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/CurveToView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_CubicCurveToView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/CubicCurveToView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_BeginShaderFillView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/BeginShaderFillView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_BeginGradientFillView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/BeginGradientFillView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_BeginFillView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/BeginFillView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer__DrawCommandReader_BeginBitmapFillView_Impl_
#include <openfl/_internal/renderer/_DrawCommandReader/BeginBitmapFillView_Impl_.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__Vector_ObjectVector
#include <openfl/_Vector/ObjectVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_FunctionVector
#include <openfl/_Vector/FunctionVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_BoolVector
#include <openfl/_Vector/BoolVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_motion_easing_QuadEaseOut
#include <motion/easing/QuadEaseOut.h>
#endif
#ifndef INCLUDED_motion_easing_QuadEaseInOut
#include <motion/easing/QuadEaseInOut.h>
#endif
#ifndef INCLUDED_motion_easing_QuadEaseIn
#include <motion/easing/QuadEaseIn.h>
#endif
#ifndef INCLUDED_motion_easing_Quad
#include <motion/easing/Quad.h>
#endif
#ifndef INCLUDED_motion_easing_LinearEaseNone
#include <motion/easing/LinearEaseNone.h>
#endif
#ifndef INCLUDED_motion_easing_Linear
#include <motion/easing/Linear.h>
#endif
#ifndef INCLUDED_motion_easing_ExpoEaseInOut
#include <motion/easing/ExpoEaseInOut.h>
#endif
#ifndef INCLUDED_motion_easing_ExpoEaseIn
#include <motion/easing/ExpoEaseIn.h>
#endif
#ifndef INCLUDED_motion_easing_CubicEaseOut
#include <motion/easing/CubicEaseOut.h>
#endif
#ifndef INCLUDED_motion_easing_CubicEaseInOut
#include <motion/easing/CubicEaseInOut.h>
#endif
#ifndef INCLUDED_motion_easing_CubicEaseIn
#include <motion/easing/CubicEaseIn.h>
#endif
#ifndef INCLUDED_motion_easing_Cubic
#include <motion/easing/Cubic.h>
#endif
#ifndef INCLUDED_motion_actuators_TransformActuator
#include <motion/actuators/TransformActuator.h>
#endif
#ifndef INCLUDED_motion_actuators_PropertyPathDetails
#include <motion/actuators/PropertyPathDetails.h>
#endif
#ifndef INCLUDED_motion_actuators_PropertyDetails
#include <motion/actuators/PropertyDetails.h>
#endif
#ifndef INCLUDED_motion_actuators_MotionPathActuator
#include <motion/actuators/MotionPathActuator.h>
#endif
#ifndef INCLUDED_motion_actuators_MethodActuator
#include <motion/actuators/MethodActuator.h>
#endif
#ifndef INCLUDED_motion_actuators_FilterActuator
#include <motion/actuators/FilterActuator.h>
#endif
#ifndef INCLUDED_motion_RotationPath
#include <motion/RotationPath.h>
#endif
#ifndef INCLUDED_motion_LinearPath
#include <motion/LinearPath.h>
#endif
#ifndef INCLUDED_motion_BezierPath
#include <motion/BezierPath.h>
#endif
#ifndef INCLUDED_motion_ComponentPath
#include <motion/ComponentPath.h>
#endif
#ifndef INCLUDED_motion_IComponentPath
#include <motion/IComponentPath.h>
#endif
#ifndef INCLUDED_motion_MotionPath
#include <motion/MotionPath.h>
#endif
#ifndef INCLUDED_motion__Actuate_TweenTimer
#include <motion/_Actuate/TweenTimer.h>
#endif
#ifndef INCLUDED_motion__Actuate_TransformOptions
#include <motion/_Actuate/TransformOptions.h>
#endif
#ifndef INCLUDED_motion__Actuate_EffectsOptions
#include <motion/_Actuate/EffectsOptions.h>
#endif
#ifndef INCLUDED_motion_easing_ExpoEaseOut
#include <motion/easing/ExpoEaseOut.h>
#endif
#ifndef INCLUDED_motion_easing_IEasing
#include <motion/easing/IEasing.h>
#endif
#ifndef INCLUDED_motion_easing_Expo
#include <motion/easing/Expo.h>
#endif
#ifndef INCLUDED_motion_actuators_GenericActuator
#include <motion/actuators/GenericActuator.h>
#endif
#ifndef INCLUDED_motion_actuators_IGenericActuator
#include <motion/actuators/IGenericActuator.h>
#endif
#ifndef INCLUDED_lime_utils_compress_Zlib
#include <lime/utils/compress/Zlib.h>
#endif
#ifndef INCLUDED_lime_utils_compress_LZMA
#include <lime/utils/compress/LZMA.h>
#endif
#ifndef INCLUDED_lime_utils_compress_Deflate
#include <lime/utils/compress/Deflate.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl_geom_Rectangle
#include <lime/utils/ObjectPool_openfl_geom_Rectangle.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl_geom_Point
#include <lime/utils/ObjectPool_openfl_geom_Point.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl_geom_Matrix
#include <lime/utils/ObjectPool_openfl_geom_Matrix.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl__internal_renderer_ShaderBuffer
#include <lime/utils/ObjectPool_openfl__internal_renderer_ShaderBuffer.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl__internal_TouchData
#include <lime/utils/ObjectPool_openfl__internal_TouchData.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool
#include <lime/utils/ObjectPool.h>
#endif
#ifndef INCLUDED_lime_utils__DataPointer_DataPointer_Impl_
#include <lime/utils/_DataPointer/DataPointer_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Bytes_Bytes_Impl_
#include <lime/utils/_Bytes/Bytes_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__BytePointer_BytePointer_Impl_
#include <lime/utils/_BytePointer/BytePointer_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Assets_LibrarySymbol
#include <lime/utils/_Assets/LibrarySymbol.h>
#endif
#ifndef INCLUDED_lime_utils_AssetManifest
#include <lime/utils/AssetManifest.h>
#endif
#ifndef INCLUDED_lime_utils_AssetLibrary
#include <lime/utils/AssetLibrary.h>
#endif
#ifndef INCLUDED_lime_utils_AssetCache
#include <lime/utils/AssetCache.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferIO
#include <lime/utils/ArrayBufferIO.h>
#endif
#ifndef INCLUDED_lime_utils__ArrayBuffer_ArrayBuffer_Impl_
#include <lime/utils/_ArrayBuffer/ArrayBuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif
#ifndef INCLUDED_lime_ui_Mouse
#include <lime/ui/Mouse.h>
#endif
#ifndef INCLUDED_lime_text_unifill__Utf8_StringU8_Impl_
#include <lime/text/unifill/_Utf8/StringU8_Impl_.h>
#endif
#ifndef INCLUDED_lime_text_unifill__Utf8_Utf8Impl
#include <lime/text/unifill/_Utf8/Utf8Impl.h>
#endif
#ifndef INCLUDED_lime_text_unifill__Utf8_Utf8_Impl_
#include <lime/text/unifill/_Utf8/Utf8_Impl_.h>
#endif
#ifndef INCLUDED_lime_text_unifill_Unifill
#include <lime/text/unifill/Unifill.h>
#endif
#ifndef INCLUDED_lime_text_unifill_InternalEncodingIter
#include <lime/text/unifill/InternalEncodingIter.h>
#endif
#ifndef INCLUDED_lime_text_unifill_InternalEncoding
#include <lime/text/unifill/InternalEncoding.h>
#endif
#ifndef INCLUDED_lime_text_unifill_InvalidCodeUnitSequence
#include <lime/text/unifill/InvalidCodeUnitSequence.h>
#endif
#ifndef INCLUDED_lime_text_unifill_InvalidCodePoint
#include <lime/text/unifill/InvalidCodePoint.h>
#endif
#ifndef INCLUDED_lime_text_unifill_Exception
#include <lime/text/unifill/Exception.h>
#endif
#ifndef INCLUDED_lime_text_unifill_CodePointIter
#include <lime/text/unifill/CodePointIter.h>
#endif
#ifndef INCLUDED_lime_text_unifill__CodePoint_CodePoint_Impl_
#include <lime/text/unifill/_CodePoint/CodePoint_Impl_.h>
#endif
#ifndef INCLUDED_lime_text__UTF8String_Utf8Ext
#include <lime/text/_UTF8String/Utf8Ext.h>
#endif
#ifndef INCLUDED_lime_text__UTF8String_UTF8String_Impl_
#include <lime/text/_UTF8String/UTF8String_Impl_.h>
#endif
#ifndef INCLUDED_lime_text_TextLayout
#include <lime/text/TextLayout.h>
#endif
#ifndef INCLUDED_lime_text_GlyphPosition
#include <lime/text/GlyphPosition.h>
#endif
#ifndef INCLUDED_lime_text_GlyphMetrics
#include <lime/text/GlyphMetrics.h>
#endif
#ifndef INCLUDED_lime_text__Glyph_Glyph_Impl_
#include <lime/text/_Glyph/Glyph_Impl_.h>
#endif
#ifndef INCLUDED_lime_system__ThreadPool_ThreadPoolMessage
#include <lime/system/_ThreadPool/ThreadPoolMessage.h>
#endif
#ifndef INCLUDED_lime_system_ThreadPool
#include <lime/system/ThreadPool.h>
#endif
#ifndef INCLUDED_lime_system_JNIMethod
#include <lime/system/JNIMethod.h>
#endif
#ifndef INCLUDED_lime_system_JNIStaticField
#include <lime/system/JNIStaticField.h>
#endif
#ifndef INCLUDED_lime_system_JNIMemberField
#include <lime/system/JNIMemberField.h>
#endif
#ifndef INCLUDED_lime_system_DisplayMode
#include <lime/system/DisplayMode.h>
#endif
#ifndef INCLUDED_lime_system_Display
#include <lime/system/Display.h>
#endif
#ifndef INCLUDED_lime_system__CFFIPointer_CFFIPointer_Impl_
#include <lime/system/_CFFIPointer/CFFIPointer_Impl_.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_openfl_utils_ByteArray
#include <lime/net/_HTTPRequest_openfl_utils_ByteArray.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_lime_utils_Bytes
#include <lime/net/_HTTPRequest_lime_utils_Bytes.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_lime_text_Font
#include <lime/net/_HTTPRequest_lime_text_Font.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_lime_media_AudioBuffer
#include <lime/net/_HTTPRequest_lime_media_AudioBuffer.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_lime_graphics_Image
#include <lime/net/_HTTPRequest_lime_graphics_Image.h>
#endif
#ifndef INCLUDED_lime_net_HTTPRequestHeader
#include <lime/net/HTTPRequestHeader.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_String
#include <lime/net/_HTTPRequest_String.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_Bytes
#include <lime/net/_HTTPRequest_Bytes.h>
#endif
#ifndef INCLUDED_lime_net_HTTPRequest
#include <lime/net/HTTPRequest.h>
#endif
#ifndef INCLUDED_lime_net__HTTPRequest_AbstractHTTPRequest
#include <lime/net/_HTTPRequest/AbstractHTTPRequest.h>
#endif
#ifndef INCLUDED_lime_net__IHTTPRequest
#include <lime/net/_IHTTPRequest.h>
#endif
#ifndef INCLUDED_lime_media_openal__ALSource_ALSource_Impl_
#include <lime/media/openal/_ALSource/ALSource_Impl_.h>
#endif
#ifndef INCLUDED_lime_media_openal__ALFilter_ALFilter_Impl_
#include <lime/media/openal/_ALFilter/ALFilter_Impl_.h>
#endif
#ifndef INCLUDED_lime_media_openal__ALEffect_ALEffect_Impl_
#include <lime/media/openal/_ALEffect/ALEffect_Impl_.h>
#endif
#ifndef INCLUDED_lime_media_openal__ALDevice_ALDevice_Impl_
#include <lime/media/openal/_ALDevice/ALDevice_Impl_.h>
#endif
#ifndef INCLUDED_lime_media_openal__ALContext_ALContext_Impl_
#include <lime/media/openal/_ALContext/ALContext_Impl_.h>
#endif
#ifndef INCLUDED_lime_media_openal__ALBuffer_ALBuffer_Impl_
#include <lime/media/openal/_ALBuffer/ALBuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_media_openal__ALAuxiliaryEffectSlot_ALAuxiliaryEffectSlot_Impl_
#include <lime/media/openal/_ALAuxiliaryEffectSlot/ALAuxiliaryEffectSlot_Impl_.h>
#endif
#ifndef INCLUDED_lime_media_codecs_vorbis_VorbisInfo
#include <lime/media/codecs/vorbis/VorbisInfo.h>
#endif
#ifndef INCLUDED_lime_media_codecs_vorbis_VorbisFile
#include <lime/media/codecs/vorbis/VorbisFile.h>
#endif
#ifndef INCLUDED_lime_media_codecs_vorbis_VorbisComment
#include <lime/media/codecs/vorbis/VorbisComment.h>
#endif
#ifndef INCLUDED_lime_media_WebAudioContext
#include <lime/media/WebAudioContext.h>
#endif
#ifndef INCLUDED_lime_media_HTML5AudioContext
#include <lime/media/HTML5AudioContext.h>
#endif
#ifndef INCLUDED_lime_media_FlashAudioContext
#include <lime/media/FlashAudioContext.h>
#endif
#ifndef INCLUDED_lime_media_AudioSource
#include <lime/media/AudioSource.h>
#endif
#ifndef INCLUDED_lime_media_AudioManager
#include <lime/media/AudioManager.h>
#endif
#ifndef INCLUDED_lime_media_AudioBuffer
#include <lime/media/AudioBuffer.h>
#endif
#ifndef INCLUDED_lime_media_ALCAudioContext
#include <lime/media/ALCAudioContext.h>
#endif
#ifndef INCLUDED_lime_media_ALAudioContext
#include <lime/media/ALAudioContext.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_math_color__BGRA_BGRA_Impl_
#include <lime/math/color/_BGRA/BGRA_Impl_.h>
#endif
#ifndef INCLUDED_lime_math_color__ARGB_ARGB_Impl_
#include <lime/math/color/_ARGB/ARGB_Impl_.h>
#endif
#ifndef INCLUDED_lime_math_Vector4
#include <lime/math/Vector4.h>
#endif
#ifndef INCLUDED_lime_math_Vector2
#include <lime/math/Vector2.h>
#endif
#ifndef INCLUDED_lime_math_Rectangle
#include <lime/math/Rectangle.h>
#endif
#ifndef INCLUDED_lime_graphics_utils__ImageDataUtil_ImageDataView
#include <lime/graphics/utils/_ImageDataUtil/ImageDataView.h>
#endif
#ifndef INCLUDED_lime_graphics_utils_ImageDataUtil
#include <lime/graphics/utils/ImageDataUtil.h>
#endif
#ifndef INCLUDED_lime_graphics_utils_ImageCanvasUtil
#include <lime/graphics/utils/ImageCanvasUtil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_VIV_shader_binary
#include <lime/graphics/opengl/ext/VIV_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_writeonly_rendering
#include <lime/graphics/opengl/ext/QCOM_writeonly_rendering.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_tiled_rendering
#include <lime/graphics/opengl/ext/QCOM_tiled_rendering.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_perfmon_global_mode
#include <lime/graphics/opengl/ext/QCOM_perfmon_global_mode.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_extended_get2
#include <lime/graphics/opengl/ext/QCOM_extended_get2.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_extended_get
#include <lime/graphics/opengl/ext/QCOM_extended_get.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_driver_control
#include <lime/graphics/opengl/ext/QCOM_driver_control.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_binning_control
#include <lime/graphics/opengl/ext/QCOM_binning_control.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_alpha_test
#include <lime/graphics/opengl/ext/QCOM_alpha_test.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_type_10_10_10_2
#include <lime/graphics/opengl/ext/OES_vertex_type_10_10_10_2.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_half_float
#include <lime/graphics/opengl/ext/OES_vertex_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_array_object
#include <lime/graphics/opengl/ext/OES_vertex_array_object.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_npot
#include <lime/graphics/opengl/ext/OES_texture_npot.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_half_float_linear
#include <lime/graphics/opengl/ext/OES_texture_half_float_linear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_half_float
#include <lime/graphics/opengl/ext/OES_texture_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_float_linear
#include <lime/graphics/opengl/ext/OES_texture_float_linear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_float
#include <lime/graphics/opengl/ext/OES_texture_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_3D
#include <lime/graphics/opengl/ext/OES_texture_3D.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_surfaceless_context
#include <lime/graphics/opengl/ext/OES_surfaceless_context.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_stencil4
#include <lime/graphics/opengl/ext/OES_stencil4.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_stencil1
#include <lime/graphics/opengl/ext/OES_stencil1.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_standard_derivatives
#include <lime/graphics/opengl/ext/OES_standard_derivatives.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_rgb8_rgba8
#include <lime/graphics/opengl/ext/OES_rgb8_rgba8.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_required_internalformat
#include <lime/graphics/opengl/ext/OES_required_internalformat.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_packed_depth_stencil
#include <lime/graphics/opengl/ext/OES_packed_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_mapbuffer
#include <lime/graphics/opengl/ext/OES_mapbuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_get_program_binary
#include <lime/graphics/opengl/ext/OES_get_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_element_index_uint
#include <lime/graphics/opengl/ext/OES_element_index_uint.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth_texture
#include <lime/graphics/opengl/ext/OES_depth_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth32
#include <lime/graphics/opengl/ext/OES_depth32.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth24
#include <lime/graphics/opengl/ext/OES_depth24.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_compressed_paletted_texture
#include <lime/graphics/opengl/ext/OES_compressed_paletted_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_compressed_ETC1_RGB8_texture
#include <lime/graphics/opengl/ext/OES_compressed_ETC1_RGB8_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_EGL_image_external
#include <lime/graphics/opengl/ext/OES_EGL_image_external.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_EGL_image
#include <lime/graphics/opengl/ext/OES_EGL_image.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_texture_npot_2D_mipmap
#include <lime/graphics/opengl/ext/NV_texture_npot_2D_mipmap.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_texture_compression_s3tc_update
#include <lime/graphics/opengl/ext/NV_texture_compression_s3tc_update.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_stencil
#include <lime/graphics/opengl/ext/NV_read_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_depth_stencil
#include <lime/graphics/opengl/ext/NV_read_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_depth
#include <lime/graphics/opengl/ext/NV_read_depth.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_buffer_front
#include <lime/graphics/opengl/ext/NV_read_buffer_front.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_buffer
#include <lime/graphics/opengl/ext/NV_read_buffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_fence
#include <lime/graphics/opengl/ext/NV_fence.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_fbo_color_attachments
#include <lime/graphics/opengl/ext/NV_fbo_color_attachments.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_draw_buffers
#include <lime/graphics/opengl/ext/NV_draw_buffers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_depth_nonlinear
#include <lime/graphics/opengl/ext/NV_depth_nonlinear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_coverage_sample
#include <lime/graphics/opengl/ext/NV_coverage_sample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_KHR_texture_compression_astc_ldr
#include <lime/graphics/opengl/ext/KHR_texture_compression_astc_ldr.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_KHR_debug
#include <lime/graphics/opengl/ext/KHR_debug.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_texture_compression_pvrtc
#include <lime/graphics/opengl/ext/IMG_texture_compression_pvrtc.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_shader_binary
#include <lime/graphics/opengl/ext/IMG_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_read_format
#include <lime/graphics/opengl/ext/IMG_read_format.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_program_binary
#include <lime/graphics/opengl/ext/IMG_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_multisampled_render_to_texture
#include <lime/graphics/opengl/ext/IMG_multisampled_render_to_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_FJ_shader_binary_GCCSO
#include <lime/graphics/opengl/ext/FJ_shader_binary_GCCSO.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_unpack_subimage
#include <lime/graphics/opengl/ext/EXT_unpack_subimage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_type_2_10_10_10_REV
#include <lime/graphics/opengl/ext/EXT_texture_type_2_10_10_10_REV.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_storage
#include <lime/graphics/opengl/ext/EXT_texture_storage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_rg
#include <lime/graphics/opengl/ext/EXT_texture_rg.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_format_BGRA8888
#include <lime/graphics/opengl/ext/EXT_texture_format_BGRA8888.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_filter_anisotropic
#include <lime/graphics/opengl/ext/EXT_texture_filter_anisotropic.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_compression_s3tc
#include <lime/graphics/opengl/ext/EXT_texture_compression_s3tc.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_compression_dxt1
#include <lime/graphics/opengl/ext/EXT_texture_compression_dxt1.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shadow_samplers
#include <lime/graphics/opengl/ext/EXT_shadow_samplers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shader_texture_lod
#include <lime/graphics/opengl/ext/EXT_shader_texture_lod.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shader_framebuffer_fetch
#include <lime/graphics/opengl/ext/EXT_shader_framebuffer_fetch.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_separate_shader_objects
#include <lime/graphics/opengl/ext/EXT_separate_shader_objects.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_sRGB
#include <lime/graphics/opengl/ext/EXT_sRGB.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_robustness
#include <lime/graphics/opengl/ext/EXT_robustness.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_read_format_bgra
#include <lime/graphics/opengl/ext/EXT_read_format_bgra.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_packed_depth_stencil
#include <lime/graphics/opengl/ext/EXT_packed_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_occlusion_query_boolean
#include <lime/graphics/opengl/ext/EXT_occlusion_query_boolean.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multiview_draw_buffers
#include <lime/graphics/opengl/ext/EXT_multiview_draw_buffers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multisampled_render_to_texture
#include <lime/graphics/opengl/ext/EXT_multisampled_render_to_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multi_draw_arrays
#include <lime/graphics/opengl/ext/EXT_multi_draw_arrays.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_map_buffer_range
#include <lime/graphics/opengl/ext/EXT_map_buffer_range.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_discard_framebuffer
#include <lime/graphics/opengl/ext/EXT_discard_framebuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_debug_marker
#include <lime/graphics/opengl/ext/EXT_debug_marker.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_debug_label
#include <lime/graphics/opengl/ext/EXT_debug_label.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_color_buffer_half_float
#include <lime/graphics/opengl/ext/EXT_color_buffer_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_color_buffer_float
#include <lime/graphics/opengl/ext/EXT_color_buffer_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_blend_minmax
#include <lime/graphics/opengl/ext/EXT_blend_minmax.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_bgra
#include <lime/graphics/opengl/ext/EXT_bgra.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_DMP_shader_binary
#include <lime/graphics/opengl/ext/DMP_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_rgba8
#include <lime/graphics/opengl/ext/ARM_rgba8.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_mali_shader_binary
#include <lime/graphics/opengl/ext/ARM_mali_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_mali_program_binary
#include <lime/graphics/opengl/ext/ARM_mali_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_texture_max_level
#include <lime/graphics/opengl/ext/APPLE_texture_max_level.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_texture_format_BGRA8888
#include <lime/graphics/opengl/ext/APPLE_texture_format_BGRA8888.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_sync
#include <lime/graphics/opengl/ext/APPLE_sync.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_rgb_422
#include <lime/graphics/opengl/ext/APPLE_rgb_422.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_framebuffer_multisample
#include <lime/graphics/opengl/ext/APPLE_framebuffer_multisample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_copy_texture_levels
#include <lime/graphics/opengl/ext/APPLE_copy_texture_levels.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_translated_shader_source
#include <lime/graphics/opengl/ext/ANGLE_translated_shader_source.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_usage
#include <lime/graphics/opengl/ext/ANGLE_texture_usage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_compression_dxt5
#include <lime/graphics/opengl/ext/ANGLE_texture_compression_dxt5.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_compression_dxt3
#include <lime/graphics/opengl/ext/ANGLE_texture_compression_dxt3.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_pack_reverse_row_order
#include <lime/graphics/opengl/ext/ANGLE_pack_reverse_row_order.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_instanced_arrays
#include <lime/graphics/opengl/ext/ANGLE_instanced_arrays.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_framebuffer_multisample
#include <lime/graphics/opengl/ext/ANGLE_framebuffer_multisample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_framebuffer_blit
#include <lime/graphics/opengl/ext/ANGLE_framebuffer_blit.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_program_binary_Z400
#include <lime/graphics/opengl/ext/AMD_program_binary_Z400.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_performance_monitor
#include <lime/graphics/opengl/ext/AMD_performance_monitor.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_compressed_ATC_texture
#include <lime/graphics/opengl/ext/AMD_compressed_ATC_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_compressed_3DC_texture
#include <lime/graphics/opengl/ext/AMD_compressed_3DC_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__WebGLContext_WebGLContext_Impl_
#include <lime/graphics/opengl/_WebGLContext/WebGLContext_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils_BytePointerData
#include <lime/utils/BytePointerData.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLVertexArrayObject_GLVertexArrayObject_Impl_
#include <lime/graphics/opengl/_GLVertexArrayObject/GLVertexArrayObject_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLTransformFeedback_GLTransformFeedback_Impl_
#include <lime/graphics/opengl/_GLTransformFeedback/GLTransformFeedback_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLTexture_GLTexture_Impl_
#include <lime/graphics/opengl/_GLTexture/GLTexture_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLShader_GLShader_Impl_
#include <lime/graphics/opengl/_GLShader/GLShader_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLSampler_GLSampler_Impl_
#include <lime/graphics/opengl/_GLSampler/GLSampler_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLRenderbuffer_GLRenderbuffer_Impl_
#include <lime/graphics/opengl/_GLRenderbuffer/GLRenderbuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLQuery_GLQuery_Impl_
#include <lime/graphics/opengl/_GLQuery/GLQuery_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLProgram_GLProgram_Impl_
#include <lime/graphics/opengl/_GLProgram/GLProgram_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLFramebuffer_GLFramebuffer_Impl_
#include <lime/graphics/opengl/_GLFramebuffer/GLFramebuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLES3Context_GLES3Context_Impl_
#include <lime/graphics/opengl/_GLES3Context/GLES3Context_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLES2Context_GLES2Context_Impl_
#include <lime/graphics/opengl/_GLES2Context/GLES2Context_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLBuffer_GLBuffer_Impl_
#include <lime/graphics/opengl/_GLBuffer/GLBuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_graphics_format_PNG
#include <lime/graphics/format/PNG.h>
#endif
#ifndef INCLUDED_lime_graphics_format_JPEG
#include <lime/graphics/format/JPEG.h>
#endif
#ifndef INCLUDED_lime_graphics_format_BMP
#include <lime/graphics/format/BMP.h>
#endif
#ifndef INCLUDED_lime_graphics_console_VertexOutput
#include <lime/graphics/console/VertexOutput.h>
#endif
#ifndef INCLUDED_lime_graphics_console_VertexBuffer
#include <lime/graphics/console/VertexBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_console_Shader
#include <lime/graphics/console/Shader.h>
#endif
#ifndef INCLUDED_lime_graphics_console_IndexBuffer
#include <lime/graphics/console/IndexBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoSurface_CairoSurface_Impl_
#include <lime/graphics/cairo/_CairoSurface/CairoSurface_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoPattern_CairoPattern_Impl_
#include <lime/graphics/cairo/_CairoPattern/CairoPattern_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoImageSurface_CairoImageSurface_Impl_
#include <lime/graphics/cairo/_CairoImageSurface/CairoImageSurface_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo_CairoGlyph
#include <lime/graphics/cairo/CairoGlyph.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoFontOptions_CairoFontOptions_Impl_
#include <lime/graphics/cairo/_CairoFontOptions/CairoFontOptions_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoFontFace_CairoFontFace_Impl_
#include <lime/graphics/cairo/_CairoFontFace/CairoFontFace_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo_Cairo
#include <lime/graphics/cairo/Cairo.h>
#endif
#ifndef INCLUDED_lime_graphics_Renderer
#include <lime/graphics/Renderer.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageBuffer
#include <lime/graphics/ImageBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_FlashRenderContext
#include <lime/graphics/FlashRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_DOMRenderContext
#include <lime/graphics/DOMRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_ConsoleRenderContext
#include <lime/graphics/ConsoleRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_CanvasRenderContext
#include <lime/graphics/CanvasRenderContext.h>
#endif
#ifndef INCLUDED_lime_app__Event_ofEvents_T_Void
#include <lime/app/_Event_ofEvents_T_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_Touch_Void
#include <lime/app/_Event_lime_ui_Touch_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void
#include <lime/app/_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_Joystick_Void
#include <lime/app/_Event_lime_ui_Joystick_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_Gamepad_Void
#include <lime/app/_Event_lime_ui_Gamepad_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_GamepadButton_Void
#include <lime/app/_Event_lime_ui_GamepadButton_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_GamepadAxis_Float_Void
#include <lime/app/_Event_lime_ui_GamepadAxis_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_graphics_RenderContext_Void
#include <lime/app/_Event_lime_graphics_RenderContext_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_haxe_Function_Void
#include <lime/app/_Event_haxe_Function_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_String_Void
#include <lime/app/_Event_String_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_String_Int_Int_Void
#include <lime/app/_Event_String_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_lime_ui_JoystickHatPosition_Void
#include <lime/app/_Event_Int_lime_ui_JoystickHatPosition_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Void
#include <lime/app/_Event_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Int_Void
#include <lime/app/_Event_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Float_Void
#include <lime/app/_Event_Int_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Float_Float_Void
#include <lime/app/_Event_Int_Float_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Void
#include <lime/app/_Event_Float_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Int_Void
#include <lime/app/_Event_Float_Float_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Float_Void
#include <lime/app/_Event_Float_Float_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Dynamic_Void
#include <lime/app/_Event_Dynamic_Void.h>
#endif
#ifndef INCLUDED_lime_app_Promise_openfl_utils_ByteArray
#include <lime/app/Promise_openfl_utils_ByteArray.h>
#endif
#ifndef INCLUDED_lime_app_Promise_openfl_text_Font
#include <lime/app/Promise_openfl_text_Font.h>
#endif
#ifndef INCLUDED_lime_app_Promise_openfl_media_Sound
#include <lime/app/Promise_openfl_media_Sound.h>
#endif
#ifndef INCLUDED_lime_app_Promise_openfl_display_MovieClip
#include <lime/app/Promise_openfl_display_MovieClip.h>
#endif
#ifndef INCLUDED_lime_app_Promise_openfl_display_BitmapData
#include <lime/app/Promise_openfl_display_BitmapData.h>
#endif
#ifndef INCLUDED_lime_app_Promise_lime_utils_AssetLibrary
#include <lime/app/Promise_lime_utils_AssetLibrary.h>
#endif
#ifndef INCLUDED_lime_app_Promise_lime_text_Font
#include <lime/app/Promise_lime_text_Font.h>
#endif
#ifndef INCLUDED_lime_app_Promise_lime_media_AudioBuffer
#include <lime/app/Promise_lime_media_AudioBuffer.h>
#endif
#ifndef INCLUDED_lime_app_Promise_lime_graphics_Image
#include <lime/app/Promise_lime_graphics_Image.h>
#endif
#ifndef INCLUDED_lime_app_Promise_haxe_io_Bytes
#include <lime/app/Promise_haxe_io_Bytes.h>
#endif
#ifndef INCLUDED_lime_app_Promise_String
#include <lime/app/Promise_String.h>
#endif
#ifndef INCLUDED_lime_app_Promise
#include <lime/app/Promise.h>
#endif
#ifndef INCLUDED_lime_app_Preloader
#include <lime/app/Preloader.h>
#endif
#ifndef INCLUDED_lime_app__Future_FutureWork
#include <lime/app/_Future/FutureWork.h>
#endif
#ifndef INCLUDED_lime_app_Future
#include <lime/app/Future.h>
#endif
#ifndef INCLUDED_lime_app_Event
#include <lime/app/Event.h>
#endif
#ifndef INCLUDED_lime__macros_AssetsMacro
#include <lime/_macros/AssetsMacro.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeWindow
#include <lime/_backend/native/NativeWindow.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeRenderer
#include <lime/_backend/native/NativeRenderer.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeMouse
#include <lime/_backend/native/NativeMouse.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeHTTPRequest
#include <lime/_backend/native/NativeHTTPRequest.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_WindowEventInfo
#include <lime/_backend/native/_NativeApplication/WindowEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_TouchEventInfo
#include <lime/_backend/native/_NativeApplication/TouchEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_TextEventInfo
#include <lime/_backend/native/_NativeApplication/TextEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_SensorEventInfo
#include <lime/_backend/native/_NativeApplication/SensorEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_RenderEventInfo
#include <lime/_backend/native/_NativeApplication/RenderEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_MouseEventInfo
#include <lime/_backend/native/_NativeApplication/MouseEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_KeyEventInfo
#include <lime/_backend/native/_NativeApplication/KeyEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_JoystickEventInfo
#include <lime/_backend/native/_NativeApplication/JoystickEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_GamepadEventInfo
#include <lime/_backend/native/_NativeApplication/GamepadEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_DropEventInfo
#include <lime/_backend/native/_NativeApplication/DropEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_ClipboardEventInfo
#include <lime/_backend/native/_NativeApplication/ClipboardEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_ApplicationEventInfo
#include <lime/_backend/native/_NativeApplication/ApplicationEventInfo.h>
#endif
#ifndef INCLUDED_hxassert_AssertionFailureError
#include <hxassert/AssertionFailureError.h>
#endif
#ifndef INCLUDED_haxe_xml_Printer
#include <haxe/xml/Printer.h>
#endif
#ifndef INCLUDED_haxe_xml_XmlParserException
#include <haxe/xml/XmlParserException.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <haxe/io/Path.h>
#endif
#ifndef INCLUDED_haxe_io_FPHelper
#include <haxe/io/FPHelper.h>
#endif
#ifndef INCLUDED_haxe_io_Eof
#include <haxe/io/Eof.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_TreeNode
#include <haxe/ds/TreeNode.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_crypto_Md5
#include <haxe/crypto/Md5.h>
#endif
#ifndef INCLUDED_haxe_crypto_BaseCode
#include <haxe/crypto/BaseCode.h>
#endif
#ifndef INCLUDED_haxe_Utf8
#include <haxe/Utf8.h>
#endif
#ifndef INCLUDED_haxe__Unserializer_NullResolver
#include <haxe/_Unserializer/NullResolver.h>
#endif
#ifndef INCLUDED_haxe__Unserializer_DefaultResolver
#include <haxe/_Unserializer/DefaultResolver.h>
#endif
#ifndef INCLUDED_haxe_Resource
#include <haxe/Resource.h>
#endif
#ifndef INCLUDED_haxe_CallStack
#include <haxe/CallStack.h>
#endif
#ifndef INCLUDED_openfl_display_Shape
#include <openfl/display/Shape.h>
#endif
#ifndef INCLUDED_graphic_HintTextfield
#include <graphic/HintTextfield.h>
#endif
#ifndef INCLUDED_graphic_Fonts
#include <graphic/Fonts.h>
#endif
#ifndef INCLUDED_lime_text_Font
#include <lime/text/Font.h>
#endif
#ifndef INCLUDED_cpp_vm_Thread
#include <cpp/vm/Thread.h>
#endif
#ifndef INCLUDED_cpp_vm_Deque
#include <cpp/vm/Deque.h>
#endif
#ifndef INCLUDED_cpp_Lib
#include <cpp/Lib.h>
#endif
#ifndef INCLUDED_battle_vision_UnitsAndBolts
#include <battle/vision/UnitsAndBolts.h>
#endif
#ifndef INCLUDED_battle_vision_BuffRect
#include <battle/vision/BuffRect.h>
#endif
#ifndef INCLUDED_battle_vision_AbilityCell
#include <battle/vision/AbilityCell.h>
#endif
#ifndef INCLUDED_battle_vision_AbilityBar
#include <battle/vision/AbilityBar.h>
#endif
#ifndef INCLUDED_battle_struct_Wheel
#include <battle/struct/Wheel.h>
#endif
#ifndef INCLUDED_battle_struct_UnitCoords
#include <battle/struct/UnitCoords.h>
#endif
#ifndef INCLUDED_battle_struct_UPairIterator
#include <battle/struct/UPairIterator.h>
#endif
#ifndef INCLUDED_battle_struct_UPair
#include <battle/struct/UPair.h>
#endif
#ifndef INCLUDED_battle_struct_Pool
#include <battle/struct/Pool.h>
#endif
#ifndef INCLUDED_battle_struct_FloatPool
#include <battle/struct/FloatPool.h>
#endif
#ifndef INCLUDED_battle_struct_Countdown
#include <battle/struct/Countdown.h>
#endif
#ifndef INCLUDED_battle_struct_BuffQueue
#include <battle/struct/BuffQueue.h>
#endif
#ifndef INCLUDED_battle_Utils
#include <battle/Utils.h>
#endif
#ifndef INCLUDED_battle_Unit
#include <battle/Unit.h>
#endif
#ifndef INCLUDED_battle_Passive
#include <battle/Passive.h>
#endif
#ifndef INCLUDED_battle_Model
#include <battle/Model.h>
#endif
#ifndef INCLUDED_battle_ISimpleModel
#include <battle/ISimpleModel.h>
#endif
#ifndef INCLUDED_battle_IObservableModel
#include <battle/IObservableModel.h>
#endif
#ifndef INCLUDED_battle_IMutableModel
#include <battle/IMutableModel.h>
#endif
#ifndef INCLUDED_battle_IModelObserver
#include <battle/IModelObserver.h>
#endif
#ifndef INCLUDED_battle_EffectData
#include <battle/EffectData.h>
#endif
#ifndef INCLUDED_battle_Buff
#include <battle/Buff.h>
#endif
#ifndef INCLUDED_battle_Active
#include <battle/Active.h>
#endif
#ifndef INCLUDED_battle_Ability
#include <battle/Ability.h>
#endif
#ifndef INCLUDED_Zealon
#include <Zealon.h>
#endif
#ifndef INCLUDED_XMLUtils
#include <XMLUtils.h>
#endif
#ifndef INCLUDED_VoltSnare
#include <VoltSnare.h>
#endif
#ifndef INCLUDED_UpperBattleBar
#include <UpperBattleBar.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_TreeBox
#include <TreeBox.h>
#endif
#ifndef INCLUDED_ThunderbirdSoul
#include <ThunderbirdSoul.h>
#endif
#ifndef INCLUDED_Terminator
#include <Terminator.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_Strikeback
#include <Strikeback.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_SpellLg
#include <SpellLg.h>
#endif
#ifndef INCLUDED_SkipTurn
#include <SkipTurn.h>
#endif
#ifndef INCLUDED_ShockTherapy
#include <ShockTherapy.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_ReSpec
#include <ReSpec.h>
#endif
#ifndef INCLUDED_QuickStrike
#include <QuickStrike.h>
#endif
#ifndef INCLUDED_Progress
#include <Progress.h>
#endif
#ifndef INCLUDED_PhBuff
#include <PhBuff.h>
#endif
#ifndef INCLUDED_NullZoneBGR
#include <NullZoneBGR.h>
#endif
#ifndef INCLUDED_NullZoneBG
#include <NullZoneBG.h>
#endif
#ifndef INCLUDED_NoAbility
#include <NoAbility.h>
#endif
#ifndef INCLUDED_NextBattle
#include <NextBattle.h>
#endif
#ifndef INCLUDED_MathUtils
#include <MathUtils.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_ManifestResources
#include <ManifestResources.h>
#endif
#ifndef INCLUDED_LockedAbility
#include <LockedAbility.h>
#endif
#ifndef INCLUDED__List_ListIterator
#include <_List/ListIterator.h>
#endif
#ifndef INCLUDED__List_ListNode
#include <_List/ListNode.h>
#endif
#ifndef INCLUDED_Linear
#include <Linear.h>
#endif
#ifndef INCLUDED_LightningBolt
#include <LightningBolt.h>
#endif
#ifndef INCLUDED_LgBuff
#include <LgBuff.h>
#endif
#ifndef INCLUDED_LeaveBattle
#include <LeaveBattle.h>
#endif
#ifndef INCLUDED_Lambda
#include <Lambda.h>
#endif
#ifndef INCLUDED_Icarus
#include <Icarus.h>
#endif
#ifndef INCLUDED_Hugo
#include <Hugo.h>
#endif
#ifndef INCLUDED_HighVoltage
#include <HighVoltage.h>
#endif
#ifndef INCLUDED_Hero
#include <Hero.h>
#endif
#ifndef INCLUDED_Heal
#include <Heal.h>
#endif
#ifndef INCLUDED_Ghost
#include <Ghost.h>
#endif
#ifndef INCLUDED_Energize
#include <Energize.h>
#endif
#ifndef INCLUDED_ElectricalStorm
#include <ElectricalStorm.h>
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_EMPBlast
#include <EMPBlast.h>
#endif
#ifndef INCLUDED_Disrupt
#include <Disrupt.h>
#endif
#ifndef INCLUDED_Date
#include <Date.h>
#endif
#ifndef INCLUDED_DarkPact
#include <DarkPact.h>
#endif
#ifndef INCLUDED_CloseAbScreen
#include <CloseAbScreen.h>
#endif
#ifndef INCLUDED_CircleAbilityMask
#include <CircleAbilityMask.h>
#endif
#ifndef INCLUDED_Charge
#include <Charge.h>
#endif
#ifndef INCLUDED_Buff9
#include <Buff9.h>
#endif
#ifndef INCLUDED_Buff8
#include <Buff8.h>
#endif
#ifndef INCLUDED_Buff7
#include <Buff7.h>
#endif
#ifndef INCLUDED_Buff6
#include <Buff6.h>
#endif
#ifndef INCLUDED_Buff5
#include <Buff5.h>
#endif
#ifndef INCLUDED_Buff4
#include <Buff4.h>
#endif
#ifndef INCLUDED_Buff3
#include <Buff3.h>
#endif
#ifndef INCLUDED_Buff2
#include <Buff2.h>
#endif
#ifndef INCLUDED_Buff11
#include <Buff11.h>
#endif
#ifndef INCLUDED_Buff10
#include <Buff10.h>
#endif
#ifndef INCLUDED_Buff1
#include <Buff1.h>
#endif
#ifndef INCLUDED_BottomBattleBar
#include <BottomBattleBar.h>
#endif
#ifndef INCLUDED_BoltLg
#include <BoltLg.h>
#endif
#ifndef INCLUDED_BarValuesBox
#include <BarValuesBox.h>
#endif
#ifndef INCLUDED_Assets
#include <Assets.h>
#endif
#ifndef INCLUDED_Archghost
#include <Archghost.h>
#endif
#ifndef INCLUDED_ArcFlash
#include <ArcFlash.h>
#endif
#ifndef INCLUDED_DocumentClass
#include <DocumentClass.h>
#endif
#ifndef INCLUDED_SSprite
#include <SSprite.h>
#endif
#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_AddVitality
#include <AddVitality.h>
#endif
#ifndef INCLUDED_AddStrength
#include <AddStrength.h>
#endif
#ifndef INCLUDED_AddIntellect
#include <AddIntellect.h>
#endif
#ifndef INCLUDED_AddFlow
#include <AddFlow.h>
#endif
#ifndef INCLUDED_AbilityScreenButton
#include <AbilityScreenButton.h>
#endif
#ifndef INCLUDED_AbilityScreenBG
#include <AbilityScreenBG.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_List
#include <List.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_openfl_Vector_openfl_display_DisplayObject
#include <lime/utils/ObjectPool_openfl_Vector_openfl_display_DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__Vector_Vector_Impl_
#include <openfl/_Vector/Vector_Impl_.h>
#endif
#ifndef INCLUDED_openfl_geom_ColorTransform
#include <openfl/geom/ColorTransform.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

void __files__boot();

void __boot_all()
{
__files__boot();
hx::RegisterResources( hx::GetResources() );
::roaming::screens::Screen_obj::__register();
::roaming::enums::Attribute_obj::__register();
::openfl::display::GraphicsFillType_obj::__register();
::openfl::display::GraphicsDataType_obj::__register();
::openfl::_internal::timeline::FrameObjectType_obj::__register();
::openfl::_internal::swf::ShapeCommand_obj::__register();
::openfl::_internal::swf::FilterType_obj::__register();
::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::__register();
::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::__register();
::openfl::_internal::renderer::DrawCommandType_obj::__register();
::lime::ui::MouseCursor_obj::__register();
::lime::_hx_system::_ThreadPool::ThreadPoolMessageType_obj::__register();
::lime::_hx_system::SensorType_obj::__register();
::lime::_hx_system::Endian_obj::__register();
::lime::media::AudioContext_obj::__register();
::lime::utils::TAError_obj::__register();
::lime::graphics::opengl::GLContextType_obj::__register();
::lime::graphics::format::BMPType_obj::__register();
::lime::graphics::console::Primitive_obj::__register();
::lime::graphics::RendererType_obj::__register();
::lime::graphics::RenderContext_obj::__register();
::lime::graphics::ImageType_obj::__register();
::lime::graphics::ImageChannel_obj::__register();
::haxe::io::Error_obj::__register();
::haxe::StackItem_obj::__register();
::battle::vision::BarType_obj::__register();
::battle::vision::TextfieldType_obj::__register();
::battle::enums::UnitType_obj::__register();
::battle::enums::Team_obj::__register();
::battle::enums::StrikeType_obj::__register();
::battle::enums::Source_obj::__register();
::battle::enums::InputMode_obj::__register();
::battle::enums::BuffMode_obj::__register();
::battle::enums::AbilityType_obj::__register();
::battle::enums::AbilityTarget_obj::__register();
::battle::data::BattleEvent_obj::__register();
::battle::TargetResult_obj::__register();
::battle::ChooseResult_obj::__register();
::Zone_obj::__register();
::ValueType_obj::__register();
::ID_obj::__register();
::Element_obj::__register();
::roaming::screens::SRoaming_obj::__register();
::openfl::utils::_Endian::Endian_Impl__obj::__register();
::openfl::utils::_CompressionAlgorithm::CompressionAlgorithm_Impl__obj::__register();
::openfl::utils::ByteArrayData_obj::__register();
::openfl::utils::_ByteArray::ByteArray_Impl__obj::__register();
::openfl::utils::Assets_obj::__register();
::openfl::ui::_MouseCursor::MouseCursor_Impl__obj::__register();
::openfl::ui::Mouse_obj::__register();
::openfl::ui::Keyboard_obj::__register();
::openfl::ui::GameInputDevice_obj::__register();
::openfl::ui::GameInput_obj::__register();
::openfl::text::_TextFormatAlign::TextFormatAlign_Impl__obj::__register();
::openfl::text::_TextFieldType::TextFieldType_Impl__obj::__register();
::openfl::text::_TextFieldAutoSize::TextFieldAutoSize_Impl__obj::__register();
::openfl::text::TextField_obj::__register();
::openfl::text::_GridFitType::GridFitType_Impl__obj::__register();
::openfl::text::_FontType::FontType_Impl__obj::__register();
::openfl::text::_FontStyle::FontStyle_Impl__obj::__register();
::openfl::text::_AntiAliasType::AntiAliasType_Impl__obj::__register();
::openfl::_hx_system::System_obj::__register();
::openfl::_hx_system::SecurityDomain_obj::__register();
::openfl::_hx_system::ApplicationDomain_obj::__register();
::openfl::net::URLRequestDefaults_obj::__register();
::openfl::net::_URLLoaderDataFormat::URLLoaderDataFormat_Impl__obj::__register();
::openfl::net::NetConnection_obj::__register();
::openfl::media::SoundMixer_obj::__register();
::openfl::geom::Point_obj::__register();
::openfl::geom::_Orientation3D::Orientation3D_Impl__obj::__register();
::openfl::filters::GlowFilter_obj::__register();
::openfl::filters::ConvolutionFilter_obj::__register();
::openfl::filters::ColorMatrixFilter_obj::__register();
::openfl::filters::BlurFilter_obj::__register();
::openfl::events::UncaughtErrorEvent_obj::__register();
::openfl::events::TouchEvent_obj::__register();
::openfl::events::SecurityErrorEvent_obj::__register();
::openfl::events::RenderEvent_obj::__register();
::openfl::events::ProgressEvent_obj::__register();
::openfl::events::NetStatusEvent_obj::__register();
::openfl::events::MouseEvent_obj::__register();
::openfl::events::KeyboardEvent_obj::__register();
::openfl::events::IOErrorEvent_obj::__register();
::openfl::events::HTTPStatusEvent_obj::__register();
::openfl::events::GameInputEvent_obj::__register();
::openfl::events::FullScreenEvent_obj::__register();
::openfl::events::FocusEvent_obj::__register();
::openfl::events::ErrorEvent_obj::__register();
::openfl::events::TextEvent_obj::__register();
::openfl::events::ActivityEvent_obj::__register();
::openfl::events::Event_obj::__register();
::openfl::errors::Error_obj::__register();
::openfl::display3D::textures::Texture_obj::__register();
::openfl::display3D::_Context3DWrapMode::Context3DWrapMode_Impl__obj::__register();
::openfl::display3D::_Context3DVertexBufferFormat::Context3DVertexBufferFormat_Impl__obj::__register();
::openfl::display3D::_Context3DTriangleFace::Context3DTriangleFace_Impl__obj::__register();
::openfl::display3D::_Context3DTextureFormat::Context3DTextureFormat_Impl__obj::__register();
::openfl::display3D::_Context3DTextureFilter::Context3DTextureFilter_Impl__obj::__register();
::openfl::display3D::_Context3DStencilAction::Context3DStencilAction_Impl__obj::__register();
::openfl::display3D::_Context3DRenderMode::Context3DRenderMode_Impl__obj::__register();
::openfl::display3D::_Context3DProgramType::Context3DProgramType_Impl__obj::__register();
::openfl::display3D::_Context3DProfile::Context3DProfile_Impl__obj::__register();
::openfl::display3D::_Context3DMipFilter::Context3DMipFilter_Impl__obj::__register();
::openfl::display3D::_Context3DCompareMode::Context3DCompareMode_Impl__obj::__register();
::openfl::display3D::_Context3DBufferUsage::Context3DBufferUsage_Impl__obj::__register();
::openfl::display3D::_Context3DBlendFactor::Context3DBlendFactor_Impl__obj::__register();
::openfl::display3D::_Context3D::Context3DTelemetry_Impl__obj::__register();
::openfl::display3D::Context3D_obj::__register();
::openfl::display::_TriangleCulling::TriangleCulling_Impl__obj::__register();
::openfl::display::_StageScaleMode::StageScaleMode_Impl__obj::__register();
::openfl::display::_StageQuality::StageQuality_Impl__obj::__register();
::openfl::display::_StageDisplayState::StageDisplayState_Impl__obj::__register();
::openfl::display::_StageAlign::StageAlign_Impl__obj::__register();
::openfl::display::_SpreadMethod::SpreadMethod_Impl__obj::__register();
::openfl::display::_ShaderPrecision::ShaderPrecision_Impl__obj::__register();
::openfl::display::_ShaderParameterType::ShaderParameterType_Impl__obj::__register();
::openfl::display::_PixelSnapping::PixelSnapping_Impl__obj::__register();
::openfl::display::OpenGLRenderer_obj::__register();
::openfl::display::LoaderInfo_obj::__register();
::openfl::display::_LineScaleMode::LineScaleMode_Impl__obj::__register();
::openfl::display::_JointStyle::JointStyle_Impl__obj::__register();
::openfl::display::_InterpolationMethod::InterpolationMethod_Impl__obj::__register();
::openfl::display::_GraphicsPathWinding::GraphicsPathWinding_Impl__obj::__register();
::openfl::display::GraphicsPath_obj::__register();
::openfl::display::Graphics_obj::__register();
::openfl::display::_GradientType::GradientType_Impl__obj::__register();
::openfl::display::_CapsStyle::CapsStyle_Impl__obj::__register();
::openfl::display::_BlendMode::BlendMode_Impl__obj::__register();
::openfl::_internal::utils::PerlinNoise_obj::__register();
::openfl::_internal::text::TextEngine_obj::__register();
::openfl::_internal::text::HTMLParser_obj::__register();
::openfl::_internal::swf::SWFLite_obj::__register();
::openfl::_internal::stage3D::opengl::GLTextureBase_obj::__register();
::openfl::_internal::stage3D::GLUtils_obj::__register();
::openfl::_internal::stage3D::Context3DStateCache_obj::__register();
::openfl::_internal::renderer::opengl::GLMaskShader_obj::__register();
::openfl::display::Shader_obj::__register();
::openfl::_internal::renderer::opengl::GLGraphics_obj::__register();
::openfl::geom::Matrix_obj::__register();
::openfl::geom::Rectangle_obj::__register();
::openfl::display::BitmapData_obj::__register();
::openfl::_internal::renderer::dom::DOMTextField_obj::__register();
::openfl::_internal::renderer::canvas::CanvasGraphics_obj::__register();
::openfl::_internal::renderer::cairo::CairoGraphics_obj::__register();
::openfl::_internal::renderer::DrawCommandBuffer_obj::__register();
::openfl::_internal::TouchData_obj::__register();
::openfl::_internal::Lib_obj::__register();
::openfl::Lib_obj::__register();
::motion::Actuate_obj::__register();
::motion::actuators::SimpleActuator_obj::__register();
::lime::utils::_UInt8ClampedArray::UInt8ClampedArray_Impl__obj::__register();
::lime::utils::_UInt8Array::UInt8Array_Impl__obj::__register();
::lime::utils::_UInt32Array::UInt32Array_Impl__obj::__register();
::lime::utils::_UInt16Array::UInt16Array_Impl__obj::__register();
::lime::utils::_Log::LogLevel_Impl__obj::__register();
::lime::utils::Log_obj::__register();
::lime::utils::_Int8Array::Int8Array_Impl__obj::__register();
::lime::utils::_Int32Array::Int32Array_Impl__obj::__register();
::lime::utils::_Int16Array::Int16Array_Impl__obj::__register();
::lime::utils::_Float64Array::Float64Array_Impl__obj::__register();
::lime::utils::_Float32Array::Float32Array_Impl__obj::__register();
::lime::utils::Assets_obj::__register();
::lime::ui::Touch_obj::__register();
::lime::ui::_ScanCode::ScanCode_Impl__obj::__register();
::lime::ui::_KeyModifier::KeyModifier_Impl__obj::__register();
::lime::ui::_KeyCode::KeyCode_Impl__obj::__register();
::lime::ui::_JoystickHatPosition::JoystickHatPosition_Impl__obj::__register();
::lime::ui::Joystick_obj::__register();
::lime::ui::_GamepadButton::GamepadButton_Impl__obj::__register();
::lime::ui::_GamepadAxis::GamepadAxis_Impl__obj::__register();
::lime::ui::Gamepad_obj::__register();
::lime::text::unifill::Unicode_obj::__register();
::lime::text::_TextScript::TextScript_Impl__obj::__register();
::lime::text::_TextDirection::TextDirection_Impl__obj::__register();
::lime::_hx_system::System_obj::__register();
::lime::_hx_system::Sensor_obj::__register();
::lime::_hx_system::JNI_obj::__register();
::lime::_hx_system::Clipboard_obj::__register();
::lime::_hx_system::CFFI_obj::__register();
::lime::net::curl::CURL_obj::__register();
::lime::media::openal::ALC_obj::__register();
::lime::media::openal::AL_obj::__register();
::lime::math::color::_RGBA::RGBA_Impl__obj::__register();
::lime::math::_Matrix4::Matrix4_Impl__obj::__register();
::lime::math::Matrix3_obj::__register();
::lime::math::_ColorMatrix::ColorMatrix_Impl__obj::__register();
::lime::graphics::opengl::_WebGL2Context::WebGL2Context_Impl__obj::__register();
::lime::graphics::opengl::GL_obj::__register();
::lime::graphics::cairo::_CairoFTFontFace::CairoFTFontFace_Impl__obj::__register();
::lime::graphics::Image_obj::__register();
::lime::_backend::native::NativeGLRenderContext_obj::__register();
::lime::_backend::native::NativeAudioSource_obj::__register();
::hxassert::Assert_obj::__register();
::haxe::xml::Parser_obj::__register();
::haxe::crypto::Base64_obj::__register();
::haxe::Unserializer_obj::__register();
::haxe::Timer_obj::__register();
::haxe::Serializer_obj::__register();
::haxe::Log_obj::__register();
::graphic::ProgressBar_obj::__register();
::graphic::_Fonts::Time_obj::__register();
::graphic::_Fonts::Buff_obj::__register();
::graphic::_Fonts::Damage_obj::__register();
::graphic::_Fonts::Mirror_obj::__register();
::openfl::text::Font_obj::__register();
::battle::vision::UnitStateBar_obj::__register();
::battle::vision::Common_obj::__register();
::battle::data::Units_obj::__register();
::battle::data::Passives_obj::__register();
::battle::data::Buffs_obj::__register();
::battle::data::Abilities_obj::__register();
::battle::EffectHandler_obj::__register();
::Xml_obj::__register();
::StringTools_obj::__register();
::__ASSET__manifest_default_json_obj::__register();
::Main_obj::__register();
::ApplicationMain_obj::__register();
::lime::app::Application_obj::__register();
::lime::_backend::native::NativeApplication_obj::__register();
::lime::_backend::native::NativeCFFI_obj::__register();
::openfl::display::MovieClip_obj::__register();
::openfl::display::DisplayObject_obj::__register();
::sys::io::Process_obj::__register();
::sys::io::_Process::Stdout_obj::__register();
::sys::io::_Process::Stdin_obj::__register();
::sys::io::FileOutput_obj::__register();
::sys::io::File_obj::__register();
::sys::FileSystem_obj::__register();
::roaming::screens::components::WheelContainer_obj::__register();
::roaming::screens::components::TreeContainer_obj::__register();
::roaming::screens::components::PointsAndRespec_obj::__register();
::roaming::screens::components::AttributeContainer_obj::__register();
::roaming::screens::Utils_obj::__register();
::roaming::screens::SAbility_obj::__register();
::roaming::screens::ISAbility_obj::__register();
::roaming::screens::IScreen_obj::__register();
::roaming::screens::Canvas_obj::__register();
::roaming::screens::ICanvas_obj::__register();
::roaming::TreeIterator_obj::__register();
::roaming::Tree_obj::__register();
::roaming::TreeAbility_obj::__register();
::roaming::Player_obj::__register();
::roaming::Unit_obj::__register();
::roaming::Ability_obj::__register();
::haxe::lang::Iterable_obj::__register();
::haxe::lang::Iterator_obj::__register();
::openfl::utils::_Object::Object_Impl__obj::__register();
::openfl::utils::IDataInput_obj::__register();
::openfl::utils::IDataOutput_obj::__register();
::openfl::utils::AssetCache_obj::__register();
::openfl::utils::IAssetCache_obj::__register();
::openfl::ui::GameInputControl_obj::__register();
::openfl::text::TextLineMetrics_obj::__register();
::openfl::text::TextFormat_obj::__register();
::openfl::text::StaticText_obj::__register();
::openfl::_hx_system::LoaderContext_obj::__register();
::openfl::net::_URLVariables::URLVariables_Impl__obj::__register();
::openfl::net::URLRequestHeader_obj::__register();
::openfl::net::URLRequest_obj::__register();
::openfl::net::URLLoader_obj::__register();
::openfl::net::NetStream_obj::__register();
::openfl::media::SoundTransform_obj::__register();
::openfl::media::SoundLoaderContext_obj::__register();
::openfl::media::SoundChannel_obj::__register();
::openfl::media::Sound_obj::__register();
::openfl::media::ID3Info_obj::__register();
::openfl::geom::Vector3D_obj::__register();
::openfl::geom::Transform_obj::__register();
::openfl::geom::Matrix3D_obj::__register();
::openfl::filters::_GlowFilter::GlowShader_obj::__register();
::openfl::filters::DropShadowFilter_obj::__register();
::openfl::filters::_ConvolutionFilter::ConvolutionShader_obj::__register();
::openfl::filters::_ColorMatrixFilter::ColorMatrixShader_obj::__register();
::openfl::filters::_BlurFilter::BlurShader_obj::__register();
::openfl::filters::BitmapFilterShader_obj::__register();
::openfl::filters::BitmapFilter_obj::__register();
::openfl::events::UncaughtErrorEvents_obj::__register();
::openfl::events::_EventDispatcher::Listener_obj::__register();
::openfl::events::_EventDispatcher::DispatchIterator_obj::__register();
::openfl::errors::TypeError_obj::__register();
::openfl::errors::RangeError_obj::__register();
::openfl::errors::IllegalOperationError_obj::__register();
::openfl::errors::EOFError_obj::__register();
::openfl::errors::IOError_obj::__register();
::openfl::errors::ArgumentError_obj::__register();
::openfl::display3D::textures::VideoTexture_obj::__register();
::openfl::display3D::textures::RectangleTexture_obj::__register();
::openfl::display3D::textures::CubeTexture_obj::__register();
::openfl::display3D::textures::TextureBase_obj::__register();
::openfl::display3D::VertexBuffer3D_obj::__register();
::openfl::display3D::UniformMap_obj::__register();
::openfl::display3D::Uniform_obj::__register();
::openfl::display3D::Program3D_obj::__register();
::openfl::display3D::IndexBuffer3D_obj::__register();
::openfl::display::Window_obj::__register();
::openfl::display::Stage3D_obj::__register();
::openfl::display::Stage_obj::__register();
::openfl::display::SimpleButton_obj::__register();
::openfl::display::ShaderParameter_Int_obj::__register();
::openfl::display::ShaderParameter_Float_obj::__register();
::openfl::display::ShaderParameter_Bool_obj::__register();
::openfl::display::ShaderParameter_obj::__register();
::openfl::display::ShaderInput_openfl_display_BitmapData_obj::__register();
::openfl::display::ShaderInput_obj::__register();
::openfl::display::_ShaderData::ShaderData_Impl__obj::__register();
::openfl::display::DefaultPreloader_obj::__register();
::openfl::display::Preloader_obj::__register();
::openfl::display::PNGEncoderOptions_obj::__register();
::openfl::display::_MovieClip::FrameSymbolInstance_obj::__register();
::openfl::display::Loader_obj::__register();
::openfl::display::JPEGEncoderOptions_obj::__register();
::openfl::display::GraphicsTrianglePath_obj::__register();
::openfl::display::GraphicsStroke_obj::__register();
::openfl::display::IGraphicsStroke_obj::__register();
::openfl::display::GraphicsSolidFill_obj::__register();
::openfl::display::GraphicsShaderFill_obj::__register();
::openfl::display::GraphicsShader_obj::__register();
::openfl::display::GraphicsQuadPath_obj::__register();
::openfl::display::IGraphicsPath_obj::__register();
::openfl::display::GraphicsGradientFill_obj::__register();
::openfl::display::GraphicsEndFill_obj::__register();
::openfl::display::GraphicsBitmapFill_obj::__register();
::openfl::display::IGraphicsData_obj::__register();
::openfl::display::IGraphicsFill_obj::__register();
::openfl::display::FrameLabel_obj::__register();
::openfl::display::DisplayObjectShader_obj::__register();
::openfl::display::DOMRenderer_obj::__register();
::openfl::display::CanvasRenderer_obj::__register();
::openfl::display::CairoRenderer_obj::__register();
::openfl::display::DisplayObjectRenderer_obj::__register();
::openfl::display::Bitmap_obj::__register();
::openfl::display::Application_obj::__register();
::openfl::_internal::timeline::FrameObject_obj::__register();
::openfl::_internal::timeline::Frame_obj::__register();
::openfl::_internal::text::TextLayoutGroup_obj::__register();
::openfl::_internal::text::TextFormatRange_obj::__register();
::openfl::_internal::symbols::StaticTextRecord_obj::__register();
::openfl::_internal::symbols::StaticTextSymbol_obj::__register();
::openfl::_internal::symbols::SpriteSymbol_obj::__register();
::openfl::_internal::symbols::ShapeSymbol_obj::__register();
::openfl::_internal::symbols::FontSymbol_obj::__register();
::openfl::_internal::symbols::DynamicTextSymbol_obj::__register();
::openfl::_internal::symbols::ButtonSymbol_obj::__register();
::openfl::_internal::symbols::BitmapSymbol_obj::__register();
::openfl::_internal::symbols::SWFSymbol_obj::__register();
::openfl::_internal::swf::SWFLiteLibrary_obj::__register();
::openfl::utils::AssetLibrary_obj::__register();
::openfl::_internal::stage3D::opengl::GLVideoTexture_obj::__register();
::openfl::_internal::stage3D::opengl::GLVertexBuffer3D_obj::__register();
::openfl::_internal::stage3D::opengl::GLTexture_obj::__register();
::openfl::_internal::stage3D::opengl::GLStage3D_obj::__register();
::openfl::_internal::stage3D::opengl::GLRectangleTexture_obj::__register();
::openfl::_internal::stage3D::opengl::GLProgram3D_obj::__register();
::openfl::_internal::stage3D::opengl::GLIndexBuffer3D_obj::__register();
::openfl::_internal::stage3D::opengl::GLCubeTexture_obj::__register();
::openfl::_internal::stage3D::opengl::GLContext3D_obj::__register();
::openfl::_internal::stage3D::atf::ATFReader_obj::__register();
::openfl::_internal::stage3D::SamplerState_obj::__register();
::openfl::_internal::stage3D::GLCompressedTextureFormats_obj::__register();
::openfl::_internal::stage3D::_AGALConverter::SourceRegister_obj::__register();
::openfl::_internal::stage3D::_AGALConverter::SamplerRegister_obj::__register();
::openfl::_internal::stage3D::_AGALConverter::RegisterMapEntry_obj::__register();
::openfl::_internal::stage3D::RegisterMap_obj::__register();
::openfl::_internal::stage3D::_AGALConverter::DestRegister_obj::__register();
::openfl::_internal::stage3D::AGALConverter_obj::__register();
::openfl::_internal::renderer::opengl::GLTextField_obj::__register();
::openfl::_internal::renderer::opengl::GLShape_obj::__register();
::openfl::_internal::renderer::opengl::GLDisplayObject_obj::__register();
::openfl::_internal::renderer::opengl::GLBitmap_obj::__register();
::openfl::_internal::renderer::dom::DOMShape_obj::__register();
::openfl::_internal::renderer::dom::DOMDisplayObject_obj::__register();
::openfl::_internal::renderer::dom::DOMBitmap_obj::__register();
::openfl::_internal::renderer::canvas::CanvasTextField_obj::__register();
::openfl::_internal::renderer::canvas::CanvasShape_obj::__register();
::openfl::_internal::renderer::canvas::CanvasDisplayObject_obj::__register();
::openfl::_internal::renderer::canvas::CanvasBitmap_obj::__register();
::openfl::_internal::renderer::cairo::CairoTextField_obj::__register();
::openfl::_internal::renderer::cairo::CairoShape_obj::__register();
::openfl::_internal::renderer::cairo::CairoDisplayObject_obj::__register();
::openfl::_internal::renderer::cairo::CairoBitmap_obj::__register();
::openfl::_internal::renderer::ShaderBuffer_obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::WindingNonZeroView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::WindingEvenOddView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::OverrideMatrixView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::MoveToView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::LineToView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::LineStyleView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::LineGradientStyleView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::LineBitmapStyleView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::EndFillView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::DrawTrianglesView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::DrawRoundRectView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::DrawRectView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::DrawQuadsView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::DrawEllipseView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::DrawCircleView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::CurveToView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::CubicCurveToView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::BeginShaderFillView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::BeginGradientFillView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::BeginFillView_Impl__obj::__register();
::openfl::_internal::renderer::_DrawCommandReader::BeginBitmapFillView_Impl__obj::__register();
::openfl::_internal::renderer::DrawCommandReader_obj::__register();
::openfl::_Vector::ObjectVector_obj::__register();
::openfl::_Vector::IntVector_obj::__register();
::openfl::_Vector::FunctionVector_obj::__register();
::openfl::_Vector::FloatVector_obj::__register();
::openfl::_Vector::BoolVector_obj::__register();
::openfl::_Vector::IVector_obj::__register();
::motion::easing::QuadEaseOut_obj::__register();
::motion::easing::QuadEaseInOut_obj::__register();
::motion::easing::QuadEaseIn_obj::__register();
::motion::easing::Quad_obj::__register();
::motion::easing::LinearEaseNone_obj::__register();
::motion::easing::Linear_obj::__register();
::motion::easing::ExpoEaseInOut_obj::__register();
::motion::easing::ExpoEaseIn_obj::__register();
::motion::easing::CubicEaseOut_obj::__register();
::motion::easing::CubicEaseInOut_obj::__register();
::motion::easing::CubicEaseIn_obj::__register();
::motion::easing::Cubic_obj::__register();
::motion::actuators::TransformActuator_obj::__register();
::motion::actuators::PropertyPathDetails_obj::__register();
::motion::actuators::PropertyDetails_obj::__register();
::motion::actuators::MotionPathActuator_obj::__register();
::motion::actuators::MethodActuator_obj::__register();
::motion::actuators::FilterActuator_obj::__register();
::motion::RotationPath_obj::__register();
::motion::LinearPath_obj::__register();
::motion::BezierPath_obj::__register();
::motion::ComponentPath_obj::__register();
::motion::IComponentPath_obj::__register();
::motion::MotionPath_obj::__register();
::motion::_Actuate::TweenTimer_obj::__register();
::motion::_Actuate::TransformOptions_obj::__register();
::motion::_Actuate::EffectsOptions_obj::__register();
::motion::easing::ExpoEaseOut_obj::__register();
::motion::easing::IEasing_obj::__register();
::motion::easing::Expo_obj::__register();
::motion::actuators::GenericActuator_obj::__register();
::motion::actuators::IGenericActuator_obj::__register();
::lime::utils::compress::Zlib_obj::__register();
::lime::utils::compress::LZMA_obj::__register();
::lime::utils::compress::Deflate_obj::__register();
::lime::utils::ObjectPool_openfl_geom_Rectangle_obj::__register();
::lime::utils::ObjectPool_openfl_geom_Point_obj::__register();
::lime::utils::ObjectPool_openfl_geom_Matrix_obj::__register();
::lime::utils::ObjectPool_openfl__internal_renderer_ShaderBuffer_obj::__register();
::lime::utils::ObjectPool_openfl__internal_TouchData_obj::__register();
::lime::utils::ObjectPool_obj::__register();
::lime::utils::_DataPointer::DataPointer_Impl__obj::__register();
::lime::utils::_Bytes::Bytes_Impl__obj::__register();
::lime::utils::_BytePointer::BytePointer_Impl__obj::__register();
::lime::utils::_Assets::LibrarySymbol_obj::__register();
::lime::utils::AssetManifest_obj::__register();
::lime::utils::AssetLibrary_obj::__register();
::lime::utils::AssetCache_obj::__register();
::lime::utils::ArrayBufferIO_obj::__register();
::lime::utils::_ArrayBuffer::ArrayBuffer_Impl__obj::__register();
::lime::ui::Window_obj::__register();
::lime::ui::Mouse_obj::__register();
::lime::text::unifill::_Utf8::StringU8_Impl__obj::__register();
::lime::text::unifill::_Utf8::Utf8Impl_obj::__register();
::lime::text::unifill::_Utf8::Utf8_Impl__obj::__register();
::lime::text::unifill::Unifill_obj::__register();
::lime::text::unifill::InternalEncodingIter_obj::__register();
::lime::text::unifill::InternalEncoding_obj::__register();
::lime::text::unifill::InvalidCodeUnitSequence_obj::__register();
::lime::text::unifill::InvalidCodePoint_obj::__register();
::lime::text::unifill::Exception_obj::__register();
::lime::text::unifill::CodePointIter_obj::__register();
::lime::text::unifill::_CodePoint::CodePoint_Impl__obj::__register();
::lime::text::_UTF8String::Utf8Ext_obj::__register();
::lime::text::_UTF8String::UTF8String_Impl__obj::__register();
::lime::text::TextLayout_obj::__register();
::lime::text::GlyphPosition_obj::__register();
::lime::text::GlyphMetrics_obj::__register();
::lime::text::_Glyph::Glyph_Impl__obj::__register();
::lime::_hx_system::_ThreadPool::ThreadPoolMessage_obj::__register();
::lime::_hx_system::ThreadPool_obj::__register();
::lime::_hx_system::JNIMethod_obj::__register();
::lime::_hx_system::JNIStaticField_obj::__register();
::lime::_hx_system::JNIMemberField_obj::__register();
::lime::_hx_system::DisplayMode_obj::__register();
::lime::_hx_system::Display_obj::__register();
::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::__register();
::lime::net::_HTTPRequest_openfl_utils_ByteArray_obj::__register();
::lime::net::_HTTPRequest_lime_utils_Bytes_obj::__register();
::lime::net::_HTTPRequest_lime_text_Font_obj::__register();
::lime::net::_HTTPRequest_lime_media_AudioBuffer_obj::__register();
::lime::net::_HTTPRequest_lime_graphics_Image_obj::__register();
::lime::net::HTTPRequestHeader_obj::__register();
::lime::net::_HTTPRequest_String_obj::__register();
::lime::net::_HTTPRequest_Bytes_obj::__register();
::lime::net::HTTPRequest_obj::__register();
::lime::net::_HTTPRequest::AbstractHTTPRequest_obj::__register();
::lime::net::_IHTTPRequest_obj::__register();
::lime::media::openal::_ALSource::ALSource_Impl__obj::__register();
::lime::media::openal::_ALFilter::ALFilter_Impl__obj::__register();
::lime::media::openal::_ALEffect::ALEffect_Impl__obj::__register();
::lime::media::openal::_ALDevice::ALDevice_Impl__obj::__register();
::lime::media::openal::_ALContext::ALContext_Impl__obj::__register();
::lime::media::openal::_ALBuffer::ALBuffer_Impl__obj::__register();
::lime::media::openal::_ALAuxiliaryEffectSlot::ALAuxiliaryEffectSlot_Impl__obj::__register();
::lime::media::codecs::vorbis::VorbisInfo_obj::__register();
::lime::media::codecs::vorbis::VorbisFile_obj::__register();
::lime::media::codecs::vorbis::VorbisComment_obj::__register();
::lime::media::WebAudioContext_obj::__register();
::lime::media::HTML5AudioContext_obj::__register();
::lime::media::FlashAudioContext_obj::__register();
::lime::media::AudioSource_obj::__register();
::lime::media::AudioManager_obj::__register();
::lime::media::AudioBuffer_obj::__register();
::lime::media::ALCAudioContext_obj::__register();
::lime::media::ALAudioContext_obj::__register();
::lime::utils::ArrayBufferView_obj::__register();
::lime::math::color::_BGRA::BGRA_Impl__obj::__register();
::lime::math::color::_ARGB::ARGB_Impl__obj::__register();
::lime::math::Vector4_obj::__register();
::lime::math::Vector2_obj::__register();
::lime::math::Rectangle_obj::__register();
::lime::graphics::utils::_ImageDataUtil::ImageDataView_obj::__register();
::lime::graphics::utils::ImageDataUtil_obj::__register();
::lime::graphics::utils::ImageCanvasUtil_obj::__register();
::lime::graphics::opengl::ext::VIV_shader_binary_obj::__register();
::lime::graphics::opengl::ext::QCOM_writeonly_rendering_obj::__register();
::lime::graphics::opengl::ext::QCOM_tiled_rendering_obj::__register();
::lime::graphics::opengl::ext::QCOM_perfmon_global_mode_obj::__register();
::lime::graphics::opengl::ext::QCOM_extended_get2_obj::__register();
::lime::graphics::opengl::ext::QCOM_extended_get_obj::__register();
::lime::graphics::opengl::ext::QCOM_driver_control_obj::__register();
::lime::graphics::opengl::ext::QCOM_binning_control_obj::__register();
::lime::graphics::opengl::ext::QCOM_alpha_test_obj::__register();
::lime::graphics::opengl::ext::OES_vertex_type_10_10_10_2_obj::__register();
::lime::graphics::opengl::ext::OES_vertex_half_float_obj::__register();
::lime::graphics::opengl::ext::OES_vertex_array_object_obj::__register();
::lime::graphics::opengl::ext::OES_texture_npot_obj::__register();
::lime::graphics::opengl::ext::OES_texture_half_float_linear_obj::__register();
::lime::graphics::opengl::ext::OES_texture_half_float_obj::__register();
::lime::graphics::opengl::ext::OES_texture_float_linear_obj::__register();
::lime::graphics::opengl::ext::OES_texture_float_obj::__register();
::lime::graphics::opengl::ext::OES_texture_3D_obj::__register();
::lime::graphics::opengl::ext::OES_surfaceless_context_obj::__register();
::lime::graphics::opengl::ext::OES_stencil4_obj::__register();
::lime::graphics::opengl::ext::OES_stencil1_obj::__register();
::lime::graphics::opengl::ext::OES_standard_derivatives_obj::__register();
::lime::graphics::opengl::ext::OES_rgb8_rgba8_obj::__register();
::lime::graphics::opengl::ext::OES_required_internalformat_obj::__register();
::lime::graphics::opengl::ext::OES_packed_depth_stencil_obj::__register();
::lime::graphics::opengl::ext::OES_mapbuffer_obj::__register();
::lime::graphics::opengl::ext::OES_get_program_binary_obj::__register();
::lime::graphics::opengl::ext::OES_element_index_uint_obj::__register();
::lime::graphics::opengl::ext::OES_depth_texture_obj::__register();
::lime::graphics::opengl::ext::OES_depth32_obj::__register();
::lime::graphics::opengl::ext::OES_depth24_obj::__register();
::lime::graphics::opengl::ext::OES_compressed_paletted_texture_obj::__register();
::lime::graphics::opengl::ext::OES_compressed_ETC1_RGB8_texture_obj::__register();
::lime::graphics::opengl::ext::OES_EGL_image_external_obj::__register();
::lime::graphics::opengl::ext::OES_EGL_image_obj::__register();
::lime::graphics::opengl::ext::NV_texture_npot_2D_mipmap_obj::__register();
::lime::graphics::opengl::ext::NV_texture_compression_s3tc_update_obj::__register();
::lime::graphics::opengl::ext::NV_read_stencil_obj::__register();
::lime::graphics::opengl::ext::NV_read_depth_stencil_obj::__register();
::lime::graphics::opengl::ext::NV_read_depth_obj::__register();
::lime::graphics::opengl::ext::NV_read_buffer_front_obj::__register();
::lime::graphics::opengl::ext::NV_read_buffer_obj::__register();
::lime::graphics::opengl::ext::NV_fence_obj::__register();
::lime::graphics::opengl::ext::NV_fbo_color_attachments_obj::__register();
::lime::graphics::opengl::ext::NV_draw_buffers_obj::__register();
::lime::graphics::opengl::ext::NV_depth_nonlinear_obj::__register();
::lime::graphics::opengl::ext::NV_coverage_sample_obj::__register();
::lime::graphics::opengl::ext::KHR_texture_compression_astc_ldr_obj::__register();
::lime::graphics::opengl::ext::KHR_debug_obj::__register();
::lime::graphics::opengl::ext::IMG_texture_compression_pvrtc_obj::__register();
::lime::graphics::opengl::ext::IMG_shader_binary_obj::__register();
::lime::graphics::opengl::ext::IMG_read_format_obj::__register();
::lime::graphics::opengl::ext::IMG_program_binary_obj::__register();
::lime::graphics::opengl::ext::IMG_multisampled_render_to_texture_obj::__register();
::lime::graphics::opengl::ext::FJ_shader_binary_GCCSO_obj::__register();
::lime::graphics::opengl::ext::EXT_unpack_subimage_obj::__register();
::lime::graphics::opengl::ext::EXT_texture_type_2_10_10_10_REV_obj::__register();
::lime::graphics::opengl::ext::EXT_texture_storage_obj::__register();
::lime::graphics::opengl::ext::EXT_texture_rg_obj::__register();
::lime::graphics::opengl::ext::EXT_texture_format_BGRA8888_obj::__register();
::lime::graphics::opengl::ext::EXT_texture_filter_anisotropic_obj::__register();
::lime::graphics::opengl::ext::EXT_texture_compression_s3tc_obj::__register();
::lime::graphics::opengl::ext::EXT_texture_compression_dxt1_obj::__register();
::lime::graphics::opengl::ext::EXT_shadow_samplers_obj::__register();
::lime::graphics::opengl::ext::EXT_shader_texture_lod_obj::__register();
::lime::graphics::opengl::ext::EXT_shader_framebuffer_fetch_obj::__register();
::lime::graphics::opengl::ext::EXT_separate_shader_objects_obj::__register();
::lime::graphics::opengl::ext::EXT_sRGB_obj::__register();
::lime::graphics::opengl::ext::EXT_robustness_obj::__register();
::lime::graphics::opengl::ext::EXT_read_format_bgra_obj::__register();
::lime::graphics::opengl::ext::EXT_packed_depth_stencil_obj::__register();
::lime::graphics::opengl::ext::EXT_occlusion_query_boolean_obj::__register();
::lime::graphics::opengl::ext::EXT_multiview_draw_buffers_obj::__register();
::lime::graphics::opengl::ext::EXT_multisampled_render_to_texture_obj::__register();
::lime::graphics::opengl::ext::EXT_multi_draw_arrays_obj::__register();
::lime::graphics::opengl::ext::EXT_map_buffer_range_obj::__register();
::lime::graphics::opengl::ext::EXT_discard_framebuffer_obj::__register();
::lime::graphics::opengl::ext::EXT_debug_marker_obj::__register();
::lime::graphics::opengl::ext::EXT_debug_label_obj::__register();
::lime::graphics::opengl::ext::EXT_color_buffer_half_float_obj::__register();
::lime::graphics::opengl::ext::EXT_color_buffer_float_obj::__register();
::lime::graphics::opengl::ext::EXT_blend_minmax_obj::__register();
::lime::graphics::opengl::ext::EXT_bgra_obj::__register();
::lime::graphics::opengl::ext::DMP_shader_binary_obj::__register();
::lime::graphics::opengl::ext::ARM_rgba8_obj::__register();
::lime::graphics::opengl::ext::ARM_mali_shader_binary_obj::__register();
::lime::graphics::opengl::ext::ARM_mali_program_binary_obj::__register();
::lime::graphics::opengl::ext::APPLE_texture_max_level_obj::__register();
::lime::graphics::opengl::ext::APPLE_texture_format_BGRA8888_obj::__register();
::lime::graphics::opengl::ext::APPLE_sync_obj::__register();
::lime::graphics::opengl::ext::APPLE_rgb_422_obj::__register();
::lime::graphics::opengl::ext::APPLE_framebuffer_multisample_obj::__register();
::lime::graphics::opengl::ext::APPLE_copy_texture_levels_obj::__register();
::lime::graphics::opengl::ext::ANGLE_translated_shader_source_obj::__register();
::lime::graphics::opengl::ext::ANGLE_texture_usage_obj::__register();
::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt5_obj::__register();
::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt3_obj::__register();
::lime::graphics::opengl::ext::ANGLE_pack_reverse_row_order_obj::__register();
::lime::graphics::opengl::ext::ANGLE_instanced_arrays_obj::__register();
::lime::graphics::opengl::ext::ANGLE_framebuffer_multisample_obj::__register();
::lime::graphics::opengl::ext::ANGLE_framebuffer_blit_obj::__register();
::lime::graphics::opengl::ext::AMD_program_binary_Z400_obj::__register();
::lime::graphics::opengl::ext::AMD_performance_monitor_obj::__register();
::lime::graphics::opengl::ext::AMD_compressed_ATC_texture_obj::__register();
::lime::graphics::opengl::ext::AMD_compressed_3DC_texture_obj::__register();
::lime::graphics::opengl::_WebGLContext::WebGLContext_Impl__obj::__register();
::lime::utils::BytePointerData_obj::__register();
::lime::graphics::opengl::_GLVertexArrayObject::GLVertexArrayObject_Impl__obj::__register();
::lime::graphics::opengl::_GLTransformFeedback::GLTransformFeedback_Impl__obj::__register();
::lime::graphics::opengl::_GLTexture::GLTexture_Impl__obj::__register();
::lime::graphics::opengl::_GLShader::GLShader_Impl__obj::__register();
::lime::graphics::opengl::_GLSampler::GLSampler_Impl__obj::__register();
::lime::graphics::opengl::_GLRenderbuffer::GLRenderbuffer_Impl__obj::__register();
::lime::graphics::opengl::_GLQuery::GLQuery_Impl__obj::__register();
::lime::graphics::opengl::_GLProgram::GLProgram_Impl__obj::__register();
::lime::graphics::opengl::_GLFramebuffer::GLFramebuffer_Impl__obj::__register();
::lime::graphics::opengl::_GLES3Context::GLES3Context_Impl__obj::__register();
::lime::graphics::opengl::_GLES2Context::GLES2Context_Impl__obj::__register();
::lime::graphics::opengl::_GLBuffer::GLBuffer_Impl__obj::__register();
::lime::graphics::opengl::GLObject_obj::__register();
::lime::graphics::format::PNG_obj::__register();
::lime::graphics::format::JPEG_obj::__register();
::lime::graphics::format::BMP_obj::__register();
::lime::graphics::console::VertexOutput_obj::__register();
::lime::graphics::console::VertexBuffer_obj::__register();
::lime::graphics::console::Shader_obj::__register();
::lime::graphics::console::IndexBuffer_obj::__register();
::lime::graphics::cairo::_CairoSurface::CairoSurface_Impl__obj::__register();
::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::__register();
::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::__register();
::lime::graphics::cairo::CairoGlyph_obj::__register();
::lime::graphics::cairo::_CairoFontOptions::CairoFontOptions_Impl__obj::__register();
::lime::graphics::cairo::_CairoFontFace::CairoFontFace_Impl__obj::__register();
::lime::graphics::cairo::Cairo_obj::__register();
::lime::graphics::Renderer_obj::__register();
::lime::graphics::ImageBuffer_obj::__register();
::lime::graphics::FlashRenderContext_obj::__register();
::lime::graphics::DOMRenderContext_obj::__register();
::lime::graphics::ConsoleRenderContext_obj::__register();
::lime::graphics::CanvasRenderContext_obj::__register();
::lime::app::_Event_ofEvents_T_Void_obj::__register();
::lime::app::_Event_lime_ui_Touch_Void_obj::__register();
::lime::app::_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void_obj::__register();
::lime::app::_Event_lime_ui_Joystick_Void_obj::__register();
::lime::app::_Event_lime_ui_Gamepad_Void_obj::__register();
::lime::app::_Event_lime_ui_GamepadButton_Void_obj::__register();
::lime::app::_Event_lime_ui_GamepadAxis_Float_Void_obj::__register();
::lime::app::_Event_lime_graphics_RenderContext_Void_obj::__register();
::lime::app::_Event_haxe_Function_Void_obj::__register();
::lime::app::_Event_Void_Void_obj::__register();
::lime::app::_Event_String_Void_obj::__register();
::lime::app::_Event_String_Int_Int_Void_obj::__register();
::lime::app::_Event_Int_lime_ui_JoystickHatPosition_Void_obj::__register();
::lime::app::_Event_Int_Void_obj::__register();
::lime::app::_Event_Int_Int_Void_obj::__register();
::lime::app::_Event_Int_Float_Void_obj::__register();
::lime::app::_Event_Int_Float_Float_Void_obj::__register();
::lime::app::_Event_Float_Float_Void_obj::__register();
::lime::app::_Event_Float_Float_Int_Void_obj::__register();
::lime::app::_Event_Float_Float_Float_Void_obj::__register();
::lime::app::_Event_Dynamic_Void_obj::__register();
::lime::app::Promise_openfl_utils_ByteArray_obj::__register();
::lime::app::Promise_openfl_text_Font_obj::__register();
::lime::app::Promise_openfl_media_Sound_obj::__register();
::lime::app::Promise_openfl_display_MovieClip_obj::__register();
::lime::app::Promise_openfl_display_BitmapData_obj::__register();
::lime::app::Promise_lime_utils_AssetLibrary_obj::__register();
::lime::app::Promise_lime_text_Font_obj::__register();
::lime::app::Promise_lime_media_AudioBuffer_obj::__register();
::lime::app::Promise_lime_graphics_Image_obj::__register();
::lime::app::Promise_haxe_io_Bytes_obj::__register();
::lime::app::Promise_String_obj::__register();
::lime::app::Promise_obj::__register();
::lime::app::Preloader_obj::__register();
::lime::app::_Future::FutureWork_obj::__register();
::lime::app::Future_obj::__register();
::lime::app::Event_obj::__register();
::lime::_macros::AssetsMacro_obj::__register();
::lime::_backend::native::NativeWindow_obj::__register();
::lime::_backend::native::NativeRenderer_obj::__register();
::lime::_backend::native::NativeMouse_obj::__register();
::lime::_backend::native::NativeHTTPRequest_obj::__register();
::lime::_backend::native::_NativeApplication::WindowEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::TouchEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::TextEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::SensorEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::RenderEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::MouseEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::KeyEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::JoystickEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::GamepadEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::DropEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::ClipboardEventInfo_obj::__register();
::lime::_backend::native::_NativeApplication::ApplicationEventInfo_obj::__register();
::hxassert::AssertionFailureError_obj::__register();
::haxe::xml::Printer_obj::__register();
::haxe::xml::XmlParserException_obj::__register();
::haxe::io::Path_obj::__register();
::haxe::io::FPHelper_obj::__register();
::haxe::io::Eof_obj::__register();
::haxe::io::Output_obj::__register();
::haxe::io::Input_obj::__register();
::haxe::io::BytesBuffer_obj::__register();
::haxe::format::JsonPrinter_obj::__register();
::haxe::format::JsonParser_obj::__register();
::haxe::ds::StringMap_obj::__register();
::haxe::ds::IntMap_obj::__register();
::haxe::ds::EnumValueMap_obj::__register();
::haxe::ds::TreeNode_obj::__register();
::haxe::ds::BalancedTree_obj::__register();
::haxe::crypto::Md5_obj::__register();
::haxe::crypto::BaseCode_obj::__register();
::haxe::Utf8_obj::__register();
::haxe::_Unserializer::NullResolver_obj::__register();
::haxe::_Unserializer::DefaultResolver_obj::__register();
::haxe::Resource_obj::__register();
::haxe::CallStack_obj::__register();
::openfl::display::Shape_obj::__register();
::graphic::HintTextfield_obj::__register();
::graphic::Fonts_obj::__register();
::lime::text::Font_obj::__register();
::cpp::vm::Thread_obj::__register();
::cpp::vm::Deque_obj::__register();
::cpp::Lib_obj::__register();
::battle::vision::UnitsAndBolts_obj::__register();
::battle::vision::BuffRect_obj::__register();
::battle::vision::AbilityCell_obj::__register();
::battle::vision::AbilityBar_obj::__register();
::battle::_hx_struct::Wheel_obj::__register();
::battle::_hx_struct::UnitCoords_obj::__register();
::battle::_hx_struct::UPairIterator_obj::__register();
::battle::_hx_struct::UPair_obj::__register();
::battle::_hx_struct::Pool_obj::__register();
::battle::_hx_struct::FloatPool_obj::__register();
::battle::_hx_struct::Countdown_obj::__register();
::battle::_hx_struct::BuffQueue_obj::__register();
::battle::Utils_obj::__register();
::battle::Unit_obj::__register();
::battle::Passive_obj::__register();
::battle::Model_obj::__register();
::battle::ISimpleModel_obj::__register();
::battle::IObservableModel_obj::__register();
::battle::IMutableModel_obj::__register();
::battle::IModelObserver_obj::__register();
::battle::EffectData_obj::__register();
::battle::Buff_obj::__register();
::battle::Active_obj::__register();
::battle::Ability_obj::__register();
::Zealon_obj::__register();
::XMLUtils_obj::__register();
::VoltSnare_obj::__register();
::UpperBattleBar_obj::__register();
::Type_obj::__register();
::TreeBox_obj::__register();
::ThunderbirdSoul_obj::__register();
::Terminator_obj::__register();
::Sys_obj::__register();
::StringBuf_obj::__register();
::Strikeback_obj::__register();
::Std_obj::__register();
::SpellLg_obj::__register();
::SkipTurn_obj::__register();
::ShockTherapy_obj::__register();
::Reflect_obj::__register();
::ReSpec_obj::__register();
::QuickStrike_obj::__register();
::Progress_obj::__register();
::PhBuff_obj::__register();
::NullZoneBGR_obj::__register();
::NullZoneBG_obj::__register();
::NoAbility_obj::__register();
::NextBattle_obj::__register();
::MathUtils_obj::__register();
::haxe::io::Bytes_obj::__register();
::ManifestResources_obj::__register();
::LockedAbility_obj::__register();
::_List::ListIterator_obj::__register();
::_List::ListNode_obj::__register();
::Linear_obj::__register();
::LightningBolt_obj::__register();
::LgBuff_obj::__register();
::LeaveBattle_obj::__register();
::Lambda_obj::__register();
::Icarus_obj::__register();
::Hugo_obj::__register();
::HighVoltage_obj::__register();
::Hero_obj::__register();
::Heal_obj::__register();
::Ghost_obj::__register();
::Energize_obj::__register();
::ElectricalStorm_obj::__register();
::EReg_obj::__register();
::EMPBlast_obj::__register();
::Disrupt_obj::__register();
::Date_obj::__register();
::DarkPact_obj::__register();
::CloseAbScreen_obj::__register();
::CircleAbilityMask_obj::__register();
::Charge_obj::__register();
::Buff9_obj::__register();
::Buff8_obj::__register();
::Buff7_obj::__register();
::Buff6_obj::__register();
::Buff5_obj::__register();
::Buff4_obj::__register();
::Buff3_obj::__register();
::Buff2_obj::__register();
::Buff11_obj::__register();
::Buff10_obj::__register();
::Buff1_obj::__register();
::BottomBattleBar_obj::__register();
::BoltLg_obj::__register();
::BarValuesBox_obj::__register();
::Assets_obj::__register();
::Archghost_obj::__register();
::ArcFlash_obj::__register();
::DocumentClass_obj::__register();
::SSprite_obj::__register();
::cpp::Prime_obj::__register();
::lime::app::Module_obj::__register();
::lime::app::IModule_obj::__register();
::AddVitality_obj::__register();
::AddStrength_obj::__register();
::AddIntellect_obj::__register();
::AddFlow_obj::__register();
::AbilityScreenButton_obj::__register();
::AbilityScreenBG_obj::__register();
::openfl::display::Sprite_obj::__register();
::openfl::display::DisplayObjectContainer_obj::__register();
::openfl::display::InteractiveObject_obj::__register();
::List_obj::__register();
::haxe::ds::ObjectMap_obj::__register();
::haxe::IMap_obj::__register();
::lime::utils::ObjectPool_openfl_Vector_openfl_display_DisplayObject_obj::__register();
::openfl::_Vector::Vector_Impl__obj::__register();
::openfl::geom::ColorTransform_obj::__register();
::openfl::display::IBitmapDrawable_obj::__register();
::openfl::events::EventDispatcher_obj::__register();
::openfl::events::IEventDispatcher_obj::__register();
::roaming::screens::Screen_obj::__boot();
::roaming::enums::Attribute_obj::__boot();
::openfl::display::GraphicsFillType_obj::__boot();
::openfl::display::GraphicsDataType_obj::__boot();
::openfl::_internal::timeline::FrameObjectType_obj::__boot();
::openfl::_internal::swf::ShapeCommand_obj::__boot();
::openfl::_internal::swf::FilterType_obj::__boot();
::openfl::_internal::stage3D::_AGALConverter::RegisterUsage_obj::__boot();
::openfl::_internal::stage3D::_AGALConverter::ProgramType_obj::__boot();
::openfl::_internal::renderer::DrawCommandType_obj::__boot();
::lime::ui::MouseCursor_obj::__boot();
::lime::_hx_system::_ThreadPool::ThreadPoolMessageType_obj::__boot();
::lime::_hx_system::SensorType_obj::__boot();
::lime::_hx_system::Endian_obj::__boot();
::lime::media::AudioContext_obj::__boot();
::lime::utils::TAError_obj::__boot();
::lime::graphics::opengl::GLContextType_obj::__boot();
::lime::graphics::format::BMPType_obj::__boot();
::lime::graphics::console::Primitive_obj::__boot();
::lime::graphics::RendererType_obj::__boot();
::lime::graphics::RenderContext_obj::__boot();
::lime::graphics::ImageType_obj::__boot();
::lime::graphics::ImageChannel_obj::__boot();
::haxe::io::Error_obj::__boot();
::haxe::StackItem_obj::__boot();
::battle::vision::BarType_obj::__boot();
::battle::vision::TextfieldType_obj::__boot();
::battle::enums::UnitType_obj::__boot();
::battle::enums::Team_obj::__boot();
::battle::enums::StrikeType_obj::__boot();
::battle::enums::Source_obj::__boot();
::battle::enums::InputMode_obj::__boot();
::battle::enums::BuffMode_obj::__boot();
::battle::enums::AbilityType_obj::__boot();
::battle::enums::AbilityTarget_obj::__boot();
::battle::data::BattleEvent_obj::__boot();
::battle::TargetResult_obj::__boot();
::battle::ChooseResult_obj::__boot();
::Zone_obj::__boot();
::ValueType_obj::__boot();
::ID_obj::__boot();
::Element_obj::__boot();
::lime::_backend::native::NativeApplication_obj::__init__();
::lime::app::Application_obj::__init__();
::ApplicationMain_obj::__init__();
::lime::math::color::_RGBA::RGBA_Impl__obj::__init__();
::lime::_hx_system::CFFI_obj::__init__();
::lime::utils::Log_obj::__init__();
::haxe::Log_obj::__boot();
::openfl::display::DisplayObject_obj::__boot();
::openfl::display::MovieClip_obj::__boot();
::lime::_backend::native::NativeCFFI_obj::__boot();
::lime::_backend::native::NativeApplication_obj::__boot();
::lime::app::Application_obj::__boot();
::ApplicationMain_obj::__boot();
::Main_obj::__boot();
::__ASSET__manifest_default_json_obj::__boot();
::StringTools_obj::__boot();
::Xml_obj::__boot();
::battle::EffectHandler_obj::__boot();
::battle::data::Abilities_obj::__boot();
::battle::data::Buffs_obj::__boot();
::battle::data::Passives_obj::__boot();
::battle::data::Units_obj::__boot();
::battle::vision::Common_obj::__boot();
::battle::vision::UnitStateBar_obj::__boot();
::openfl::text::Font_obj::__boot();
::graphic::_Fonts::Mirror_obj::__boot();
::graphic::_Fonts::Damage_obj::__boot();
::graphic::_Fonts::Buff_obj::__boot();
::graphic::_Fonts::Time_obj::__boot();
::graphic::ProgressBar_obj::__boot();
::haxe::Serializer_obj::__boot();
::haxe::Timer_obj::__boot();
::haxe::Unserializer_obj::__boot();
::haxe::crypto::Base64_obj::__boot();
::haxe::xml::Parser_obj::__boot();
::hxassert::Assert_obj::__boot();
::lime::_backend::native::NativeAudioSource_obj::__boot();
::lime::_backend::native::NativeGLRenderContext_obj::__boot();
::lime::graphics::Image_obj::__boot();
::lime::graphics::cairo::_CairoFTFontFace::CairoFTFontFace_Impl__obj::__boot();
::lime::graphics::opengl::GL_obj::__boot();
::lime::graphics::opengl::_WebGL2Context::WebGL2Context_Impl__obj::__boot();
::lime::math::_ColorMatrix::ColorMatrix_Impl__obj::__boot();
::lime::math::Matrix3_obj::__boot();
::lime::math::_Matrix4::Matrix4_Impl__obj::__boot();
::lime::math::color::_RGBA::RGBA_Impl__obj::__boot();
::lime::media::openal::AL_obj::__boot();
::lime::media::openal::ALC_obj::__boot();
::lime::net::curl::CURL_obj::__boot();
::lime::_hx_system::CFFI_obj::__boot();
::lime::_hx_system::Clipboard_obj::__boot();
::lime::_hx_system::JNI_obj::__boot();
::lime::_hx_system::Sensor_obj::__boot();
::lime::_hx_system::System_obj::__boot();
::lime::text::_TextDirection::TextDirection_Impl__obj::__boot();
::lime::text::_TextScript::TextScript_Impl__obj::__boot();
::lime::text::unifill::Unicode_obj::__boot();
::lime::ui::Gamepad_obj::__boot();
::lime::ui::_GamepadAxis::GamepadAxis_Impl__obj::__boot();
::lime::ui::_GamepadButton::GamepadButton_Impl__obj::__boot();
::lime::ui::Joystick_obj::__boot();
::lime::ui::_JoystickHatPosition::JoystickHatPosition_Impl__obj::__boot();
::lime::ui::_KeyCode::KeyCode_Impl__obj::__boot();
::lime::ui::_KeyModifier::KeyModifier_Impl__obj::__boot();
::lime::ui::_ScanCode::ScanCode_Impl__obj::__boot();
::lime::ui::Touch_obj::__boot();
::lime::utils::Assets_obj::__boot();
::lime::utils::_Float32Array::Float32Array_Impl__obj::__boot();
::lime::utils::_Float64Array::Float64Array_Impl__obj::__boot();
::lime::utils::_Int16Array::Int16Array_Impl__obj::__boot();
::lime::utils::_Int32Array::Int32Array_Impl__obj::__boot();
::lime::utils::_Int8Array::Int8Array_Impl__obj::__boot();
::lime::utils::Log_obj::__boot();
::lime::utils::_Log::LogLevel_Impl__obj::__boot();
::lime::utils::_UInt16Array::UInt16Array_Impl__obj::__boot();
::lime::utils::_UInt32Array::UInt32Array_Impl__obj::__boot();
::lime::utils::_UInt8Array::UInt8Array_Impl__obj::__boot();
::lime::utils::_UInt8ClampedArray::UInt8ClampedArray_Impl__obj::__boot();
::motion::actuators::SimpleActuator_obj::__boot();
::motion::Actuate_obj::__boot();
::openfl::Lib_obj::__boot();
::openfl::_internal::Lib_obj::__boot();
::openfl::_internal::TouchData_obj::__boot();
::openfl::_internal::renderer::DrawCommandBuffer_obj::__boot();
::openfl::_internal::renderer::cairo::CairoGraphics_obj::__boot();
::openfl::_internal::renderer::canvas::CanvasGraphics_obj::__boot();
::openfl::_internal::renderer::dom::DOMTextField_obj::__boot();
::openfl::display::BitmapData_obj::__boot();
::openfl::geom::Rectangle_obj::__boot();
::openfl::geom::Matrix_obj::__boot();
::openfl::_internal::renderer::opengl::GLGraphics_obj::__boot();
::openfl::display::Shader_obj::__boot();
::openfl::_internal::renderer::opengl::GLMaskShader_obj::__boot();
::openfl::_internal::stage3D::Context3DStateCache_obj::__boot();
::openfl::_internal::stage3D::GLUtils_obj::__boot();
::openfl::_internal::stage3D::opengl::GLTextureBase_obj::__boot();
::openfl::_internal::swf::SWFLite_obj::__boot();
::openfl::_internal::text::HTMLParser_obj::__boot();
::openfl::_internal::text::TextEngine_obj::__boot();
::openfl::_internal::utils::PerlinNoise_obj::__boot();
::openfl::display::_BlendMode::BlendMode_Impl__obj::__boot();
::openfl::display::_CapsStyle::CapsStyle_Impl__obj::__boot();
::openfl::display::_GradientType::GradientType_Impl__obj::__boot();
::openfl::display::Graphics_obj::__boot();
::openfl::display::GraphicsPath_obj::__boot();
::openfl::display::_GraphicsPathWinding::GraphicsPathWinding_Impl__obj::__boot();
::openfl::display::_InterpolationMethod::InterpolationMethod_Impl__obj::__boot();
::openfl::display::_JointStyle::JointStyle_Impl__obj::__boot();
::openfl::display::_LineScaleMode::LineScaleMode_Impl__obj::__boot();
::openfl::display::LoaderInfo_obj::__boot();
::openfl::display::OpenGLRenderer_obj::__boot();
::openfl::display::_PixelSnapping::PixelSnapping_Impl__obj::__boot();
::openfl::display::_ShaderParameterType::ShaderParameterType_Impl__obj::__boot();
::openfl::display::_ShaderPrecision::ShaderPrecision_Impl__obj::__boot();
::openfl::display::_SpreadMethod::SpreadMethod_Impl__obj::__boot();
::openfl::display::_StageAlign::StageAlign_Impl__obj::__boot();
::openfl::display::_StageDisplayState::StageDisplayState_Impl__obj::__boot();
::openfl::display::_StageQuality::StageQuality_Impl__obj::__boot();
::openfl::display::_StageScaleMode::StageScaleMode_Impl__obj::__boot();
::openfl::display::_TriangleCulling::TriangleCulling_Impl__obj::__boot();
::openfl::display3D::Context3D_obj::__boot();
::openfl::display3D::_Context3D::Context3DTelemetry_Impl__obj::__boot();
::openfl::display3D::_Context3DBlendFactor::Context3DBlendFactor_Impl__obj::__boot();
::openfl::display3D::_Context3DBufferUsage::Context3DBufferUsage_Impl__obj::__boot();
::openfl::display3D::_Context3DCompareMode::Context3DCompareMode_Impl__obj::__boot();
::openfl::display3D::_Context3DMipFilter::Context3DMipFilter_Impl__obj::__boot();
::openfl::display3D::_Context3DProfile::Context3DProfile_Impl__obj::__boot();
::openfl::display3D::_Context3DProgramType::Context3DProgramType_Impl__obj::__boot();
::openfl::display3D::_Context3DRenderMode::Context3DRenderMode_Impl__obj::__boot();
::openfl::display3D::_Context3DStencilAction::Context3DStencilAction_Impl__obj::__boot();
::openfl::display3D::_Context3DTextureFilter::Context3DTextureFilter_Impl__obj::__boot();
::openfl::display3D::_Context3DTextureFormat::Context3DTextureFormat_Impl__obj::__boot();
::openfl::display3D::_Context3DTriangleFace::Context3DTriangleFace_Impl__obj::__boot();
::openfl::display3D::_Context3DVertexBufferFormat::Context3DVertexBufferFormat_Impl__obj::__boot();
::openfl::display3D::_Context3DWrapMode::Context3DWrapMode_Impl__obj::__boot();
::openfl::display3D::textures::Texture_obj::__boot();
::openfl::errors::Error_obj::__boot();
::openfl::events::Event_obj::__boot();
::openfl::events::ActivityEvent_obj::__boot();
::openfl::events::TextEvent_obj::__boot();
::openfl::events::ErrorEvent_obj::__boot();
::openfl::events::FocusEvent_obj::__boot();
::openfl::events::FullScreenEvent_obj::__boot();
::openfl::events::GameInputEvent_obj::__boot();
::openfl::events::HTTPStatusEvent_obj::__boot();
::openfl::events::IOErrorEvent_obj::__boot();
::openfl::events::KeyboardEvent_obj::__boot();
::openfl::events::MouseEvent_obj::__boot();
::openfl::events::NetStatusEvent_obj::__boot();
::openfl::events::ProgressEvent_obj::__boot();
::openfl::events::RenderEvent_obj::__boot();
::openfl::events::SecurityErrorEvent_obj::__boot();
::openfl::events::TouchEvent_obj::__boot();
::openfl::events::UncaughtErrorEvent_obj::__boot();
::openfl::filters::BlurFilter_obj::__boot();
::openfl::filters::ColorMatrixFilter_obj::__boot();
::openfl::filters::ConvolutionFilter_obj::__boot();
::openfl::filters::GlowFilter_obj::__boot();
::openfl::geom::_Orientation3D::Orientation3D_Impl__obj::__boot();
::openfl::geom::Point_obj::__boot();
::openfl::media::SoundMixer_obj::__boot();
::openfl::net::NetConnection_obj::__boot();
::openfl::net::_URLLoaderDataFormat::URLLoaderDataFormat_Impl__obj::__boot();
::openfl::net::URLRequestDefaults_obj::__boot();
::openfl::_hx_system::ApplicationDomain_obj::__boot();
::openfl::_hx_system::SecurityDomain_obj::__boot();
::openfl::_hx_system::System_obj::__boot();
::openfl::text::_AntiAliasType::AntiAliasType_Impl__obj::__boot();
::openfl::text::_FontStyle::FontStyle_Impl__obj::__boot();
::openfl::text::_FontType::FontType_Impl__obj::__boot();
::openfl::text::_GridFitType::GridFitType_Impl__obj::__boot();
::openfl::text::TextField_obj::__boot();
::openfl::text::_TextFieldAutoSize::TextFieldAutoSize_Impl__obj::__boot();
::openfl::text::_TextFieldType::TextFieldType_Impl__obj::__boot();
::openfl::text::_TextFormatAlign::TextFormatAlign_Impl__obj::__boot();
::openfl::ui::GameInput_obj::__boot();
::openfl::ui::GameInputDevice_obj::__boot();
::openfl::ui::Keyboard_obj::__boot();
::openfl::ui::Mouse_obj::__boot();
::openfl::ui::_MouseCursor::MouseCursor_Impl__obj::__boot();
::openfl::utils::Assets_obj::__boot();
::openfl::utils::_ByteArray::ByteArray_Impl__obj::__boot();
::openfl::utils::ByteArrayData_obj::__boot();
::openfl::utils::_CompressionAlgorithm::CompressionAlgorithm_Impl__obj::__boot();
::openfl::utils::_Endian::Endian_Impl__obj::__boot();
::roaming::screens::SRoaming_obj::__boot();
}

