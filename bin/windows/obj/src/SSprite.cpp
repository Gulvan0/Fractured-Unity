// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_SSprite
#include <SSprite.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_79fc44e2eb9e4fa0_15_new,"SSprite","new",0x983e2daa,"SSprite.new","SSprite.hx",15,0x4fe4b506)
HX_LOCAL_STACK_FRAME(_hx_pos_79fc44e2eb9e4fa0_19_add,"SSprite","add",0x98344f6b,"SSprite.add","SSprite.hx",19,0x4fe4b506)
HX_LOCAL_STACK_FRAME(_hx_pos_79fc44e2eb9e4fa0_27_remove,"SSprite","remove",0x64a0293a,"SSprite.remove","SSprite.hx",27,0x4fe4b506)

void SSprite_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_79fc44e2eb9e4fa0_15_new)
HXDLIN(  15)		super::__construct();
            	}

Dynamic SSprite_obj::__CreateEmpty() { return new SSprite_obj; }

void *SSprite_obj::_hx_vtable = 0;

Dynamic SSprite_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SSprite_obj > _hx_result = new SSprite_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SSprite_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x3f2b00af) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x3f2b00af;
		} else {
			return inClassId==(int)0x739fd0b8;
		}
	}
}

void SSprite_obj::add( ::openfl::display::DisplayObject object,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_79fc44e2eb9e4fa0_19_add)
HXLINE(  20)		this->addChild(object);
HXLINE(  21)		object->set_x(x);
HXLINE(  22)		object->set_y(y);
            	}


HX_DEFINE_DYNAMIC_FUNC3(SSprite_obj,add,(void))

void SSprite_obj::remove( ::openfl::display::DisplayObject object){
            	HX_STACKFRAME(&_hx_pos_79fc44e2eb9e4fa0_27_remove)
HXDLIN(  27)		this->removeChild(object);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SSprite_obj,remove,(void))


hx::ObjectPtr< SSprite_obj > SSprite_obj::__new() {
	hx::ObjectPtr< SSprite_obj > __this = new SSprite_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< SSprite_obj > SSprite_obj::__alloc(hx::Ctx *_hx_ctx) {
	SSprite_obj *__this = (SSprite_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SSprite_obj), true, "SSprite"));
	*(void **)__this = SSprite_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SSprite_obj::SSprite_obj()
{
}

hx::Val SSprite_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *SSprite_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *SSprite_obj_sStaticStorageInfo = 0;
#endif

static ::String SSprite_obj_sMemberFields[] = {
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	::String(null()) };

static void SSprite_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SSprite_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SSprite_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SSprite_obj::__mClass,"__mClass");
};

#endif

hx::Class SSprite_obj::__mClass;

void SSprite_obj::__register()
{
	hx::Object *dummy = new SSprite_obj;
	SSprite_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("SSprite","\xb8","\xd0","\x9f","\x73");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SSprite_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SSprite_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SSprite_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SSprite_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SSprite_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SSprite_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

