// Generated by Haxe 3.4.7
#ifndef INCLUDED_Assets
#define INCLUDED_Assets

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Assets)
HX_DECLARE_CLASS0(Element)
HX_DECLARE_CLASS0(ID)
HX_DECLARE_CLASS0(Zone)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,MovieClip)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES Assets_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Assets_obj OBJ_;
		Assets_obj();

	public:
		enum { _hx_ClassId = 0x3bbee6cf };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Assets")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Assets"); }

		hx::ObjectPtr< Assets_obj > __new() {
			hx::ObjectPtr< Assets_obj > __this = new Assets_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Assets_obj > __alloc(hx::Ctx *_hx_ctx) {
			Assets_obj *__this = (Assets_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Assets_obj), false, "Assets"));
			*(void **)__this = Assets_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Assets_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Assets","\xa3","\xbc","\x97","\x80"); }

		static  ::openfl::display::MovieClip getBattleAbility( ::ID id);
		static ::Dynamic getBattleAbility_dyn();

		static  ::openfl::display::MovieClip getUnit( ::ID id);
		static ::Dynamic getUnit_dyn();

		static  ::openfl::display::Sprite getBuffBox( ::Element element);
		static ::Dynamic getBuffBox_dyn();

		static  ::openfl::display::Sprite getBuffMark( ::ID id);
		static ::Dynamic getBuffMark_dyn();

		static  ::openfl::display::MovieClip getBattleBG( ::Zone zone);
		static ::Dynamic getBattleBG_dyn();

		static  ::openfl::display::MovieClip getRoamingBG( ::Zone zone);
		static ::Dynamic getRoamingBG_dyn();

		static  ::openfl::display::MovieClip getSpellAnim( ::Element element);
		static ::Dynamic getSpellAnim_dyn();

		static  ::openfl::display::MovieClip getBolt( ::Element element);
		static ::Dynamic getBolt_dyn();

		static  ::openfl::display::MovieClip getSpell( ::Element element);
		static ::Dynamic getSpell_dyn();

};


#endif /* INCLUDED_Assets */ 
