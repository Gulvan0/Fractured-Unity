// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_TargetResult
#define INCLUDED_battle_TargetResult

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(battle,TargetResult)
namespace battle{


class TargetResult_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef TargetResult_obj OBJ_;

	public:
		TargetResult_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("battle.TargetResult","\x24","\xd4","\x67","\x3d"); }
		::String __ToString() const { return HX_HCSTRING("TargetResult.","\x40","\x59","\x76","\xea") + _hx_tag; }

		static ::battle::TargetResult Dead;
		static inline ::battle::TargetResult Dead_dyn() { return Dead; }
		static ::battle::TargetResult Invalid;
		static inline ::battle::TargetResult Invalid_dyn() { return Invalid; }
		static ::battle::TargetResult Nonexistent;
		static inline ::battle::TargetResult Nonexistent_dyn() { return Nonexistent; }
		static ::battle::TargetResult Ok;
		static inline ::battle::TargetResult Ok_dyn() { return Ok; }
};

} // end namespace battle

#endif /* INCLUDED_battle_TargetResult */ 
