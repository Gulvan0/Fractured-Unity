// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_IObservableModel
#define INCLUDED_battle_IObservableModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(battle,IObservableModel)
HX_DECLARE_CLASS2(battle,enums,InputMode)
HX_DECLARE_CLASS2(battle,_hx_struct,UnitCoords)

namespace battle{


class HXCPP_CLASS_ATTRIBUTES IObservableModel_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		 ::battle::enums::InputMode (hx::Object :: *_hx_getInputMode)(); 
		static inline  ::battle::enums::InputMode getInputMode( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_getInputMode)();
		}
		bool (hx::Object :: *_hx_targetAvaibility)( ::battle::_hx_struct::UnitCoords unit); 
		static inline bool targetAvaibility( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords unit) {
			return (_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_targetAvaibility)(unit);
		}
		void (hx::Object :: *_hx_choose)(int abilityPos); 
		static inline void choose( ::Dynamic _hx_,int abilityPos) {
			(_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_choose)(abilityPos);
		}
		void (hx::Object :: *_hx_targetAndUse)( ::battle::_hx_struct::UnitCoords targetCoords); 
		static inline void targetAndUse( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords targetCoords) {
			(_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_targetAndUse)(targetCoords);
		}
		void (hx::Object :: *_hx_printAbilityInfo)(int num); 
		static inline void printAbilityInfo( ::Dynamic _hx_,int num) {
			(_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_printAbilityInfo)(num);
		}
		void (hx::Object :: *_hx_printUnitInfo)( ::battle::_hx_struct::UnitCoords coords); 
		static inline void printUnitInfo( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords coords) {
			(_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_printUnitInfo)(coords);
		}
		void (hx::Object :: *_hx_skipTurn)(); 
		static inline void skipTurn( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_skipTurn)();
		}
		void (hx::Object :: *_hx_quit)(); 
		static inline void quit( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_quit)();
		}
		void (hx::Object :: *_hx_respond)(); 
		static inline void respond( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::battle::IObservableModel_obj *>(_hx_.mPtr->_hx_getInterface(0xf5b152d5)))->_hx_respond)();
		}
};

} // end namespace battle

#endif /* INCLUDED_battle_IObservableModel */ 
