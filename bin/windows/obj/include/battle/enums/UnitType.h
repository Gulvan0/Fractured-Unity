// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_enums_UnitType
#define INCLUDED_battle_enums_UnitType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(battle,enums,UnitType)
namespace battle{
namespace enums{


class UnitType_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef UnitType_obj OBJ_;

	public:
		UnitType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("battle.enums.UnitType","\x90","\x13","\xf5","\xdd"); }
		::String __ToString() const { return HX_HCSTRING("UnitType.","\xf0","\x56","\x81","\xbb") + _hx_tag; }

		static ::battle::enums::UnitType Ally;
		static inline ::battle::enums::UnitType Ally_dyn() { return Ally; }
		static ::battle::enums::UnitType Enemy;
		static inline ::battle::enums::UnitType Enemy_dyn() { return Enemy; }
		static ::battle::enums::UnitType Self;
		static inline ::battle::enums::UnitType Self_dyn() { return Self; }
};

} // end namespace battle
} // end namespace enums

#endif /* INCLUDED_battle_enums_UnitType */ 
