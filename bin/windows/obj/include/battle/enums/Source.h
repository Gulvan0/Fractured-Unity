// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_enums_Source
#define INCLUDED_battle_enums_Source

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(battle,enums,Source)
namespace battle{
namespace enums{


class Source_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef Source_obj OBJ_;

	public:
		Source_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("battle.enums.Source","\x8d","\x78","\x82","\x44"); }
		::String __ToString() const { return HX_HCSTRING("Source.","\xd3","\x36","\x9a","\x86") + _hx_tag; }

		static ::battle::enums::Source Ability;
		static inline ::battle::enums::Source Ability_dyn() { return Ability; }
		static ::battle::enums::Source Buff;
		static inline ::battle::enums::Source Buff_dyn() { return Buff; }
		static ::battle::enums::Source God;
		static inline ::battle::enums::Source God_dyn() { return God; }
};

} // end namespace battle
} // end namespace enums

#endif /* INCLUDED_battle_enums_Source */ 
