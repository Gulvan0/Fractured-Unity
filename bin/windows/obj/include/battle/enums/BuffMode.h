// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_enums_BuffMode
#define INCLUDED_battle_enums_BuffMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(battle,enums,BuffMode)
namespace battle{
namespace enums{


class BuffMode_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef BuffMode_obj OBJ_;

	public:
		BuffMode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("battle.enums.BuffMode","\x08","\x87","\xf6","\x7a"); }
		::String __ToString() const { return HX_HCSTRING("BuffMode.","\x78","\xec","\xc4","\x7f") + _hx_tag; }

		static ::battle::enums::BuffMode Cast;
		static inline ::battle::enums::BuffMode Cast_dyn() { return Cast; }
		static ::battle::enums::BuffMode End;
		static inline ::battle::enums::BuffMode End_dyn() { return End; }
		static ::battle::enums::BuffMode OverTime;
		static inline ::battle::enums::BuffMode OverTime_dyn() { return OverTime; }
		static ::battle::enums::BuffMode Proc;
		static inline ::battle::enums::BuffMode Proc_dyn() { return Proc; }
};

} // end namespace battle
} // end namespace enums

#endif /* INCLUDED_battle_enums_BuffMode */ 
