// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_enums_InputMode
#define INCLUDED_battle_enums_InputMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(battle,enums,InputMode)
namespace battle{
namespace enums{


class InputMode_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef InputMode_obj OBJ_;

	public:
		InputMode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("battle.enums.InputMode","\x1b","\x24","\x59","\x4e"); }
		::String __ToString() const { return HX_HCSTRING("InputMode.","\x21","\xef","\x43","\x81") + _hx_tag; }

		static ::battle::enums::InputMode Choosing;
		static inline ::battle::enums::InputMode Choosing_dyn() { return Choosing; }
		static ::battle::enums::InputMode None;
		static inline ::battle::enums::InputMode None_dyn() { return None; }
		static ::battle::enums::InputMode Targeting;
		static inline ::battle::enums::InputMode Targeting_dyn() { return Targeting; }
};

} // end namespace battle
} // end namespace enums

#endif /* INCLUDED_battle_enums_InputMode */ 
