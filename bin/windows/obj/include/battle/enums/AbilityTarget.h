// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_enums_AbilityTarget
#define INCLUDED_battle_enums_AbilityTarget

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(battle,enums,AbilityTarget)
namespace battle{
namespace enums{


class AbilityTarget_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef AbilityTarget_obj OBJ_;

	public:
		AbilityTarget_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("battle.enums.AbilityTarget","\x29","\xd7","\x5b","\x3a"); }
		::String __ToString() const { return HX_HCSTRING("AbilityTarget.","\x53","\x37","\x8b","\x49") + _hx_tag; }

		static ::battle::enums::AbilityTarget All;
		static inline ::battle::enums::AbilityTarget All_dyn() { return All; }
		static ::battle::enums::AbilityTarget Allied;
		static inline ::battle::enums::AbilityTarget Allied_dyn() { return Allied; }
		static ::battle::enums::AbilityTarget Enemy;
		static inline ::battle::enums::AbilityTarget Enemy_dyn() { return Enemy; }
		static ::battle::enums::AbilityTarget Self;
		static inline ::battle::enums::AbilityTarget Self_dyn() { return Self; }
};

} // end namespace battle
} // end namespace enums

#endif /* INCLUDED_battle_enums_AbilityTarget */ 
