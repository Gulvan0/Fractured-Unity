// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_ISimpleModel
#define INCLUDED_battle_ISimpleModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(battle,ISimpleModel)
HX_DECLARE_CLASS2(battle,_hx_struct,UPair)

namespace battle{


class HXCPP_CLASS_ATTRIBUTES ISimpleModel_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		 ::battle::_hx_struct::UPair (hx::Object :: *_hx_getUnits)(); 
		static inline  ::battle::_hx_struct::UPair getUnits( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::battle::ISimpleModel_obj *>(_hx_.mPtr->_hx_getInterface(0x4a70be46)))->_hx_getUnits)();
		}
		void (hx::Object :: *_hx_respond)(); 
		static inline void respond( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::battle::ISimpleModel_obj *>(_hx_.mPtr->_hx_getInterface(0x4a70be46)))->_hx_respond)();
		}
};

} // end namespace battle

#endif /* INCLUDED_battle_ISimpleModel */ 
