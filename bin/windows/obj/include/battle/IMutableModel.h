// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_IMutableModel
#define INCLUDED_battle_IMutableModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Element)
HX_DECLARE_CLASS0(ID)
HX_DECLARE_CLASS1(battle,IMutableModel)
HX_DECLARE_CLASS2(battle,enums,Source)
HX_DECLARE_CLASS2(battle,_hx_struct,UPair)
HX_DECLARE_CLASS2(battle,_hx_struct,UnitCoords)

namespace battle{


class HXCPP_CLASS_ATTRIBUTES IMutableModel_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (hx::Object :: *_hx_changeHP)( ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,int dhp, ::Element element, ::battle::enums::Source source); 
		static inline void changeHP( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,int dhp, ::Element element, ::battle::enums::Source source) {
			(_hx_.mPtr->*( static_cast< ::battle::IMutableModel_obj *>(_hx_.mPtr->_hx_getInterface(0x315d9f14)))->_hx_changeHP)(target,caster,dhp,element,source);
		}
		void (hx::Object :: *_hx_changeMana)( ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,int dmana, ::battle::enums::Source source); 
		static inline void changeMana( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,int dmana, ::battle::enums::Source source) {
			(_hx_.mPtr->*( static_cast< ::battle::IMutableModel_obj *>(_hx_.mPtr->_hx_getInterface(0x315d9f14)))->_hx_changeMana)(target,caster,dmana,source);
		}
		void (hx::Object :: *_hx_changeAlacrity)( ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,Float dalac, ::battle::enums::Source source); 
		static inline void changeAlacrity( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,Float dalac, ::battle::enums::Source source) {
			(_hx_.mPtr->*( static_cast< ::battle::IMutableModel_obj *>(_hx_.mPtr->_hx_getInterface(0x315d9f14)))->_hx_changeAlacrity)(target,caster,dalac,source);
		}
		void (hx::Object :: *_hx_castBuff)( ::ID id, ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,int duration); 
		static inline void castBuff( ::Dynamic _hx_, ::ID id, ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster,int duration) {
			(_hx_.mPtr->*( static_cast< ::battle::IMutableModel_obj *>(_hx_.mPtr->_hx_getInterface(0x315d9f14)))->_hx_castBuff)(id,target,caster,duration);
		}
		void (hx::Object :: *_hx_dispellBuffs)( ::battle::_hx_struct::UnitCoords target,::Array< ::Dynamic> elements, ::Dynamic count); 
		static inline void dispellBuffs( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords target,::Array< ::Dynamic> elements, ::Dynamic count) {
			(_hx_.mPtr->*( static_cast< ::battle::IMutableModel_obj *>(_hx_.mPtr->_hx_getInterface(0x315d9f14)))->_hx_dispellBuffs)(target,elements,count);
		}
		 ::battle::_hx_struct::UPair (hx::Object :: *_hx_getUnits)(); 
		static inline  ::battle::_hx_struct::UPair getUnits( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::battle::IMutableModel_obj *>(_hx_.mPtr->_hx_getInterface(0x315d9f14)))->_hx_getUnits)();
		}
};

} // end namespace battle

#endif /* INCLUDED_battle_IMutableModel */ 
