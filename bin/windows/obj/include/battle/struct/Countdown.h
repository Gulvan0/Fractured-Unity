// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_struct_Countdown
#define INCLUDED_battle_struct_Countdown

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_542782f44cb1f54e_15_new)
HX_DECLARE_CLASS2(battle,_hx_struct,Countdown)

namespace battle{
namespace _hx_struct{


class HXCPP_CLASS_ATTRIBUTES Countdown_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Countdown_obj OBJ_;
		Countdown_obj();

	public:
		enum { _hx_ClassId = 0x658924a4 };

		void __construct(int startValue,int keyValue);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="battle.struct.Countdown")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"battle.struct.Countdown"); }

		hx::ObjectPtr< Countdown_obj > __new(int startValue,int keyValue) {
			hx::ObjectPtr< Countdown_obj > __this = new Countdown_obj();
			__this->__construct(startValue,keyValue);
			return __this;
		}

		static hx::ObjectPtr< Countdown_obj > __alloc(hx::Ctx *_hx_ctx,int startValue,int keyValue) {
			Countdown_obj *__this = (Countdown_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Countdown_obj), false, "battle.struct.Countdown"));
			*(void **)__this = Countdown_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_542782f44cb1f54e_15_new)
HXLINE(  16)		( ( ::battle::_hx_struct::Countdown)(__this) )->value = startValue;
HXLINE(  17)		( ( ::battle::_hx_struct::Countdown)(__this) )->keyValue = keyValue;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Countdown_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Countdown","\x91","\x30","\x88","\x0b"); }

		int keyValue;
		int value;
};

} // end namespace battle
} // end namespace struct

#endif /* INCLUDED_battle_struct_Countdown */ 
