// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_IModelObserver
#define INCLUDED_battle_IModelObserver

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Element)
HX_DECLARE_CLASS0(ID)
HX_DECLARE_CLASS1(battle,Buff)
HX_DECLARE_CLASS1(battle,IModelObserver)
HX_DECLARE_CLASS1(battle,Unit)
HX_DECLARE_CLASS2(battle,enums,Source)
HX_DECLARE_CLASS2(battle,enums,StrikeType)
HX_DECLARE_CLASS2(battle,_hx_struct,UnitCoords)

namespace battle{


class HXCPP_CLASS_ATTRIBUTES IModelObserver_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (hx::Object :: *_hx_hpUpdate)( ::battle::Unit target, ::battle::Unit caster,int dhp, ::Element element,bool crit, ::battle::enums::Source source); 
		static inline void hpUpdate( ::Dynamic _hx_, ::battle::Unit target, ::battle::Unit caster,int dhp, ::Element element,bool crit, ::battle::enums::Source source) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_hpUpdate)(target,caster,dhp,element,crit,source);
		}
		void (hx::Object :: *_hx_manaUpdate)( ::battle::Unit target,int dmana, ::battle::enums::Source source); 
		static inline void manaUpdate( ::Dynamic _hx_, ::battle::Unit target,int dmana, ::battle::enums::Source source) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_manaUpdate)(target,dmana,source);
		}
		void (hx::Object :: *_hx_alacUpdate)( ::battle::Unit unit,Float dalac, ::battle::enums::Source source); 
		static inline void alacUpdate( ::Dynamic _hx_, ::battle::Unit unit,Float dalac, ::battle::enums::Source source) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_alacUpdate)(unit,dalac,source);
		}
		void (hx::Object :: *_hx_buffQueueUpdate)( ::battle::_hx_struct::UnitCoords unit,::Array< ::Dynamic> queue); 
		static inline void buffQueueUpdate( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords unit,::Array< ::Dynamic> queue) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_buffQueueUpdate)(unit,queue);
		}
		void (hx::Object :: *_hx_preTick)( ::battle::Unit current); 
		static inline void preTick( ::Dynamic _hx_, ::battle::Unit current) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_preTick)(current);
		}
		void (hx::Object :: *_hx_tick)( ::battle::Unit current); 
		static inline void tick( ::Dynamic _hx_, ::battle::Unit current) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_tick)(current);
		}
		void (hx::Object :: *_hx_miss)( ::battle::_hx_struct::UnitCoords target, ::Element element); 
		static inline void miss( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords target, ::Element element) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_miss)(target,element);
		}
		void (hx::Object :: *_hx_death)( ::battle::_hx_struct::UnitCoords unit); 
		static inline void death( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords unit) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_death)(unit);
		}
		void (hx::Object :: *_hx_abSelected)(int num); 
		static inline void abSelected( ::Dynamic _hx_,int num) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_abSelected)(num);
		}
		void (hx::Object :: *_hx_abDeselected)(int num); 
		static inline void abDeselected( ::Dynamic _hx_,int num) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_abDeselected)(num);
		}
		void (hx::Object :: *_hx_abThrown)( ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster, ::ID id, ::battle::enums::StrikeType type, ::Element element); 
		static inline void abThrown( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster, ::ID id, ::battle::enums::StrikeType type, ::Element element) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_abThrown)(target,caster,id,type,element);
		}
		void (hx::Object :: *_hx_abStriked)( ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster, ::ID id, ::battle::enums::StrikeType type, ::Element element); 
		static inline void abStriked( ::Dynamic _hx_, ::battle::_hx_struct::UnitCoords target, ::battle::_hx_struct::UnitCoords caster, ::ID id, ::battle::enums::StrikeType type, ::Element element) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_abStriked)(target,caster,id,type,element);
		}
		void (hx::Object :: *_hx_warn)(::String text); 
		static inline void warn( ::Dynamic _hx_,::String text) {
			(_hx_.mPtr->*( static_cast< ::battle::IModelObserver_obj *>(_hx_.mPtr->_hx_getInterface(0x2826bace)))->_hx_warn)(text);
		}
};

} // end namespace battle

#endif /* INCLUDED_battle_IModelObserver */ 
