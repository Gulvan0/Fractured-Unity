// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_Utils
#define INCLUDED_battle_Utils

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(battle,Ability)
HX_DECLARE_CLASS1(battle,Active)
HX_DECLARE_CLASS1(battle,Unit)
HX_DECLARE_CLASS1(battle,Utils)

namespace battle{


class HXCPP_CLASS_ATTRIBUTES Utils_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Utils_obj OBJ_;
		Utils_obj();

	public:
		enum { _hx_ClassId = 0x02286c31 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="battle.Utils")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"battle.Utils"); }

		hx::ObjectPtr< Utils_obj > __new() {
			hx::ObjectPtr< Utils_obj > __this = new Utils_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Utils_obj > __alloc(hx::Ctx *_hx_ctx) {
			Utils_obj *__this = (Utils_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Utils_obj), false, "battle.Utils"));
			*(void **)__this = Utils_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Utils_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Utils","\x11","\x1a","\x0c","\x3e"); }

		static int calcCrit(int dhp, ::battle::Unit caster);
		static ::Dynamic calcCrit_dyn();

		static bool flipCrit( ::battle::Unit caster);
		static ::Dynamic flipCrit_dyn();

		static int calcBoost(int dhp, ::battle::Unit caster, ::battle::Unit target);
		static ::Dynamic calcBoost_dyn();

		static bool flipMiss( ::battle::Unit target, ::battle::Unit caster, ::battle::Active ability);
		static ::Dynamic flipMiss_dyn();

};

} // end namespace battle

#endif /* INCLUDED_battle_Utils */ 
