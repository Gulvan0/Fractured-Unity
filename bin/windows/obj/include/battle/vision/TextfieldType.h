// Generated by Haxe 3.4.7
#ifndef INCLUDED_battle_vision_TextfieldType
#define INCLUDED_battle_vision_TextfieldType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(battle,vision,TextfieldType)
namespace battle{
namespace vision{


class TextfieldType_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef TextfieldType_obj OBJ_;

	public:
		TextfieldType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("battle.vision.TextfieldType","\x17","\x7e","\x9f","\x6e"); }
		::String __ToString() const { return HX_HCSTRING("TextfieldType.","\x27","\xc4","\xa2","\x84") + _hx_tag; }

		static ::battle::vision::TextfieldType HP;
		static inline ::battle::vision::TextfieldType HP_dyn() { return HP; }
		static ::battle::vision::TextfieldType Mana;
		static inline ::battle::vision::TextfieldType Mana_dyn() { return Mana; }
		static ::battle::vision::TextfieldType Name;
		static inline ::battle::vision::TextfieldType Name_dyn() { return Name; }
};

} // end namespace battle
} // end namespace vision

#endif /* INCLUDED_battle_vision_TextfieldType */ 
