// Generated by Haxe 3.4.7
#ifndef INCLUDED_MathUtils
#define INCLUDED_MathUtils

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(MathUtils)
HX_DECLARE_CLASS2(openfl,geom,Point)
HX_DECLARE_CLASS2(openfl,geom,Rectangle)



class HXCPP_CLASS_ATTRIBUTES MathUtils_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MathUtils_obj OBJ_;
		MathUtils_obj();

	public:
		enum { _hx_ClassId = 0x03cae961 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="MathUtils")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"MathUtils"); }

		hx::ObjectPtr< MathUtils_obj > __new() {
			hx::ObjectPtr< MathUtils_obj > __this = new MathUtils_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< MathUtils_obj > __alloc(hx::Ctx *_hx_ctx) {
			MathUtils_obj *__this = (MathUtils_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MathUtils_obj), false, "MathUtils"));
			*(void **)__this = MathUtils_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MathUtils_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MathUtils","\x29","\x43","\x9d","\xc9"); }

		static int sign(Float v);
		static ::Dynamic sign_dyn();

		static bool inRange(Float number,Float leftBorder,Float rightBorder, ::Dynamic leftIncluded, ::Dynamic rightIncluded);
		static ::Dynamic inRange_dyn();

		static bool inside( ::openfl::geom::Point point, ::openfl::geom::Rectangle field);
		static ::Dynamic inside_dyn();

		static Float distance( ::openfl::geom::Point point1, ::openfl::geom::Point point2);
		static ::Dynamic distance_dyn();

		static int randomInt(int leftBorder,int rightBorder);
		static ::Dynamic randomInt_dyn();

		static bool flip();
		static ::Dynamic flip_dyn();

};


#endif /* INCLUDED_MathUtils */ 
