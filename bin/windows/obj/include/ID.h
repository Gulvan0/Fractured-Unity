// Generated by Haxe 3.4.7
#ifndef INCLUDED_ID
#define INCLUDED_ID

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ID)


class ID_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef ID_obj OBJ_;

	public:
		ID_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("ID","\xdb","\x3f","\x00","\x00"); }
		::String __ToString() const { return HX_HCSTRING("ID.","\xf3","\x9f","\x37","\x00") + _hx_tag; }

		static ::ID BoGhostStrike;
		static inline ::ID BoGhostStrike_dyn() { return BoGhostStrike; }
		static ::ID BuffLgCharged;
		static inline ::ID BuffLgCharged_dyn() { return BuffLgCharged; }
		static ::ID BuffLgClarity;
		static inline ::ID BuffLgClarity_dyn() { return BuffLgClarity; }
		static ::ID BuffLgConductivity;
		static inline ::ID BuffLgConductivity_dyn() { return BuffLgConductivity; }
		static ::ID BuffLgEnergized;
		static inline ::ID BuffLgEnergized_dyn() { return BuffLgEnergized; }
		static ::ID BuffLgReenergizing;
		static inline ::ID BuffLgReenergizing_dyn() { return BuffLgReenergizing; }
		static ::ID BuffLgSnared;
		static inline ::ID BuffLgSnared_dyn() { return BuffLgSnared; }
		static ::ID BuffLgStrikeback;
		static inline ::ID BuffLgStrikeback_dyn() { return BuffLgStrikeback; }
		static ::ID EmptyAbility;
		static inline ::ID EmptyAbility_dyn() { return EmptyAbility; }
		static ::ID LgArcFlash;
		static inline ::ID LgArcFlash_dyn() { return LgArcFlash; }
		static ::ID LgCharge;
		static inline ::ID LgCharge_dyn() { return LgCharge; }
		static ::ID LgDisrupt;
		static inline ::ID LgDisrupt_dyn() { return LgDisrupt; }
		static ::ID LgEMPBlast;
		static inline ::ID LgEMPBlast_dyn() { return LgEMPBlast; }
		static ::ID LgElectricalStorm;
		static inline ::ID LgElectricalStorm_dyn() { return LgElectricalStorm; }
		static ::ID LgEnergize;
		static inline ::ID LgEnergize_dyn() { return LgEnergize; }
		static ::ID LgHighVoltage;
		static inline ::ID LgHighVoltage_dyn() { return LgHighVoltage; }
		static ::ID LgLightningBolt;
		static inline ::ID LgLightningBolt_dyn() { return LgLightningBolt; }
		static ::ID LgShockTherapy;
		static inline ::ID LgShockTherapy_dyn() { return LgShockTherapy; }
		static ::ID LgStrikeback;
		static inline ::ID LgStrikeback_dyn() { return LgStrikeback; }
		static ::ID LgThunderbirdSoul;
		static inline ::ID LgThunderbirdSoul_dyn() { return LgThunderbirdSoul; }
		static ::ID LgVoltSnare;
		static inline ::ID LgVoltSnare_dyn() { return LgVoltSnare; }
		static ::ID LockAbility;
		static inline ::ID LockAbility_dyn() { return LockAbility; }
		static ::ID NullID;
		static inline ::ID NullID_dyn() { return NullID; }
		static ::ID Player;
		static inline ::ID Player_dyn() { return Player; }
		static ::ID StubAbility;
		static inline ::ID StubAbility_dyn() { return StubAbility; }
		static ::ID UnitArchghost;
		static inline ::ID UnitArchghost_dyn() { return UnitArchghost; }
		static ::ID UnitGhost;
		static inline ::ID UnitGhost_dyn() { return UnitGhost; }
		static ::ID UnitHero;
		static inline ::ID UnitHero_dyn() { return UnitHero; }
};


#endif /* INCLUDED_ID */ 
