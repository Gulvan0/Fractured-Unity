// Generated by Haxe 3.4.7
#ifndef INCLUDED_roaming_Tree
#define INCLUDED_roaming_Tree

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Element)
HX_DECLARE_CLASS1(roaming,Ability)
HX_DECLARE_CLASS1(roaming,Tree)
HX_DECLARE_CLASS1(roaming,TreeAbility)

namespace roaming{


class HXCPP_CLASS_ATTRIBUTES Tree_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Tree_obj OBJ_;
		Tree_obj();

	public:
		enum { _hx_ClassId = 0x0a7306eb };

		void __construct( ::Element element);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="roaming.Tree")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"roaming.Tree"); }
		static hx::ObjectPtr< Tree_obj > __new( ::Element element);
		static hx::ObjectPtr< Tree_obj > __alloc(hx::Ctx *_hx_ctx, ::Element element);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Tree_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Tree","\x7e","\xc5","\xdc","\x37"); }

		::Array< ::Dynamic> tree;
		::Array< ::Dynamic> reqDeltaJ;
		 ::roaming::TreeAbility get(int i,int j);
		::Dynamic get_dyn();

		bool learn(int i,int j);
		::Dynamic learn_dyn();

		int reset();
		::Dynamic reset_dyn();

		 ::Dynamic iterator();
		::Dynamic iterator_dyn();

};

} // end namespace roaming

#endif /* INCLUDED_roaming_Tree */ 
