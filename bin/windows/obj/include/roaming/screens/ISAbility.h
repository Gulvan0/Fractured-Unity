// Generated by Haxe 3.4.7
#ifndef INCLUDED_roaming_screens_ISAbility
#define INCLUDED_roaming_screens_ISAbility

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(roaming,enums,Attribute)
HX_DECLARE_CLASS2(roaming,screens,ISAbility)

namespace roaming{
namespace screens{


class HXCPP_CLASS_ATTRIBUTES ISAbility_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		Float (hx::Object :: *_hx_getAbRadius)(); 
		static inline Float getAbRadius( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( static_cast< ::roaming::screens::ISAbility_obj *>(_hx_.mPtr->_hx_getInterface(0x92cc83d2)))->_hx_getAbRadius)();
		}
		void (hx::Object :: *_hx_put)(int i,int j); 
		static inline void put( ::Dynamic _hx_,int i,int j) {
			(_hx_.mPtr->*( static_cast< ::roaming::screens::ISAbility_obj *>(_hx_.mPtr->_hx_getInterface(0x92cc83d2)))->_hx_put)(i,j);
		}
		void (hx::Object :: *_hx_splice)(int i); 
		static inline void splice( ::Dynamic _hx_,int i) {
			(_hx_.mPtr->*( static_cast< ::roaming::screens::ISAbility_obj *>(_hx_.mPtr->_hx_getInterface(0x92cc83d2)))->_hx_splice)(i);
		}
		void (hx::Object :: *_hx_learn)(int i,int j); 
		static inline void learn( ::Dynamic _hx_,int i,int j) {
			(_hx_.mPtr->*( static_cast< ::roaming::screens::ISAbility_obj *>(_hx_.mPtr->_hx_getInterface(0x92cc83d2)))->_hx_learn)(i,j);
		}
		void (hx::Object :: *_hx_power)( ::roaming::enums::Attribute att); 
		static inline void power( ::Dynamic _hx_, ::roaming::enums::Attribute att) {
			(_hx_.mPtr->*( static_cast< ::roaming::screens::ISAbility_obj *>(_hx_.mPtr->_hx_getInterface(0x92cc83d2)))->_hx_power)(att);
		}
		void (hx::Object :: *_hx_respec)(); 
		static inline void respec( ::Dynamic _hx_) {
			(_hx_.mPtr->*( static_cast< ::roaming::screens::ISAbility_obj *>(_hx_.mPtr->_hx_getInterface(0x92cc83d2)))->_hx_respec)();
		}
};

} // end namespace roaming
} // end namespace screens

#endif /* INCLUDED_roaming_screens_ISAbility */ 
