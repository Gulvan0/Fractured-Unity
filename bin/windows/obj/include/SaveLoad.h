// Generated by Haxe 3.4.7
#ifndef INCLUDED_SaveLoad
#define INCLUDED_SaveLoad

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Progress)
HX_DECLARE_CLASS0(SaveLoad)
HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS1(roaming,Player)
HX_DECLARE_CLASS1(roaming,Unit)



class HXCPP_CLASS_ATTRIBUTES SaveLoad_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SaveLoad_obj OBJ_;
		SaveLoad_obj();

	public:
		enum { _hx_ClassId = 0x3b6ff487 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="SaveLoad")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"SaveLoad"); }

		hx::ObjectPtr< SaveLoad_obj > __new() {
			hx::ObjectPtr< SaveLoad_obj > __this = new SaveLoad_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< SaveLoad_obj > __alloc(hx::Ctx *_hx_ctx) {
			SaveLoad_obj *__this = (SaveLoad_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SaveLoad_obj), false, "SaveLoad"));
			*(void **)__this = SaveLoad_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SaveLoad_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SaveLoad","\x23","\xf0","\x22","\xd5"); }

		static void save( ::Progress progress, ::roaming::Player player);
		static ::Dynamic save_dyn();

		static  ::Xml createProgressNode( ::Progress progress);
		static ::Dynamic createProgressNode_dyn();

		static  ::Xml createPlayerNode( ::roaming::Player player);
		static ::Dynamic createPlayerNode_dyn();

		static  ::Progress loadProgress();
		static ::Dynamic loadProgress_dyn();

		static  ::roaming::Player loadPlayer();
		static ::Dynamic loadPlayer_dyn();

		static  ::Xml getXml();
		static ::Dynamic getXml_dyn();

		static ::String generateMD5( ::Xml xml);
		static ::Dynamic generateMD5_dyn();

		static bool checkMD5( ::Xml xml);
		static ::Dynamic checkMD5_dyn();

		static ::String exefolder();
		static ::Dynamic exefolder_dyn();

};


#endif /* INCLUDED_SaveLoad */ 
